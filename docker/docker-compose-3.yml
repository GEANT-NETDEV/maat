services:

  maat:
    image: artifactory.software.geant.org/spa-docker/maat:1.0.11
    hostname: $MAAT_HOST
    ports:
      - "8080:8080"
    environment:
      - MAAT_ROLE_GET_ONLY=$MAAT_ROLE_GET_ONLY
      - MAAT_ROLE_POST_ONLY=$MAAT_ROLE_POST_ONLY
      - MAAT_ROLE_DELETE_ONLY=$MAAT_ROLE_DELETE_ONLY
      - MAAT_ROLE_PATCH_ONLY=$MAAT_ROLE_PATCH_ONLY
      - KEYCLOAK_ENABLED=true
      - KEYCLOAK_HOST=$KEYCLOAK_HOST
      - KEYCLOAK_PORT=$KEYCLOAK_PORT
      - KEYCLOAK_CLIENT_ID_FOR_USERS=$KEYCLOAK_CLIENT_ID_FOR_USERS
      - KEYCLOAK_AUTHORIZATION_L1_ROLES=$KEYCLOAK_AUTHORIZATION_L1_ROLES
      - KEYCLOAK_AUTHORIZATION_L2_FILTERS=$KEYCLOAK_AUTHORIZATION_L2_FILTERS
      - server.ssl.enabled=true
      - MONGO_HOST=$MONGODB_HOST
      - MONGO_USER=$MONGO_USER
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MAAT_PORT=$MAAT_PORT
      - MAAT_RESOURCE_PROTOCOL=$MAAT_RESOURCE_PROTOCOL
      - MAAT_RESOURCE_ADDRESS=$MAAT_RESOURCE_ADDRESS
      - MAAT_RESOURCE_PORT=$MAAT_RESOURCE_PORT
      - MAAT_SERVICE_PROTOCOL=$MAAT_SERVICE_PROTOCOL
      - MAAT_SERVICE_ADDRESS=$MAAT_SERVICE_ADDRESS
      - MAAT_SERVICE_PORT=$MAAT_SERVICE_PORT
      - LOGGING_CONFIG=classpath:logback-with-file-and-console.xml
    depends_on:
      mongodb-maat:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "(wget -qO- http://localhost:8080 --server-response 2>&1 | grep -E \"(401|200)\" || wget -qO- https://localhost:8080 --no-check-certificate --server-response 2>&1 | grep -E \"(401|200)\") || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10

  mongodb-maat:
    image: mongo:7.0.4
    hostname: $MONGODB_HOST
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - mongodb-maat:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    depends_on:
      keycloak-dev:
        condition: service_healthy
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 10

  eventListener:
    image: artifactory.software.geant.org/spa-docker/eventlistener:1.0.4
    hostname: $EVENT_LISTENER_HOST
    ports:
      - "8081:8081"
    depends_on:
      mongodb-eventlistener:
        condition: service_healthy
      maat:
        condition: service_healthy
    restart: on-failure
    environment:
      - MONGO_HOST=$MONGODB_EL_HOST
      - MONGO_USER=$MONGO_EL_USER
      - MONGO_PASSWORD=$MONGO_EL_PASSWORD
      - MONGO_PORT=$MONGO_EL_PORT
      - MONGO_TIMEOUT=$MONGO_EL_TIMEOUT
      - AUTO_REGISTER=off
      - MAAT_PROTOCOL=$MAAT_PROTOCOL
      - MAAT_HOST=$MAAT_HOST
      - MAAT_PORT=$MAAT_PORT
      - EVENT_LISTENER_PROTOCOL=$EVENT_LISTENER_PROTOCOL
      - EVENT_LISTENER_HOST=$EVENT_LISTENER_HOST
      - EVENT_LISTENER_PORT=$EVENT_LISTENER_PORT
      - KEYCLOAK_PROTOCOL=$KEYCLOAK_PROTOCOL
      - KEYCLOAK_HOST=$KEYCLOAK_HOST
      - KEYCLOAK_PORT=$KEYCLOAK_PORT
      - KEYCLOAK_CLIENT_ID=$KEYCLOAK_CLIENT_ID_FOR_CLIENTS
      - KEYCLOAK_GRANT_TYPE=$KEYCLOAK_GRANT_TYPE_FOR_CLIENTS
      - KEYCLOAK_CLIENT_SECRET=$KEYCLOAK_CLIENT_SECRET
      - LOGGING_CONFIG=classpath:logback-with-file-and-console.xml

  mongodb-eventlistener:
    image: mongo:7.0.4
    hostname: $MONGODB_EL_HOST
    ports:
      - "27022:27017"
    expose:
      - "27022"
    volumes:
      - mongodb-eventlistener:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_EL_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_EL_PASSWORD
    depends_on:
      keycloak-dev:
        condition: service_healthy
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 10

  keycloak-dev:
    image: quay.io/keycloak/keycloak:25.0.4
    hostname: $KEYCLOAK_HOST
    ports:
      - "8090:8090"
    volumes:
      - keycloak_data:/opt/keycloak/data
    expose:
      - "8090"
    environment:
      - KEYCLOAK_ADMIN=$KEYCLOAK_USER
      - KEYCLOAK_ADMIN_PASSWORD=$KEYCLOAK_PASS
    command: start-dev --http-port 8090 --health-enabled=true
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3"]
      interval: 30s
      timeout: 10s
      retries: 10
    restart: unless-stopped


  keycloak-dev-setup:
    image: quay.io/keycloak/keycloak:25.0.4
    depends_on:
      keycloak-dev:
        condition: service_healthy
    volumes:
      - ./keycloak_conf/keycloak-setup.sh:/opt/keycloak/scripts/keycloak-setup.sh
    environment:
      - KEYCLOAK_HOST=$KEYCLOAK_HOST
      - KEYCLOAK_USER=$KEYCLOAK_USER
      - KEYCLOAK_PASS=$KEYCLOAK_PASS
      - KEYCLOAK_CLIENT_ID_FOR_CLIENTS=$KEYCLOAK_CLIENT_ID_FOR_CLIENTS
      - KEYCLOAK_CLIENT_ID_FOR_USERS=$KEYCLOAK_CLIENT_ID_FOR_USERS
      - KEYCLOAK_CLIENT_SECRET=$KEYCLOAK_CLIENT_SECRET
    entrypoint: sh -c "sleep 1 && /opt/keycloak/scripts/keycloak-setup.sh"

  react:
    image: "artifactory.software.geant.org/spa-docker/maat-ui/assets:make-build-15766860"
    read_only: true
    ports:
      - "9100:9100"
    environment:
      - LISTEN_PORT=9100
      - S6_READ_ONLY_ROOT=1
      - MAIN_DOMAIN=localhost.maat-ui.pl
      - USE_REDUX_LOGGER=false
      - SENTRY_DSN=
      - SENTRY_ENVIRONMENT=

      - SERVICES_MAAT_API_URL=$MAAT_SERVICE_PROTOCOL://$MAAT_SERVICE_ADDRESS:$MAAT_SERVICE_PORT/serviceInventoryManagement/v4.0.0/service
      - RESOURCES_MAAT_API_URL=$MAAT_RESOURCE_PROTOCOL://$MAAT_RESOURCE_ADDRESS:$MAAT_RESOURCE_PORT/resourceInventoryManagement/v4.0.0/resource

      - SERVICES_MAAT_SCHEMA_LOCATION_URL=https://bitbucket.software.geant.org/projects/OSSBSS/repos/maat-schema/raw/TMF638-ServiceInventory-v4-pionier.json
      - RESOURCES_MAAT_SCHEMA_LOCATION_URL=https://bitbucket.software.geant.org/projects/OSSBSS/repos/maat-schema/raw/TMF639-ResourceInventory-v4-pionier.json
    tmpfs:
      - "/run:exec"
      - "/var/cache/nginx"
      - "/var/lib/nginx/tmp:uid=999,gid=998"
      - "/var/log/nginx:uid=999,gid=998"  # default error log location is opened before config file is read

volumes:
  mongodb-maat:
  mongodb-eventlistener:
  keycloak_data: