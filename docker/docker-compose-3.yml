version: '3'

services:

  maat:
    image: artifactory.software.geant.org/spa-docker/maat:1.0.3
    hostname: $MAAT_HOST
    ports:
      - "8080:8080"
    environment:
      - spring.security.role.get_only=get
      - spring.security.role.post_only=post
      - spring.security.role.delete_only=delete
      - spring.security.role.patch_only=patch
      - server.ssl.enabled=true
      - keycloak.enabled=true
      - MONGO_HOST=$MONGODB_HOST
      - MONGO_USER=$MONGO_USER
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MAAT_RESOURCE_PROTOCOL=$MAAT_RESOURCE_PROTOCOL
      - MAAT_RESOURCE_ADDRESS=$MAAT_RESOURCE_ADDRESS
      - MAAT_RESOURCE_PORT=$MAAT_RESOURCE_PORT
      - MAAT_SERVICE_PROTOCOL=$MAAT_SERVICE_PROTOCOL
      - MAAT_SERVICE_ADDRESS=$MAAT_SERVICE_ADDRESS
      - MAAT_SERVICE_PORT=$MAAT_SERVICE_PORT

  mongodb:
    image: mongo:7.0.4
    hostname: $MONGODB_HOST
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - mongodb:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD

  eventListener:
    image: artifactory.software.geant.org/spa-docker/eventlistener:0.5
    hostname: $EVENT_LISTENER_HOST
    ports:
      - "8081:8081"
    depends_on:
      - maat
    restart: on-failure
    environment:
      - MONGO_HOST=$MONGODB_EL_HOST
      - MONGO_USER=$MONGO_EL_USER
      - MONGO_PASSWORD=$MONGO_EL_PASSWORD
      - MONGO_PORT=$MONGO_EL_PORT
      - MONGO_TIMEOUT=$MONGO_EL_TIMEOUT
      - AUTO_REGISTER=off
      - MAAT_HOST=$MAAT_HOST
      - MAAT_PORT=$MAAT_PORT
      - EVENT_LISTENER_HOST=$EVENT_LISTENER_HOST
      - EVENT_LISTENER_PORT=$EVENT_LISTENER_PORT

  mongodb2:
    image: mongo:7.0.4
    hostname: $MONGODB_EL_HOST
    ports:
      - "27022:27017"
    expose:
      - "27022"
    volumes:
      - mongodb2:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_EL_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_EL_PASSWORD

  keycloak-dev:
    image: quay.io/keycloak/keycloak:25.0.4
    hostname: $KEYCLOAK_HOST
    ports:
      - "8090:8090"
    expose:
      - "8090"
    volumes:
      - keycloak_data:/opt/keycloak/data
    environment:
      - KEYCLOAK_ADMIN=$KEYCLOAK_USER
      - KEYCLOAK_ADMIN_PASSWORD=$KEYCLOAK_PASS
    command: start-dev --http-port 8090

  keycloak-dev-setup:
    image: quay.io/keycloak/keycloak:25.0.4
    depends_on:
      - keycloak-dev
    profiles:
      - keycloak_setup
    entrypoint: sh -c "sleep 1
      && /opt/keycloak/bin/kcadm.sh config credentials --server http://keycloak-dev:8090 --realm master --user admin --password admin
      && /opt/keycloak/bin/kcadm.sh create realms -s realm=MaatRealm -s enabled=true
      && /opt/keycloak/bin/kcadm.sh create users -r MaatRealm -s username=test -s enabled=true
      && /opt/keycloak/bin/kcadm.sh set-password -r MaatRealm --username test --new-password test
      && /opt/keycloak/bin/kcadm.sh create roles -r MaatRealm -s name=inv3user
      && /opt/keycloak/bin/kcadm.sh create clients -r MaatRealm -s clientId=inv3 -s enabled=true -s clientAuthenticatorType=client-secret -s secret=d0b8122f-8dfb-46b7-b68a-f5cc4e25d123 -s directAccessGrantsEnabled=true
      && /opt/keycloak/bin/kcadm.sh add-roles --username test --rolename inv3user -r MaatRealm"

volumes:
  mongodb:
  mongodb2:
  keycloak_data: