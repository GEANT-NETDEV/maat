{
  "collection": {
    "_": {
      "postman_id": "5cea0ced-c614-41b6-84b2-10330b86eaa0"
    },
    "item": [
      {
        "id": "59266258-07f1-442f-a474-8940b57282ca",
        "name": "N1",
        "item": [
          {
            "id": "9c132abc-3684-43aa-9aec-4cebfab17c51",
            "name": "/Service",
            "request": {
              "description": {
                "content": "This operation creates a Service",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Service_Inventory}}service"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer 1321321"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\"state\":\"active\",\"serviceSpecification\":{\"id\":\"1212\",\"@referredType\":\"ServiceSpecification\"}}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c01ec730-3f29-4d7a-a7d2-444c6f200c8e",
                  "type": "text/javascript",
                  "exec": [
                    "var jsonData = pm.response.json();",
                    "",
                    "if (Array.isArray(jsonData)) { ",
                    "  ",
                    "    pm.test('Array not expected as response', function (){pm.expect.fail()});",
                    "  ",
                    "",
                    "}",
                    "",
                    "pm.test(\"Successful POST request\", function () {",
                    "    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
                    "});",
                    "",
                    "var instance = pm.response.json();",
                    "var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "",
                    "pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "",
                    "",
                    "",
                    "pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "",
                    "pm.globals.set('SUPPORTINGSERVICESE01', instance['supportingService']);",
                    "pm.globals.set('FEATURESE01', instance['feature']);",
                    "pm.globals.set('SERVICERELATIONSHIPSE01', instance['serviceRelationship']);",
                    "pm.globals.set('STATESE01', instance['state']);",
                    "pm.globals.set('RELATEDENTITYSE01', instance['relatedEntity']);",
                    "pm.globals.set('STARTMODESE01', instance['startMode']);",
                    "pm.globals.set('STARTDATESE01', instance['startDate']);",
                    "pm.globals.set('ISBUNDLESE01', instance['isBundle']);",
                    "pm.globals.set('SERVICEORDERITEMSE01', instance['serviceOrderItem']);",
                    "pm.globals.set('PLACESE01', instance['place']);",
                    "pm.globals.set('SERVICECHARACTERISTICSE01', instance['serviceCharacteristic']);",
                    "pm.globals.set('NOTESE01', instance['note']);",
                    "pm.globals.set('SERVICETYPESE01', instance['serviceType']);",
                    "pm.globals.set('SUPPORTINGRESOURCESE01', instance['supportingResource']);",
                    "pm.globals.set('HASSTARTEDSE01', instance['hasStarted']);",
                    "pm.globals.set('SERVICESPECIFICATIONSE01', instance['serviceSpecification']);",
                    "pm.globals.set('NAMESE01', instance['name']);",
                    "pm.globals.set('DESCRIPTIONSE01', instance['description']);",
                    "pm.globals.set('SERVICEDATESE01', instance['serviceDate']);",
                    "pm.globals.set('ENDDATESE01', instance['endDate']);",
                    "pm.globals.set('HREFSE01', instance['href']);",
                    "pm.globals.set('IDSE01', instance['id']);",
                    "pm.globals.set('RELATEDPARTYSE01', instance['relatedParty']);",
                    "pm.globals.set('ISSERVICEENABLEDSE01', instance['isServiceEnabled']);",
                    "pm.globals.set('ISSTATEFULSE01', instance['isStateful']);",
                    "pm.globals.set('CATEGORYSE01', instance['category']);",
                    "",
                    "pm.test('Body includes value held on state', function () {",
                    "  pm.expect(pm.response.text()).to.include(instance['state']);",
                    "});",
                    "",
                    "pm.test('Body includes value held on serviceDate', function () {",
                    "  pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "});",
                    "pm.test('Body includes value held on href', function () {",
                    "  pm.expect(pm.response.text()).to.include(instance['href']);",
                    "});",
                    "pm.test('Body includes value held on id', function () {",
                    "  pm.expect(pm.response.text()).to.include(instance['id']);",
                    "});",
                    ""
                  ],
                  "_lastExecutionId": "b13260dc-ce16-46c6-9e58-573cc92a563b"
                }
              }
            ]
          },
          {
            "id": "cace4249-774e-4373-bd36-f150effb6e74",
            "name": "/Service",
            "request": {
              "description": {
                "content": "This operation creates another Service",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Service_Inventory}}service"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer 1321321"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"state\": \"active\",\n  \"serviceSpecification\": {\n    \"id\": \"1212\",\n    \"@referredType\": \"ServiceSpecification\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b9b90099-84cb-43ec-9813-161c642d8656",
                  "type": "text/javascript",
                  "exec": [
                    "var jsonData = pm.response.json();",
                    "",
                    "if (Array.isArray(jsonData)) {",
                    "",
                    "  pm.test('Array not expected as response', function () { pm.expect.fail() });",
                    "",
                    "",
                    "}",
                    "",
                    "pm.test(\"Successful POST request\", function () {",
                    "  pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
                    "});",
                    "",
                    "if (pm.response.code == 202) {",
                    "  setTimeout(function () { }, [pm.variables.get(\"delay\")]);",
                    "  postman.setNextRequest('get202')",
                    "}",
                    "else {",
                    "  var instance = pm.response.json();",
                    "  var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "",
                    "  pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "",
                    "",
                    "",
                    "  pm.test('Response has serviceDate attribute', function () { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "  pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "  pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "",
                    "  pm.globals.set('SUPPORTINGSERVICESE02', instance['supportingService']);",
                    "  pm.globals.set('FEATURESE02', instance['feature']);",
                    "  pm.globals.set('SERVICERELATIONSHIPSE02', instance['serviceRelationship']);",
                    "  pm.globals.set('STATESE02', instance['state']);",
                    "  pm.globals.set('RELATEDENTITYSE02', instance['relatedEntity']);",
                    "  pm.globals.set('STARTMODESE02', instance['startMode']);",
                    "  pm.globals.set('STARTDATESE02', instance['startDate']);",
                    "  pm.globals.set('ISBUNDLESE02', instance['isBundle']);",
                    "  pm.globals.set('SERVICEORDERITEMSE02', instance['serviceOrderItem']);",
                    "  pm.globals.set('PLACESE02', instance['place']);",
                    "  pm.globals.set('SERVICECHARACTERISTICSE02', instance['serviceCharacteristic']);",
                    "  pm.globals.set('NOTESE02', instance['note']);",
                    "  pm.globals.set('SERVICETYPESE02', instance['serviceType']);",
                    "  pm.globals.set('SUPPORTINGRESOURCESE02', instance['supportingResource']);",
                    "  pm.globals.set('HASSTARTEDSE02', instance['hasStarted']);",
                    "  pm.globals.set('SERVICESPECIFICATIONSE02', instance['serviceSpecification']);",
                    "  pm.globals.set('NAMESE02', instance['name']);",
                    "  pm.globals.set('DESCRIPTIONSE02', instance['description']);",
                    "  pm.globals.set('SERVICEDATESE02', instance['serviceDate']);",
                    "  pm.globals.set('ENDDATESE02', instance['endDate']);",
                    "  pm.globals.set('HREFSE02', instance['href']);",
                    "  pm.globals.set('IDSE02', instance['id']);",
                    "  pm.globals.set('RELATEDPARTYSE02', instance['relatedParty']);",
                    "  pm.globals.set('ISSERVICEENABLEDSE02', instance['isServiceEnabled']);",
                    "  pm.globals.set('ISSTATEFULSE02', instance['isStateful']);",
                    "  pm.globals.set('CATEGORYSE02', instance['category']);",
                    "",
                    "  pm.test('Body includes value held on state', function () {",
                    "    pm.expect(pm.response.text()).to.include(instance['state']);",
                    "  });",
                    "  pm.test('Body includes value held on serviceDate', function () {",
                    "    pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "  });",
                    "  pm.test('Body includes value held on href', function () {",
                    "    pm.expect(pm.response.text()).to.include(instance['href']);",
                    "  });",
                    "  pm.test('Body includes value held on id', function () {",
                    "    pm.expect(pm.response.text()).to.include(instance['id']);",
                    "  });",
                    "}"
                  ],
                  "_lastExecutionId": "6b9f85c5-aba6-4958-b23d-0b5fdcc2909c"
                }
              }
            ]
          },
          {
            "id": "07fefa7a-f4ff-4751-aeb1-63a3dbb8d74c",
            "name": "/Service/{{IDSE01}}",
            "request": {
              "description": {
                "content": "This operation search for one of the created Service",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "{{IDSE01}}"
                ],
                "host": [
                  "{{Service_Inventory}}service"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer 1321321"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "374acb5c-b216-471f-b3b2-65f21a7dd3aa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "  ",
                    "  ",
                    "  ",
                    "var jsonData = pm.response.json();",
                    "  ",
                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                    "    jsonData.forEach(function (instance, index) {",
                    "      ",
                    "        var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on state', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['state']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceDate', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "        });",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                    "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE01\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE01');});",
                    "            pm.test('feature is ' + pm.globals.get(\"FEATURESE01\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE01');});",
                    "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE01\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE01');});",
                    "            pm.test('state is ' + pm.globals.get(\"STATESE01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE01');});",
                    "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE01');});",
                    "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE01\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE01');});",
                    "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE01\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE01');});",
                    "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE01\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE01');});",
                    "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE01\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE01');});",
                    "            pm.test('place is ' + pm.globals.get(\"PLACESE01\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE01');});",
                    "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE01\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE01');});",
                    "            pm.test('note is ' + pm.globals.get(\"NOTESE01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE01');});",
                    "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE01\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE01');});",
                    "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE01\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE01');});",
                    "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE01\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE01');});",
                    "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE01\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE01');});",
                    "            pm.test('name is ' + pm.globals.get(\"NAMESE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE01');});",
                    "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE01');});",
                    "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE01\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE01');});",
                    "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE01\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE01');});",
                    "            pm.test('href is ' + pm.globals.get(\"HREFSE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE01');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDSE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE01');});",
                    "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE01');});",
                    "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE01\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE01');});",
                    "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE01\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE01');});",
                    "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE01');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                    "            pm.test('IDSE02 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "          ",
                    "    });",
                    "  }",
                    "  else {",
                    "    var instance = pm.response.json();",
                    "    var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on state', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['state']);",
                    "        });",
                    "",
                    "        pm.test('Body includes value held on serviceDate', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "        });",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                    "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE01\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE01');});",
                    "            pm.test('feature is ' + pm.globals.get(\"FEATURESE01\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE01');});",
                    "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE01\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE01');});",
                    "            pm.test('state is ' + pm.globals.get(\"STATESE01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE01');});",
                    "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE01');});",
                    "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE01\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE01');});",
                    "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE01\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE01');});",
                    "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE01\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE01');});",
                    "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE01\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE01');});",
                    "            pm.test('place is ' + pm.globals.get(\"PLACESE01\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE01');});",
                    "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE01\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE01');});",
                    "            pm.test('note is ' + pm.globals.get(\"NOTESE01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE01');});",
                    "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE01\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE01');});",
                    "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE01\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE01');});",
                    "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE01\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE01');});",
                    "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE01\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE01');});",
                    "            pm.test('name is ' + pm.globals.get(\"NAMESE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE01');});",
                    "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE01');});",
                    "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE01\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE01');});",
                    "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE01\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE01');});",
                    "            pm.test('href is ' + pm.globals.get(\"HREFSE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE01');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDSE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE01');});",
                    "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE01');});",
                    "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE01\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE01');});",
                    "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE01\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE01');});",
                    "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE01');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                    "            pm.test('IDSE02 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "",
                    "        ",
                    "   ",
                    "}",
                    "  ",
                    "  "
                  ],
                  "_lastExecutionId": "d0e088bc-37a3-46a0-b367-856f5412789f"
                }
              }
            ]
          },
          {
            "id": "adbcd240-9314-484f-aeba-d756780342f3",
            "name": "/Service/{{IDSE02}}",
            "request": {
              "description": {
                "content": "This operation search for the other one of the created Service",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "{{IDSE02}}"
                ],
                "host": [
                  "{{Service_Inventory}}service"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer 1321321"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "508ae278-b2ba-481b-a1dc-e9ad66c6226f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "  ",
                    "  ",
                    "  ",
                    "var jsonData = pm.response.json();",
                    "  ",
                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                    "    jsonData.forEach(function (instance, index) {",
                    "      ",
                    "        var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on state', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['state']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceDate', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "        });",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                    "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE02\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE02');});",
                    "            pm.test('feature is ' + pm.globals.get(\"FEATURESE02\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE02');});",
                    "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE02\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE02');});",
                    "            pm.test('state is ' + pm.globals.get(\"STATESE02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE02');});",
                    "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE02');});",
                    "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE02\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE02');});",
                    "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE02\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE02');});",
                    "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE02\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE02');});",
                    "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE02\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE02');});",
                    "            pm.test('place is ' + pm.globals.get(\"PLACESE02\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE02');});",
                    "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE02\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE02');});",
                    "            pm.test('note is ' + pm.globals.get(\"NOTESE02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE02');});",
                    "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE02\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE02');});",
                    "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE02\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE02');});",
                    "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE02\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE02');});",
                    "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE02\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE02');});",
                    "            pm.test('name is ' + pm.globals.get(\"NAMESE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE02');});",
                    "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE02');});",
                    "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE02\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE02');});",
                    "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE02\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE02');});",
                    "            pm.test('href is ' + pm.globals.get(\"HREFSE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE02');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDSE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE02');});",
                    "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE02');});",
                    "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE02\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE02');});",
                    "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE02\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE02');});",
                    "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE02');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                    "            pm.test('IDSE01 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "          ",
                    "    });",
                    "  }",
                    "  else {",
                    "    var instance = pm.response.json();",
                    "    var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on state', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['state']);",
                    "        });",
                    "",
                    "        pm.test('Body includes value held on serviceDate', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "        });",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                    "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE02\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE02');});",
                    "            pm.test('feature is ' + pm.globals.get(\"FEATURESE02\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE02');});",
                    "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE02\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE02');});",
                    "            pm.test('state is ' + pm.globals.get(\"STATESE02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE02');});",
                    "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE02');});",
                    "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE02\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE02');});",
                    "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE02\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE02');});",
                    "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE02\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE02');});",
                    "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE02\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE02');});",
                    "            pm.test('place is ' + pm.globals.get(\"PLACESE02\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE02');});",
                    "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE02\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE02');});",
                    "            pm.test('note is ' + pm.globals.get(\"NOTESE02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE02');});",
                    "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE02\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE02');});",
                    "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE02\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE02');});",
                    "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE02\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE02');});",
                    "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE02\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE02');});",
                    "            pm.test('name is ' + pm.globals.get(\"NAMESE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE02');});",
                    "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE02');});",
                    "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE02\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE02');});",
                    "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE02\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE02');});",
                    "            pm.test('href is ' + pm.globals.get(\"HREFSE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE02');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDSE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE02');});",
                    "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE02');});",
                    "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE02\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE02');});",
                    "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE02\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE02');});",
                    "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE02');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                    "            pm.test('IDSE01 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "",
                    "        ",
                    "   ",
                    "}",
                    "  ",
                    "  "
                  ],
                  "_lastExecutionId": "df4a34cf-09a2-45ba-b17f-3e176cc3d9e8"
                }
              }
            ]
          }
        ],
        "event": [],
        "protocolProfileBehavior": {}
      },
      {
        "id": "bec8d0a8-ee42-4ee0-9392-1a9c832e21d7",
        "name": "N2",
        "item": [
          {
            "id": "218a27fa-3dbe-4b26-93f7-d26b3ec929d9",
            "name": "/Service?fields=state",
            "request": {
              "description": {
                "content": "This operation filter a Service",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Service_Inventory}}service"
                ],
                "query": [
                  {
                    "key": "fields",
                    "value": "state"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer 1321321"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6c8581df-d2fe-48b3-9d21-db7baf6bcc2d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "96401e11-ff75-4be8-9b4d-056882180d08"
                }
              }
            ]
          },
          {
            "id": "0d1eea38-e2b8-428d-84b4-a6f120160bd4",
            "name": "/Service?state={{STATESE01}}",
            "request": {
              "description": {
                "content": "This operation filter a Service",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Service_Inventory}}service"
                ],
                "query": [
                  {
                    "key": "state",
                    "value": "{{STATESE01}}"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer 1321321"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "442e894f-cd7a-4e82-8150-ede594d81eb0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "  ",
                    "  ",
                    "  ",
                    "var jsonData = pm.response.json();",
                    "  ",
                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                    "    jsonData.forEach(function (instance, index) {",
                    "      ",
                    "        var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on state', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['state']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceDate', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "        });",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                    "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE01\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE01');});",
                    "            pm.test('feature is ' + pm.globals.get(\"FEATURESE01\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE01');});",
                    "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE01\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE01');});",
                    "            pm.test('state is ' + pm.globals.get(\"STATESE01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE01');});",
                    "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE01');});",
                    "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE01\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE01');});",
                    "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE01\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE01');});",
                    "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE01\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE01');});",
                    "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE01\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE01');});",
                    "            pm.test('place is ' + pm.globals.get(\"PLACESE01\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE01');});",
                    "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE01\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE01');});",
                    "            pm.test('note is ' + pm.globals.get(\"NOTESE01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE01');});",
                    "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE01\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE01');});",
                    "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE01\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE01');});",
                    "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE01\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE01');});",
                    "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE01\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE01');});",
                    "            pm.test('name is ' + pm.globals.get(\"NAMESE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE01');});",
                    "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE01');});",
                    "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE01\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE01');});",
                    "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE01\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE01');});",
                    "            pm.test('href is ' + pm.globals.get(\"HREFSE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE01');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDSE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE01');});",
                    "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE01');});",
                    "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE01\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE01');});",
                    "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE01\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE01');});",
                    "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE01');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                    "            pm.test('IDSE02 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "          ",
                    "    });",
                    "  }",
                    "  else {",
                    "    var instance = pm.response.json();",
                    "    var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on state', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['state']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceDate', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "        });",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                    "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE01\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE01');});",
                    "            pm.test('feature is ' + pm.globals.get(\"FEATURESE01\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE01');});",
                    "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE01\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE01');});",
                    "            pm.test('state is ' + pm.globals.get(\"STATESE01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE01');});",
                    "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE01');});",
                    "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE01\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE01');});",
                    "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE01\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE01');});",
                    "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE01\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE01');});",
                    "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE01\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE01');});",
                    "            pm.test('place is ' + pm.globals.get(\"PLACESE01\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE01');});",
                    "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE01\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE01');});",
                    "            pm.test('note is ' + pm.globals.get(\"NOTESE01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE01');});",
                    "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE01\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE01');});",
                    "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE01\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE01');});",
                    "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE01\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE01');});",
                    "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE01\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE01');});",
                    "            pm.test('name is ' + pm.globals.get(\"NAMESE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE01');});",
                    "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE01');});",
                    "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE01\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE01');});",
                    "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE01\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE01');});",
                    "            pm.test('href is ' + pm.globals.get(\"HREFSE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE01');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDSE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE01');});",
                    "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE01');});",
                    "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE01\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE01');});",
                    "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE01\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE01');});",
                    "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE01');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                    "            pm.test('IDSE02 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "",
                    "        ",
                    "   ",
                    "}",
                    "  ",
                    "  "
                  ],
                  "_lastExecutionId": "541dfc8c-9395-47ab-b918-401fa089ac62"
                }
              }
            ]
          },
          {
            "id": "61281603-b8dc-459d-bf3c-3f77d55bb156",
            "name": "/Service?state={{STATESE02}}",
            "request": {
              "description": {
                "content": "This operation filter a Service",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Service_Inventory}}service"
                ],
                "query": [
                  {
                    "key": "state",
                    "value": "{{STATESE02}}"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer 1321321"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b18ebaf0-41d4-4747-8c99-53118a955a38",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "  ",
                    "  ",
                    "  ",
                    "var jsonData = pm.response.json();",
                    "  ",
                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                    "    jsonData.forEach(function (instance, index) {",
                    "      ",
                    "        var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on state', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['state']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceDate', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "        });",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                    "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE02\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE02');});",
                    "            pm.test('feature is ' + pm.globals.get(\"FEATURESE02\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE02');});",
                    "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE02\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE02');});",
                    "            pm.test('state is ' + pm.globals.get(\"STATESE02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE02');});",
                    "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE02');});",
                    "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE02\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE02');});",
                    "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE02\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE02');});",
                    "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE02\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE02');});",
                    "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE02\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE02');});",
                    "            pm.test('place is ' + pm.globals.get(\"PLACESE02\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE02');});",
                    "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE02\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE02');});",
                    "            pm.test('note is ' + pm.globals.get(\"NOTESE02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE02');});",
                    "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE02\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE02');});",
                    "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE02\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE02');});",
                    "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE02\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE02');});",
                    "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE02\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE02');});",
                    "            pm.test('name is ' + pm.globals.get(\"NAMESE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE02');});",
                    "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE02');});",
                    "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE02\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE02');});",
                    "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE02\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE02');});",
                    "            pm.test('href is ' + pm.globals.get(\"HREFSE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE02');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDSE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE02');});",
                    "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE02');});",
                    "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE02\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE02');});",
                    "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE02\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE02');});",
                    "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE02');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                    "            pm.test('IDSE01 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "          ",
                    "    });",
                    "  }",
                    "  else {",
                    "    var instance = pm.response.json();",
                    "    var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on state', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['state']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceDate', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "        });",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                    "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE02\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE02');});",
                    "            pm.test('feature is ' + pm.globals.get(\"FEATURESE02\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE02');});",
                    "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE02\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE02');});",
                    "            pm.test('state is ' + pm.globals.get(\"STATESE02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE02');});",
                    "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE02');});",
                    "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE02\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE02');});",
                    "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE02\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE02');});",
                    "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE02\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE02');});",
                    "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE02\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE02');});",
                    "            pm.test('place is ' + pm.globals.get(\"PLACESE02\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE02');});",
                    "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE02\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE02');});",
                    "            pm.test('note is ' + pm.globals.get(\"NOTESE02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE02');});",
                    "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE02\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE02');});",
                    "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE02\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE02');});",
                    "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE02\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE02');});",
                    "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE02\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE02');});",
                    "            pm.test('name is ' + pm.globals.get(\"NAMESE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE02');});",
                    "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE02');});",
                    "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE02\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE02');});",
                    "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE02\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE02');});",
                    "            pm.test('href is ' + pm.globals.get(\"HREFSE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE02');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDSE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE02');});",
                    "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE02');});",
                    "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE02\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE02');});",
                    "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE02\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE02');});",
                    "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE02');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                    "            pm.test('IDSE01 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "",
                    "        ",
                    "   ",
                    "}",
                    "  ",
                    "  "
                  ],
                  "_lastExecutionId": "c8347850-1bee-4e9f-bdc6-08ca7be08154"
                }
              }
            ]
          },
          {
            "id": "29abba78-e1eb-4acd-b0fc-357b4f5646fc",
            "name": "/Service?fields=serviceSpecification",
            "request": {
              "description": {
                "content": "This operation filter a Service",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Service_Inventory}}service"
                ],
                "query": [
                  {
                    "key": "fields",
                    "value": "serviceSpecification"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer 1321321"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "86b4e82d-c1f8-484f-8d39-3c70b56e4634",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fb213a72-0117-4849-8e6a-8ed628042233"
                }
              }
            ]
          },
          {
            "id": "b83631cb-9801-4cb2-ad06-2a0bb98444b0",
            "name": "/Service?fields=serviceDate",
            "request": {
              "description": {
                "content": "This operation filter a Service",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Service_Inventory}}service"
                ],
                "query": [
                  {
                    "key": "fields",
                    "value": "serviceDate"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer 1321321"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "50e64586-e819-41e2-a5ee-eaded948ddf3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d1aef3e-13eb-4f1f-9022-e2e3720b2e6e"
                }
              }
            ]
          },
          {
            "id": "26f17800-6109-49f1-8fec-db49b3fff7c9",
            "name": "/Service?serviceDate={{SERVICEDATESE01}}",
            "request": {
              "description": {
                "content": "This operation filter a Service",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Service_Inventory}}service"
                ],
                "query": [
                  {
                    "key": "serviceDate",
                    "value": "\"{{SERVICEDATESE01}}\""
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer 1321321"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0d288c9d-b208-470d-a4fa-a1ce0d14dd12",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "  ",
                    "  ",
                    "  ",
                    "var jsonData = pm.response.json();",
                    "  ",
                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                    "    jsonData.forEach(function (instance, index) {",
                    "      ",
                    "        var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on state', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['state']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceDate', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "        });",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                    "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE01\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE01');});",
                    "            pm.test('feature is ' + pm.globals.get(\"FEATURESE01\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE01');});",
                    "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE01\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE01');});",
                    "            pm.test('state is ' + pm.globals.get(\"STATESE01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE01');});",
                    "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE01');});",
                    "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE01\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE01');});",
                    "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE01\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE01');});",
                    "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE01\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE01');});",
                    "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE01\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE01');});",
                    "            pm.test('place is ' + pm.globals.get(\"PLACESE01\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE01');});",
                    "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE01\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE01');});",
                    "            pm.test('note is ' + pm.globals.get(\"NOTESE01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE01');});",
                    "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE01\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE01');});",
                    "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE01\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE01');});",
                    "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE01\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE01');});",
                    "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE01\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE01');});",
                    "            pm.test('name is ' + pm.globals.get(\"NAMESE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE01');});",
                    "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE01');});",
                    "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE01\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE01');});",
                    "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE01\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE01');});",
                    "            pm.test('href is ' + pm.globals.get(\"HREFSE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE01');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDSE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE01');});",
                    "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE01');});",
                    "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE01\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE01');});",
                    "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE01\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE01');});",
                    "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE01');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                    "            pm.test('IDSE02 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "          ",
                    "    });",
                    "  }",
                    "  else {",
                    "    var instance = pm.response.json();",
                    "    var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on state', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['state']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceDate', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "        });",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                    "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE01\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE01');});",
                    "            pm.test('feature is ' + pm.globals.get(\"FEATURESE01\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE01');});",
                    "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE01\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE01');});",
                    "            pm.test('state is ' + pm.globals.get(\"STATESE01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE01');});",
                    "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE01');});",
                    "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE01\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE01');});",
                    "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE01\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE01');});",
                    "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE01\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE01');});",
                    "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE01\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE01');});",
                    "            pm.test('place is ' + pm.globals.get(\"PLACESE01\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE01');});",
                    "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE01\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE01');});",
                    "            pm.test('note is ' + pm.globals.get(\"NOTESE01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE01');});",
                    "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE01\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE01');});",
                    "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE01\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE01');});",
                    "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE01\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE01');});",
                    "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE01\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE01');});",
                    "            pm.test('name is ' + pm.globals.get(\"NAMESE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE01');});",
                    "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE01');});",
                    "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE01\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE01');});",
                    "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE01\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE01');});",
                    "            pm.test('href is ' + pm.globals.get(\"HREFSE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE01');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDSE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE01');});",
                    "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE01');});",
                    "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE01\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE01');});",
                    "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE01\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE01');});",
                    "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE01');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                    "            pm.test('IDSE02 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "",
                    "        ",
                    "   ",
                    "}",
                    "  ",
                    "  "
                  ],
                  "_lastExecutionId": "d08242a9-6ef3-438a-b0a8-3af18228d33c"
                }
              }
            ]
          },
          {
            "id": "91cb1e73-4e7a-4390-91a4-534f801f3276",
            "name": "/Service?serviceDate={{SERVICEDATESE02}}",
            "request": {
              "description": {
                "content": "This operation filter a Service",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Service_Inventory}}service"
                ],
                "query": [
                  {
                    "key": "serviceDate",
                    "value": "\"{{SERVICEDATESE02}}\""
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer 1321321"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "185341eb-5022-4fe5-8f49-7fe05ed68abb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "  ",
                    "  ",
                    "  ",
                    "var jsonData = pm.response.json();",
                    "  ",
                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                    "    jsonData.forEach(function (instance, index) {",
                    "      ",
                    "        var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on state', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['state']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceDate', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "        });",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                    "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE02\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE02');});",
                    "            pm.test('feature is ' + pm.globals.get(\"FEATURESE02\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE02');});",
                    "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE02\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE02');});",
                    "            pm.test('state is ' + pm.globals.get(\"STATESE02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE02');});",
                    "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE02');});",
                    "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE02\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE02');});",
                    "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE02\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE02');});",
                    "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE02\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE02');});",
                    "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE02\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE02');});",
                    "            pm.test('place is ' + pm.globals.get(\"PLACESE02\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE02');});",
                    "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE02\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE02');});",
                    "            pm.test('note is ' + pm.globals.get(\"NOTESE02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE02');});",
                    "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE02\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE02');});",
                    "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE02\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE02');});",
                    "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE02\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE02');});",
                    "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE02\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE02');});",
                    "            pm.test('name is ' + pm.globals.get(\"NAMESE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE02');});",
                    "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE02');});",
                    "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE02\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE02');});",
                    "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE02\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE02');});",
                    "            pm.test('href is ' + pm.globals.get(\"HREFSE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE02');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDSE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE02');});",
                    "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE02');});",
                    "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE02\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE02');});",
                    "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE02\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE02');});",
                    "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE02');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                    "            pm.test('IDSE01 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "          ",
                    "    });",
                    "  }",
                    "  else {",
                    "    var instance = pm.response.json();",
                    "    var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on state', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['state']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceSpecification', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceSpecification']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceDate', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "        });",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                    "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE02\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE02');});",
                    "            pm.test('feature is ' + pm.globals.get(\"FEATURESE02\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE02');});",
                    "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE02\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE02');});",
                    "            pm.test('state is ' + pm.globals.get(\"STATESE02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE02');});",
                    "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE02');});",
                    "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE02\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE02');});",
                    "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE02\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE02');});",
                    "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE02\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE02');});",
                    "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE02\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE02');});",
                    "            pm.test('place is ' + pm.globals.get(\"PLACESE02\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE02');});",
                    "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE02\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE02');});",
                    "            pm.test('note is ' + pm.globals.get(\"NOTESE02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE02');});",
                    "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE02\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE02');});",
                    "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE02\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE02');});",
                    "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE02\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE02');});",
                    "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE02\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE02');});",
                    "            pm.test('name is ' + pm.globals.get(\"NAMESE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE02');});",
                    "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE02');});",
                    "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE02\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE02');});",
                    "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE02\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE02');});",
                    "            pm.test('href is ' + pm.globals.get(\"HREFSE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE02');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDSE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE02');});",
                    "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE02');});",
                    "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE02\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE02');});",
                    "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE02\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE02');});",
                    "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE02');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                    "            pm.test('IDSE01 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "",
                    "        ",
                    "   ",
                    "}",
                    "  ",
                    "  "
                  ],
                  "_lastExecutionId": "7c9a26be-a88d-4162-86ad-a295daf2acfd"
                }
              }
            ]
          },
          {
            "id": "262ef61d-07f8-4fa0-9af2-7a3d3cd82be0",
            "name": "/Service?fields=href",
            "request": {
              "description": {
                "content": "This operation filter a Service",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Service_Inventory}}service"
                ],
                "query": [
                  {
                    "key": "fields",
                    "value": "href"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer 1321321"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c3b892e3-031d-40cc-bb94-c0665cbb6ed6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "274e694e-3897-47ba-a409-493e5cecfaec"
                }
              }
            ]
          },
          {
            "id": "0436bc90-838e-4a4b-a819-f10bec85ce87",
            "name": "/Service?href={{HREFSE01}}",
            "request": {
              "description": {
                "content": "This operation filter a Service",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Service_Inventory}}service"
                ],
                "query": [
                  {
                    "key": "href",
                    "value": "{{HREFSE01}}"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer 1321321"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "03b7edd4-4211-4d09-8a83-7282d6d22552",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "  ",
                    "  ",
                    "  ",
                    "var jsonData = pm.response.json();",
                    "  ",
                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                    "    jsonData.forEach(function (instance, index) {",
                    "      ",
                    "        var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on state', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['state']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceDate', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "        });",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                    "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE01\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE01');});",
                    "            pm.test('feature is ' + pm.globals.get(\"FEATURESE01\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE01');});",
                    "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE01\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE01');});",
                    "            pm.test('state is ' + pm.globals.get(\"STATESE01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE01');});",
                    "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE01');});",
                    "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE01\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE01');});",
                    "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE01\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE01');});",
                    "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE01\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE01');});",
                    "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE01\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE01');});",
                    "            pm.test('place is ' + pm.globals.get(\"PLACESE01\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE01');});",
                    "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE01\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE01');});",
                    "            pm.test('note is ' + pm.globals.get(\"NOTESE01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE01');});",
                    "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE01\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE01');});",
                    "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE01\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE01');});",
                    "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE01\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE01');});",
                    "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE01\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE01');});",
                    "            pm.test('name is ' + pm.globals.get(\"NAMESE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE01');});",
                    "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE01');});",
                    "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE01\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE01');});",
                    "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE01\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE01');});",
                    "            pm.test('href is ' + pm.globals.get(\"HREFSE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE01');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDSE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE01');});",
                    "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE01');});",
                    "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE01\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE01');});",
                    "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE01\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE01');});",
                    "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE01');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                    "            pm.test('IDSE02 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "          ",
                    "    });",
                    "  }",
                    "  else {",
                    "    var instance = pm.response.json();",
                    "    var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on state', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['state']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceDate', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "        });",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                    "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE01\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE01');});",
                    "            pm.test('feature is ' + pm.globals.get(\"FEATURESE01\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE01');});",
                    "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE01\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE01');});",
                    "            pm.test('state is ' + pm.globals.get(\"STATESE01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE01');});",
                    "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE01');});",
                    "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE01\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE01');});",
                    "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE01\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE01');});",
                    "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE01\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE01');});",
                    "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE01\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE01');});",
                    "            pm.test('place is ' + pm.globals.get(\"PLACESE01\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE01');});",
                    "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE01\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE01');});",
                    "            pm.test('note is ' + pm.globals.get(\"NOTESE01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE01');});",
                    "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE01\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE01');});",
                    "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE01\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE01');});",
                    "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE01\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE01');});",
                    "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE01\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE01');});",
                    "            pm.test('name is ' + pm.globals.get(\"NAMESE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE01');});",
                    "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE01');});",
                    "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE01\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE01');});",
                    "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE01\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE01');});",
                    "            pm.test('href is ' + pm.globals.get(\"HREFSE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE01');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDSE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE01');});",
                    "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE01');});",
                    "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE01\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE01');});",
                    "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE01\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE01');});",
                    "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE01');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                    "            pm.test('IDSE02 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "",
                    "        ",
                    "   ",
                    "}",
                    "  ",
                    "  "
                  ],
                  "_lastExecutionId": "54aa1821-9d4f-4894-8a70-5202b928dfe3"
                }
              }
            ]
          },
          {
            "id": "152bc855-e2e3-421e-a9bd-0adfd26aa436",
            "name": "/Service?href={{HREFSE02}}",
            "request": {
              "description": {
                "content": "This operation filter a Service",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Service_Inventory}}service"
                ],
                "query": [
                  {
                    "key": "href",
                    "value": "{{HREFSE02}}"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer 1321321"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "cc7ade6e-cafa-4baa-8b09-602f1ae92979",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "  ",
                    "  ",
                    "  ",
                    "var jsonData = pm.response.json();",
                    "  ",
                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                    "    jsonData.forEach(function (instance, index) {",
                    "      ",
                    "        var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on state', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['state']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceDate', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "        });",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                    "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE02\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE02');});",
                    "            pm.test('feature is ' + pm.globals.get(\"FEATURESE02\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE02');});",
                    "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE02\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE02');});",
                    "            pm.test('state is ' + pm.globals.get(\"STATESE02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE02');});",
                    "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE02');});",
                    "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE02\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE02');});",
                    "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE02\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE02');});",
                    "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE02\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE02');});",
                    "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE02\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE02');});",
                    "            pm.test('place is ' + pm.globals.get(\"PLACESE02\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE02');});",
                    "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE02\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE02');});",
                    "            pm.test('note is ' + pm.globals.get(\"NOTESE02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE02');});",
                    "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE02\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE02');});",
                    "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE02\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE02');});",
                    "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE02\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE02');});",
                    "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE02\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE02');});",
                    "            pm.test('name is ' + pm.globals.get(\"NAMESE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE02');});",
                    "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE02');});",
                    "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE02\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE02');});",
                    "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE02\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE02');});",
                    "            pm.test('href is ' + pm.globals.get(\"HREFSE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE02');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDSE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE02');});",
                    "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE02');});",
                    "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE02\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE02');});",
                    "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE02\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE02');});",
                    "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE02');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                    "            pm.test('IDSE01 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "          ",
                    "    });",
                    "  }",
                    "  else {",
                    "    var instance = pm.response.json();",
                    "    var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on state', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['state']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceDate', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "        });",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                    "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE02\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE02');});",
                    "            pm.test('feature is ' + pm.globals.get(\"FEATURESE02\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE02');});",
                    "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE02\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE02');});",
                    "            pm.test('state is ' + pm.globals.get(\"STATESE02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE02');});",
                    "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE02');});",
                    "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE02\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE02');});",
                    "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE02\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE02');});",
                    "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE02\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE02');});",
                    "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE02\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE02');});",
                    "            pm.test('place is ' + pm.globals.get(\"PLACESE02\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE02');});",
                    "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE02\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE02');});",
                    "            pm.test('note is ' + pm.globals.get(\"NOTESE02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE02');});",
                    "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE02\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE02');});",
                    "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE02\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE02');});",
                    "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE02\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE02');});",
                    "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE02\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE02');});",
                    "            pm.test('name is ' + pm.globals.get(\"NAMESE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE02');});",
                    "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE02');});",
                    "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE02\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE02');});",
                    "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE02\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE02');});",
                    "            pm.test('href is ' + pm.globals.get(\"HREFSE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE02');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDSE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE02');});",
                    "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE02');});",
                    "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE02\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE02');});",
                    "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE02\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE02');});",
                    "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE02');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                    "            pm.test('IDSE01 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "",
                    "        ",
                    "   ",
                    "}",
                    "  ",
                    "  "
                  ],
                  "_lastExecutionId": "d28d19e6-f14f-4216-b637-649aba33322b"
                }
              }
            ]
          },
          {
            "id": "c38a485a-9ea2-4d38-9d31-bff8bac76312",
            "name": "/Service?fields=id",
            "request": {
              "description": {
                "content": "This operation filter a Service",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Service_Inventory}}service"
                ],
                "query": [
                  {
                    "key": "fields",
                    "value": "id"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer 1321321"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "ca64bbfe-040b-47f9-8850-86146b297bb5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b30eb13e-867c-4a15-b798-9c97a73328ac"
                }
              }
            ]
          },
          {
            "id": "f3df7021-0720-49cf-b62e-38005de28c66",
            "name": "/Service?id={{IDSE01}}",
            "request": {
              "description": {
                "content": "This operation filter a Service",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Service_Inventory}}service"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{IDSE01}}"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer 1321321"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "59839aa1-11e6-4988-8396-0164eba0086a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "  ",
                    "  ",
                    "  ",
                    "var jsonData = pm.response.json();",
                    "  ",
                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                    "    jsonData.forEach(function (instance, index) {",
                    "      ",
                    "        var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on state', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['state']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceDate', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "        });",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                    "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE01\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE01');});",
                    "            pm.test('feature is ' + pm.globals.get(\"FEATURESE01\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE01');});",
                    "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE01\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE01');});",
                    "            pm.test('state is ' + pm.globals.get(\"STATESE01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE01');});",
                    "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE01');});",
                    "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE01\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE01');});",
                    "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE01\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE01');});",
                    "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE01\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE01');});",
                    "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE01\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE01');});",
                    "            pm.test('place is ' + pm.globals.get(\"PLACESE01\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE01');});",
                    "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE01\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE01');});",
                    "            pm.test('note is ' + pm.globals.get(\"NOTESE01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE01');});",
                    "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE01\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE01');});",
                    "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE01\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE01');});",
                    "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE01\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE01');});",
                    "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE01\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE01');});",
                    "            pm.test('name is ' + pm.globals.get(\"NAMESE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE01');});",
                    "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE01');});",
                    "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE01\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE01');});",
                    "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE01\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE01');});",
                    "            pm.test('href is ' + pm.globals.get(\"HREFSE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE01');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDSE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE01');});",
                    "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE01');});",
                    "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE01\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE01');});",
                    "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE01\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE01');});",
                    "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE01');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                    "            pm.test('IDSE02 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "          ",
                    "    });",
                    "  }",
                    "  else {",
                    "    var instance = pm.response.json();",
                    "    var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on state', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['state']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceSpecification', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceSpecification']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceDate', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "        });",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                    "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE01\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE01');});",
                    "            pm.test('feature is ' + pm.globals.get(\"FEATURESE01\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE01');});",
                    "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE01\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE01');});",
                    "            pm.test('state is ' + pm.globals.get(\"STATESE01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE01');});",
                    "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE01');});",
                    "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE01\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE01');});",
                    "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE01\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE01');});",
                    "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE01\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE01');});",
                    "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE01\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE01');});",
                    "            pm.test('place is ' + pm.globals.get(\"PLACESE01\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE01');});",
                    "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE01\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE01');});",
                    "            pm.test('note is ' + pm.globals.get(\"NOTESE01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE01');});",
                    "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE01\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE01');});",
                    "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE01\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE01');});",
                    "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE01\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE01');});",
                    "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE01\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE01');});",
                    "            pm.test('name is ' + pm.globals.get(\"NAMESE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE01');});",
                    "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE01');});",
                    "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE01\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE01');});",
                    "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE01\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE01');});",
                    "            pm.test('href is ' + pm.globals.get(\"HREFSE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE01');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDSE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE01');});",
                    "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE01');});",
                    "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE01\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE01');});",
                    "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE01\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE01');});",
                    "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE01');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                    "            pm.test('IDSE02 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "",
                    "        ",
                    "   ",
                    "}",
                    "  ",
                    "  "
                  ],
                  "_lastExecutionId": "83b1d294-08af-4498-915c-adfe18ee2df0"
                }
              }
            ]
          },
          {
            "id": "8a797d0f-63bf-4b26-bcda-ed5f64fc331c",
            "name": "/Service?id={{IDSE02}}",
            "request": {
              "description": {
                "content": "This operation filter a Service",
                "type": "text/plain"
              },
              "url": {
                "host": [
                  "{{Service_Inventory}}service"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "{{IDSE02}}"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer 1321321"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "f254df85-77f9-4771-837d-5aa1f7835bf0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "  ",
                    "  ",
                    "  ",
                    "var jsonData = pm.response.json();",
                    "  ",
                    "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                    "    jsonData.forEach(function (instance, index) {",
                    "      ",
                    "        var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on state', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['state']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceDate', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "        });",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                    "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE02\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE02');});",
                    "            pm.test('feature is ' + pm.globals.get(\"FEATURESE02\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE02');});",
                    "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE02\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE02');});",
                    "            pm.test('state is ' + pm.globals.get(\"STATESE02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE02');});",
                    "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE02');});",
                    "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE02\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE02');});",
                    "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE02\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE02');});",
                    "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE02\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE02');});",
                    "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE02\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE02');});",
                    "            pm.test('place is ' + pm.globals.get(\"PLACESE02\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE02');});",
                    "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE02\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE02');});",
                    "            pm.test('note is ' + pm.globals.get(\"NOTESE02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE02');});",
                    "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE02\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE02');});",
                    "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE02\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE02');});",
                    "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE02\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE02');});",
                    "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE02\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE02');});",
                    "            pm.test('name is ' + pm.globals.get(\"NAMESE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE02');});",
                    "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE02');});",
                    "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE02\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE02');});",
                    "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE02\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE02');});",
                    "            pm.test('href is ' + pm.globals.get(\"HREFSE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE02');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDSE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE02');});",
                    "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE02');});",
                    "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE02\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE02');});",
                    "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE02\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE02');});",
                    "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE02');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                    "            pm.test('IDSE01 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "          ",
                    "    });",
                    "  }",
                    "  else {",
                    "    var instance = pm.response.json();",
                    "    var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                    "      ",
                    "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                    "      ",
                    "      ",
                    "      ",
                    "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                    "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                    "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                    "      ",
                    "        pm.test('Body includes value held on state', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['state']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceSpecification', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceSpecification']);",
                    "        });",
                    "        pm.test('Body includes value held on serviceDate', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                    "        });",
                    "        pm.test('Body includes value held on href', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['href']);",
                    "        });",
                    "        pm.test('Body includes value held on id', function () {",
                    "            pm.expect(pm.response.text()).to.include(instance['id']);",
                    "        });",
                    "        // Individualized tests",
                    "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                    "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE02\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE02');});",
                    "            pm.test('feature is ' + pm.globals.get(\"FEATURESE02\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE02');});",
                    "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE02\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE02');});",
                    "            pm.test('state is ' + pm.globals.get(\"STATESE02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE02');});",
                    "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE02');});",
                    "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE02\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE02');});",
                    "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE02\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE02');});",
                    "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE02\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE02');});",
                    "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE02\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE02');});",
                    "            pm.test('place is ' + pm.globals.get(\"PLACESE02\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE02');});",
                    "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE02\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE02');});",
                    "            pm.test('note is ' + pm.globals.get(\"NOTESE02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE02');});",
                    "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE02\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE02');});",
                    "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE02\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE02');});",
                    "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE02\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE02');});",
                    "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE02\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE02');});",
                    "            pm.test('name is ' + pm.globals.get(\"NAMESE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE02');});",
                    "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE02');});",
                    "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE02\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE02');});",
                    "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE02\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE02');});",
                    "            pm.test('href is ' + pm.globals.get(\"HREFSE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE02');});",
                    "            pm.test('id is ' + pm.globals.get(\"IDSE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE02');});",
                    "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE02');});",
                    "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE02\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE02');});",
                    "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE02\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE02');});",
                    "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE02');});",
                    "        }",
                    "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                    "            pm.test('IDSE01 not expected on this test', function () {",
                    "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                    "            });",
                    "        }",
                    "",
                    "        ",
                    "   ",
                    "}",
                    "  ",
                    "  "
                  ],
                  "_lastExecutionId": "8e487af0-19e2-494a-8e4c-06f8730ca61a"
                }
              }
            ]
          }
        ],
        "event": [],
        "protocolProfileBehavior": {}
      },
      {
        "id": "6d4ab1f0-0ca9-484b-b55d-b50114cb579a",
        "name": "E1",
        "item": [
          {
            "id": "30be2774-648f-45da-b37c-0b60a0dde2f6",
            "name": "/Service/404ID",
            "request": {
              "description": {
                "content": "This operation search for one of the created Service",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "141cf386-5831-41a9-84a0-648020b34b03"
                ],
                "host": [
                  "{{Service_Inventory}}service"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer 1321321"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5ac44b22-8da1-4821-9d54-6913eb142427",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 404\", function () {",
                    "    pm.response.to.have.status(404);",
                    "});",
                    "",
                    ""
                  ],
                  "_lastExecutionId": "24012abc-ed9b-4930-a4ad-d4c3c1e5e086"
                }
              }
            ]
          }
        ],
        "event": [],
        "protocolProfileBehavior": {}
      }
    ],
    "event": [],
    "protocolProfileBehavior": {},
    "variable": [],
    "info": {
      "_postman_id": "5cea0ced-c614-41b6-84b2-10330b86eaa0",
      "name": "CTK-Service_Inventory-4.0.0",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2020-07-07T14:17:10.805Z",
      "postman_exported_using": "Postman/7.27.1"
    },
    "id": "da32588a-3916-4d78-a546-7623e391f650",
    "name": "TMForumv4",
    "values": [
      {
        "type": "any",
        "value": "{{Service_Inventory}}/tmf-api/serviceInventory/v4",
        "key": "ServiceInventoryAPI"
      },
      {
        "type": "any",
        "value": "https://api-service-ordering-v4-0-0.mybluemix.net",
        "key": "Service_Ordering"
      },
      {
        "type": "any",
        "value": "https://api-service-qualification-management-v4-0-0.mybluemix.net",
        "key": "Service_Qualification"
      },
      {
        "type": "any",
        "value": "https://api-service-test-management-v4-0-0.mybluemix.net",
        "key": "Service_Test"
      },
      {
        "type": "any",
        "value": "https://api-usage-consumption-v4-0-0.mybluemix.net",
        "key": "Usage_Consumption"
      },
      {
        "type": "any",
        "value": "https://api-service-activation-and-configuration-v4-0-0.mybluemix.net",
        "key": "Service_Activation"
      },
      {
        "type": "any",
        "value": "https://api-service-catalog-management-v4-0-0.mybluemix.net",
        "key": "Service_Catalog"
      },
      {
        "type": "any",
        "value": "https://api-service-problem-management-v4-0-0.mybluemix.net",
        "key": "Service_Problem"
      },
      {
        "type": "any",
        "value": "http://127.0.0.1:8080/serviceInventoryManagement/v4.0.0/",
        "key": "Service_Inventory"
      },
      {
        "type": "any",
        "value": "{{Service_Catalog}}/tmf-api/serviceCatalogManagement/v4",
        "key": "ServiceCatalogAPI"
      },
      {
        "type": "any",
        "value": "eff330b1-2ae8-4b22-b554-aa94afb8acbe",
        "key": "id"
      },
      {
        "type": "any",
        "value": "0",
        "key": "offset"
      },
      {
        "type": "any",
        "value": "5",
        "key": "limit"
      },
      {
        "type": "any",
        "value": "http://127.0.0.1:8080",
        "key": "localhost"
      },
      {
        "type": "any",
        "value": "0",
        "key": "delay"
      }
    ]
  },
  "globals": {
    "id": "e0a2f8d2-a7a4-40dd-9f69-f1075529cfc7",
    "values": [
      {
        "type": "any",
        "value": null,
        "key": "SUPPORTINGSERVICESE01"
      },
      {
        "type": "any",
        "value": null,
        "key": "FEATURESE01"
      },
      {
        "type": "any",
        "value": [],
        "key": "SERVICERELATIONSHIPSE01"
      },
      {
        "type": "any",
        "value": "active",
        "key": "STATESE01"
      },
      {
        "type": "any",
        "value": null,
        "key": "RELATEDENTITYSE01"
      },
      {
        "type": "any",
        "value": null,
        "key": "STARTMODESE01"
      },
      {
        "type": "any",
        "value": null,
        "key": "STARTDATESE01"
      },
      {
        "type": "any",
        "value": null,
        "key": "ISBUNDLESE01"
      },
      {
        "type": "any",
        "value": null,
        "key": "SERVICEORDERITEMSE01"
      },
      {
        "type": "any",
        "value": null,
        "key": "PLACESE01"
      },
      {
        "type": "any",
        "value": null,
        "key": "SERVICECHARACTERISTICSE01"
      },
      {
        "type": "any",
        "value": null,
        "key": "NOTESE01"
      },
      {
        "type": "any",
        "value": null,
        "key": "SERVICETYPESE01"
      },
      {
        "type": "any",
        "value": null,
        "key": "SUPPORTINGRESOURCESE01"
      },
      {
        "type": "any",
        "value": null,
        "key": "HASSTARTEDSE01"
      },
      {
        "type": "any",
        "value": {
          "id": "1212",
          "@referredType": "ServiceSpecification"
        },
        "key": "SERVICESPECIFICATIONSE01"
      },
      {
        "type": "any",
        "value": null,
        "key": "NAMESE01"
      },
      {
        "type": "any",
        "value": null,
        "key": "DESCRIPTIONSE01"
      },
      {
        "type": "any",
        "value": "2025-04-25T11:45:15Z",
        "key": "SERVICEDATESE01"
      },
      {
        "type": "any",
        "value": null,
        "key": "ENDDATESE01"
      },
      {
        "type": "any",
        "value": "http://localhost:8080/serviceInventoryManagement/v4.0.0/service/d6dfb61c-f06e-470e-84de-fb4c62da116f",
        "key": "HREFSE01"
      },
      {
        "type": "any",
        "value": "d6dfb61c-f06e-470e-84de-fb4c62da116f",
        "key": "IDSE01"
      },
      {
        "type": "any",
        "value": null,
        "key": "RELATEDPARTYSE01"
      },
      {
        "type": "any",
        "value": null,
        "key": "ISSERVICEENABLEDSE01"
      },
      {
        "type": "any",
        "value": null,
        "key": "ISSTATEFULSE01"
      },
      {
        "type": "any",
        "value": null,
        "key": "CATEGORYSE01"
      },
      {
        "type": "any",
        "value": null,
        "key": "SUPPORTINGSERVICESE02"
      },
      {
        "type": "any",
        "value": null,
        "key": "FEATURESE02"
      },
      {
        "type": "any",
        "value": [],
        "key": "SERVICERELATIONSHIPSE02"
      },
      {
        "type": "any",
        "value": "active",
        "key": "STATESE02"
      },
      {
        "type": "any",
        "value": null,
        "key": "RELATEDENTITYSE02"
      },
      {
        "type": "any",
        "value": null,
        "key": "STARTMODESE02"
      },
      {
        "type": "any",
        "value": null,
        "key": "STARTDATESE02"
      },
      {
        "type": "any",
        "value": null,
        "key": "ISBUNDLESE02"
      },
      {
        "type": "any",
        "value": null,
        "key": "SERVICEORDERITEMSE02"
      },
      {
        "type": "any",
        "value": null,
        "key": "PLACESE02"
      },
      {
        "type": "any",
        "value": null,
        "key": "SERVICECHARACTERISTICSE02"
      },
      {
        "type": "any",
        "value": null,
        "key": "NOTESE02"
      },
      {
        "type": "any",
        "value": null,
        "key": "SERVICETYPESE02"
      },
      {
        "type": "any",
        "value": null,
        "key": "SUPPORTINGRESOURCESE02"
      },
      {
        "type": "any",
        "value": null,
        "key": "HASSTARTEDSE02"
      },
      {
        "type": "any",
        "value": {
          "id": "1212",
          "@referredType": "ServiceSpecification"
        },
        "key": "SERVICESPECIFICATIONSE02"
      },
      {
        "type": "any",
        "value": null,
        "key": "NAMESE02"
      },
      {
        "type": "any",
        "value": null,
        "key": "DESCRIPTIONSE02"
      },
      {
        "type": "any",
        "value": "2025-04-25T11:45:15Z",
        "key": "SERVICEDATESE02"
      },
      {
        "type": "any",
        "value": null,
        "key": "ENDDATESE02"
      },
      {
        "type": "any",
        "value": "http://localhost:8080/serviceInventoryManagement/v4.0.0/service/f23cf6fb-fed2-43d0-a348-45c996565016",
        "key": "HREFSE02"
      },
      {
        "type": "any",
        "value": "f23cf6fb-fed2-43d0-a348-45c996565016",
        "key": "IDSE02"
      },
      {
        "type": "any",
        "value": null,
        "key": "RELATEDPARTYSE02"
      },
      {
        "type": "any",
        "value": null,
        "key": "ISSERVICEENABLEDSE02"
      },
      {
        "type": "any",
        "value": null,
        "key": "ISSTATEFULSE02"
      },
      {
        "type": "any",
        "value": null,
        "key": "CATEGORYSE02"
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.11111111111111,
      "responseMin": 9,
      "responseMax": 47,
      "responseSd": 8.312566717452485,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1745581515291,
      "completed": 1745581517265
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 18,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7d5cbcf9-d7f2-4ce9-aa56-75d19848273b",
          "httpRequestId": "3c810708-1cd3-42f2-a018-afe3d7ffd14b"
        },
        "item": {
          "id": "9c132abc-3684-43aa-9aec-4cebfab17c51",
          "name": "/Service",
          "request": {
            "description": {
              "content": "This operation creates a Service",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Service_Inventory}}service"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer 1321321"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"state\":\"active\",\"serviceSpecification\":{\"id\":\"1212\",\"@referredType\":\"ServiceSpecification\"}}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c01ec730-3f29-4d7a-a7d2-444c6f200c8e",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "if (Array.isArray(jsonData)) { ",
                  "  ",
                  "    pm.test('Array not expected as response', function (){pm.expect.fail()});",
                  "  ",
                  "",
                  "}",
                  "",
                  "pm.test(\"Successful POST request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
                  "});",
                  "",
                  "var instance = pm.response.json();",
                  "var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "",
                  "pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "",
                  "",
                  "",
                  "pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "",
                  "pm.globals.set('SUPPORTINGSERVICESE01', instance['supportingService']);",
                  "pm.globals.set('FEATURESE01', instance['feature']);",
                  "pm.globals.set('SERVICERELATIONSHIPSE01', instance['serviceRelationship']);",
                  "pm.globals.set('STATESE01', instance['state']);",
                  "pm.globals.set('RELATEDENTITYSE01', instance['relatedEntity']);",
                  "pm.globals.set('STARTMODESE01', instance['startMode']);",
                  "pm.globals.set('STARTDATESE01', instance['startDate']);",
                  "pm.globals.set('ISBUNDLESE01', instance['isBundle']);",
                  "pm.globals.set('SERVICEORDERITEMSE01', instance['serviceOrderItem']);",
                  "pm.globals.set('PLACESE01', instance['place']);",
                  "pm.globals.set('SERVICECHARACTERISTICSE01', instance['serviceCharacteristic']);",
                  "pm.globals.set('NOTESE01', instance['note']);",
                  "pm.globals.set('SERVICETYPESE01', instance['serviceType']);",
                  "pm.globals.set('SUPPORTINGRESOURCESE01', instance['supportingResource']);",
                  "pm.globals.set('HASSTARTEDSE01', instance['hasStarted']);",
                  "pm.globals.set('SERVICESPECIFICATIONSE01', instance['serviceSpecification']);",
                  "pm.globals.set('NAMESE01', instance['name']);",
                  "pm.globals.set('DESCRIPTIONSE01', instance['description']);",
                  "pm.globals.set('SERVICEDATESE01', instance['serviceDate']);",
                  "pm.globals.set('ENDDATESE01', instance['endDate']);",
                  "pm.globals.set('HREFSE01', instance['href']);",
                  "pm.globals.set('IDSE01', instance['id']);",
                  "pm.globals.set('RELATEDPARTYSE01', instance['relatedParty']);",
                  "pm.globals.set('ISSERVICEENABLEDSE01', instance['isServiceEnabled']);",
                  "pm.globals.set('ISSTATEFULSE01', instance['isStateful']);",
                  "pm.globals.set('CATEGORYSE01', instance['category']);",
                  "",
                  "pm.test('Body includes value held on state', function () {",
                  "  pm.expect(pm.response.text()).to.include(instance['state']);",
                  "});",
                  "",
                  "pm.test('Body includes value held on serviceDate', function () {",
                  "  pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "});",
                  "pm.test('Body includes value held on href', function () {",
                  "  pm.expect(pm.response.text()).to.include(instance['href']);",
                  "});",
                  "pm.test('Body includes value held on id', function () {",
                  "  pm.expect(pm.response.text()).to.include(instance['id']);",
                  "});",
                  ""
                ],
                "_lastExecutionId": "b13260dc-ce16-46c6-9e58-573cc92a563b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation creates a Service",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "serviceInventoryManagement",
              "v4.0.0",
              "service"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer 1321321"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "67159b18-6edb-49e3-bf16-5b0538399664",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 94,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"state\":\"active\",\"serviceSpecification\":{\"id\":\"1212\",\"@referredType\":\"ServiceSpecification\"}}"
          }
        },
        "response": {
          "id": "5cca3fb0-acae-4691-83bb-48bfce1d5789",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Apr 2025 11:45:15 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 47,
          "responseSize": 376
        },
        "id": "9c132abc-3684-43aa-9aec-4cebfab17c51",
        "assertions": [
          {
            "assertion": "Successful POST request",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d0c60e35-1abe-46ad-9ffc-eae5f6bc5041",
          "length": 18,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "aee7d6d8-ce19-4894-b796-a8d154a3c425"
        },
        "item": {
          "id": "cace4249-774e-4373-bd36-f150effb6e74",
          "name": "/Service",
          "request": {
            "description": {
              "content": "This operation creates another Service",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Service_Inventory}}service"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer 1321321"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"state\": \"active\",\n  \"serviceSpecification\": {\n    \"id\": \"1212\",\n    \"@referredType\": \"ServiceSpecification\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b9b90099-84cb-43ec-9813-161c642d8656",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "if (Array.isArray(jsonData)) {",
                  "",
                  "  pm.test('Array not expected as response', function () { pm.expect.fail() });",
                  "",
                  "",
                  "}",
                  "",
                  "pm.test(\"Successful POST request\", function () {",
                  "  pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
                  "});",
                  "",
                  "if (pm.response.code == 202) {",
                  "  setTimeout(function () { }, [pm.variables.get(\"delay\")]);",
                  "  postman.setNextRequest('get202')",
                  "}",
                  "else {",
                  "  var instance = pm.response.json();",
                  "  var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "",
                  "  pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "",
                  "",
                  "",
                  "  pm.test('Response has serviceDate attribute', function () { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "  pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "  pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "",
                  "  pm.globals.set('SUPPORTINGSERVICESE02', instance['supportingService']);",
                  "  pm.globals.set('FEATURESE02', instance['feature']);",
                  "  pm.globals.set('SERVICERELATIONSHIPSE02', instance['serviceRelationship']);",
                  "  pm.globals.set('STATESE02', instance['state']);",
                  "  pm.globals.set('RELATEDENTITYSE02', instance['relatedEntity']);",
                  "  pm.globals.set('STARTMODESE02', instance['startMode']);",
                  "  pm.globals.set('STARTDATESE02', instance['startDate']);",
                  "  pm.globals.set('ISBUNDLESE02', instance['isBundle']);",
                  "  pm.globals.set('SERVICEORDERITEMSE02', instance['serviceOrderItem']);",
                  "  pm.globals.set('PLACESE02', instance['place']);",
                  "  pm.globals.set('SERVICECHARACTERISTICSE02', instance['serviceCharacteristic']);",
                  "  pm.globals.set('NOTESE02', instance['note']);",
                  "  pm.globals.set('SERVICETYPESE02', instance['serviceType']);",
                  "  pm.globals.set('SUPPORTINGRESOURCESE02', instance['supportingResource']);",
                  "  pm.globals.set('HASSTARTEDSE02', instance['hasStarted']);",
                  "  pm.globals.set('SERVICESPECIFICATIONSE02', instance['serviceSpecification']);",
                  "  pm.globals.set('NAMESE02', instance['name']);",
                  "  pm.globals.set('DESCRIPTIONSE02', instance['description']);",
                  "  pm.globals.set('SERVICEDATESE02', instance['serviceDate']);",
                  "  pm.globals.set('ENDDATESE02', instance['endDate']);",
                  "  pm.globals.set('HREFSE02', instance['href']);",
                  "  pm.globals.set('IDSE02', instance['id']);",
                  "  pm.globals.set('RELATEDPARTYSE02', instance['relatedParty']);",
                  "  pm.globals.set('ISSERVICEENABLEDSE02', instance['isServiceEnabled']);",
                  "  pm.globals.set('ISSTATEFULSE02', instance['isStateful']);",
                  "  pm.globals.set('CATEGORYSE02', instance['category']);",
                  "",
                  "  pm.test('Body includes value held on state', function () {",
                  "    pm.expect(pm.response.text()).to.include(instance['state']);",
                  "  });",
                  "  pm.test('Body includes value held on serviceDate', function () {",
                  "    pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "  });",
                  "  pm.test('Body includes value held on href', function () {",
                  "    pm.expect(pm.response.text()).to.include(instance['href']);",
                  "  });",
                  "  pm.test('Body includes value held on id', function () {",
                  "    pm.expect(pm.response.text()).to.include(instance['id']);",
                  "  });",
                  "}"
                ],
                "_lastExecutionId": "6b9f85c5-aba6-4958-b23d-0b5fdcc2909c"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation creates another Service",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "serviceInventoryManagement",
              "v4.0.0",
              "service"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer 1321321"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c199dc4a-0105-4f24-b452-75f30567f55d",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 118,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"state\": \"active\",\n  \"serviceSpecification\": {\n    \"id\": \"1212\",\n    \"@referredType\": \"ServiceSpecification\"\n  }\n}"
          }
        },
        "response": {
          "id": "22aff70c-90b3-4008-9859-f7c5222c8768",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Apr 2025 11:45:15 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 14,
          "responseSize": 376
        },
        "id": "cace4249-774e-4373-bd36-f150effb6e74",
        "assertions": [
          {
            "assertion": "Successful POST request",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "89ed6c24-e799-4187-8370-2229dad8141a",
          "length": 18,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d064739e-81a4-44fb-8c3d-ff44da1a3fe4"
        },
        "item": {
          "id": "07fefa7a-f4ff-4751-aeb1-63a3dbb8d74c",
          "name": "/Service/{{IDSE01}}",
          "request": {
            "description": {
              "content": "This operation search for one of the created Service",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "{{IDSE01}}"
              ],
              "host": [
                "{{Service_Inventory}}service"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer 1321321"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "374acb5c-b216-471f-b3b2-65f21a7dd3aa",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "  ",
                  "  ",
                  "  ",
                  "var jsonData = pm.response.json();",
                  "  ",
                  "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                  "    jsonData.forEach(function (instance, index) {",
                  "      ",
                  "        var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on state', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['state']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceDate', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "        });",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                  "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE01\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE01');});",
                  "            pm.test('feature is ' + pm.globals.get(\"FEATURESE01\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE01');});",
                  "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE01\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE01');});",
                  "            pm.test('state is ' + pm.globals.get(\"STATESE01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE01');});",
                  "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE01');});",
                  "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE01\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE01');});",
                  "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE01\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE01');});",
                  "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE01\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE01');});",
                  "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE01\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE01');});",
                  "            pm.test('place is ' + pm.globals.get(\"PLACESE01\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE01');});",
                  "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE01\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE01');});",
                  "            pm.test('note is ' + pm.globals.get(\"NOTESE01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE01');});",
                  "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE01\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE01');});",
                  "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE01\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE01');});",
                  "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE01\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE01');});",
                  "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE01\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE01');});",
                  "            pm.test('name is ' + pm.globals.get(\"NAMESE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE01');});",
                  "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE01');});",
                  "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE01\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE01');});",
                  "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE01\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE01');});",
                  "            pm.test('href is ' + pm.globals.get(\"HREFSE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE01');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDSE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE01');});",
                  "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE01');});",
                  "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE01\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE01');});",
                  "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE01\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE01');});",
                  "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE01');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                  "            pm.test('IDSE02 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "          ",
                  "    });",
                  "  }",
                  "  else {",
                  "    var instance = pm.response.json();",
                  "    var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on state', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['state']);",
                  "        });",
                  "",
                  "        pm.test('Body includes value held on serviceDate', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "        });",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                  "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE01\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE01');});",
                  "            pm.test('feature is ' + pm.globals.get(\"FEATURESE01\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE01');});",
                  "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE01\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE01');});",
                  "            pm.test('state is ' + pm.globals.get(\"STATESE01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE01');});",
                  "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE01');});",
                  "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE01\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE01');});",
                  "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE01\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE01');});",
                  "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE01\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE01');});",
                  "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE01\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE01');});",
                  "            pm.test('place is ' + pm.globals.get(\"PLACESE01\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE01');});",
                  "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE01\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE01');});",
                  "            pm.test('note is ' + pm.globals.get(\"NOTESE01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE01');});",
                  "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE01\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE01');});",
                  "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE01\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE01');});",
                  "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE01\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE01');});",
                  "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE01\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE01');});",
                  "            pm.test('name is ' + pm.globals.get(\"NAMESE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE01');});",
                  "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE01');});",
                  "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE01\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE01');});",
                  "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE01\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE01');});",
                  "            pm.test('href is ' + pm.globals.get(\"HREFSE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE01');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDSE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE01');});",
                  "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE01');});",
                  "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE01\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE01');});",
                  "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE01\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE01');});",
                  "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE01');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                  "            pm.test('IDSE02 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "",
                  "        ",
                  "   ",
                  "}",
                  "  ",
                  "  "
                ],
                "_lastExecutionId": "d0e088bc-37a3-46a0-b367-856f5412789f"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation search for one of the created Service",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "serviceInventoryManagement",
              "v4.0.0",
              "service",
              "d6dfb61c-f06e-470e-84de-fb4c62da116f"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer 1321321"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "05ccfc0b-ff64-410d-af67-1f6d62b2302d",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "1d737178-189f-4c5a-8bab-73b9839c9a24",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Apr 2025 11:45:15 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 9,
          "responseSize": 376
        },
        "id": "07fefa7a-f4ff-4751-aeb1-63a3dbb8d74c",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "supportingService is null",
            "skipped": false
          },
          {
            "assertion": "feature is null",
            "skipped": false
          },
          {
            "assertion": "serviceRelationship is ",
            "skipped": false
          },
          {
            "assertion": "state is active",
            "skipped": false
          },
          {
            "assertion": "relatedEntity is null",
            "skipped": false
          },
          {
            "assertion": "startMode is null",
            "skipped": false
          },
          {
            "assertion": "startDate is null",
            "skipped": false
          },
          {
            "assertion": "isBundle is null",
            "skipped": false
          },
          {
            "assertion": "serviceOrderItem is null",
            "skipped": false
          },
          {
            "assertion": "place is null",
            "skipped": false
          },
          {
            "assertion": "serviceCharacteristic is null",
            "skipped": false
          },
          {
            "assertion": "note is null",
            "skipped": false
          },
          {
            "assertion": "serviceType is null",
            "skipped": false
          },
          {
            "assertion": "supportingResource is null",
            "skipped": false
          },
          {
            "assertion": "hasStarted is null",
            "skipped": false
          },
          {
            "assertion": "serviceSpecification is [object Object]",
            "skipped": false
          },
          {
            "assertion": "name is null",
            "skipped": false
          },
          {
            "assertion": "description is null",
            "skipped": false
          },
          {
            "assertion": "serviceDate is 2025-04-25T11:45:15Z",
            "skipped": false
          },
          {
            "assertion": "endDate is null",
            "skipped": false
          },
          {
            "assertion": "href is http://localhost:8080/serviceInventoryManagement/v4.0.0/service/d6dfb61c-f06e-470e-84de-fb4c62da116f",
            "skipped": false
          },
          {
            "assertion": "id is d6dfb61c-f06e-470e-84de-fb4c62da116f",
            "skipped": false
          },
          {
            "assertion": "relatedParty is null",
            "skipped": false
          },
          {
            "assertion": "isServiceEnabled is null",
            "skipped": false
          },
          {
            "assertion": "isStateful is null",
            "skipped": false
          },
          {
            "assertion": "category is null",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "80325d36-b56a-4c81-be82-9e90489b204b",
          "length": 18,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "71ce023a-8a62-44e2-a226-376aa2e77a17"
        },
        "item": {
          "id": "adbcd240-9314-484f-aeba-d756780342f3",
          "name": "/Service/{{IDSE02}}",
          "request": {
            "description": {
              "content": "This operation search for the other one of the created Service",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "{{IDSE02}}"
              ],
              "host": [
                "{{Service_Inventory}}service"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer 1321321"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "508ae278-b2ba-481b-a1dc-e9ad66c6226f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "  ",
                  "  ",
                  "  ",
                  "var jsonData = pm.response.json();",
                  "  ",
                  "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                  "    jsonData.forEach(function (instance, index) {",
                  "      ",
                  "        var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on state', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['state']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceDate', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "        });",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                  "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE02\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE02');});",
                  "            pm.test('feature is ' + pm.globals.get(\"FEATURESE02\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE02');});",
                  "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE02\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE02');});",
                  "            pm.test('state is ' + pm.globals.get(\"STATESE02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE02');});",
                  "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE02');});",
                  "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE02\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE02');});",
                  "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE02\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE02');});",
                  "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE02\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE02');});",
                  "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE02\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE02');});",
                  "            pm.test('place is ' + pm.globals.get(\"PLACESE02\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE02');});",
                  "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE02\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE02');});",
                  "            pm.test('note is ' + pm.globals.get(\"NOTESE02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE02');});",
                  "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE02\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE02');});",
                  "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE02\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE02');});",
                  "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE02\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE02');});",
                  "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE02\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE02');});",
                  "            pm.test('name is ' + pm.globals.get(\"NAMESE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE02');});",
                  "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE02');});",
                  "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE02\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE02');});",
                  "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE02\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE02');});",
                  "            pm.test('href is ' + pm.globals.get(\"HREFSE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE02');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDSE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE02');});",
                  "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE02');});",
                  "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE02\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE02');});",
                  "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE02\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE02');});",
                  "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE02');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                  "            pm.test('IDSE01 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "          ",
                  "    });",
                  "  }",
                  "  else {",
                  "    var instance = pm.response.json();",
                  "    var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on state', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['state']);",
                  "        });",
                  "",
                  "        pm.test('Body includes value held on serviceDate', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "        });",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                  "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE02\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE02');});",
                  "            pm.test('feature is ' + pm.globals.get(\"FEATURESE02\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE02');});",
                  "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE02\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE02');});",
                  "            pm.test('state is ' + pm.globals.get(\"STATESE02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE02');});",
                  "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE02');});",
                  "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE02\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE02');});",
                  "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE02\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE02');});",
                  "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE02\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE02');});",
                  "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE02\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE02');});",
                  "            pm.test('place is ' + pm.globals.get(\"PLACESE02\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE02');});",
                  "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE02\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE02');});",
                  "            pm.test('note is ' + pm.globals.get(\"NOTESE02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE02');});",
                  "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE02\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE02');});",
                  "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE02\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE02');});",
                  "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE02\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE02');});",
                  "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE02\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE02');});",
                  "            pm.test('name is ' + pm.globals.get(\"NAMESE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE02');});",
                  "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE02');});",
                  "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE02\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE02');});",
                  "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE02\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE02');});",
                  "            pm.test('href is ' + pm.globals.get(\"HREFSE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE02');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDSE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE02');});",
                  "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE02');});",
                  "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE02\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE02');});",
                  "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE02\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE02');});",
                  "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE02');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                  "            pm.test('IDSE01 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "",
                  "        ",
                  "   ",
                  "}",
                  "  ",
                  "  "
                ],
                "_lastExecutionId": "df4a34cf-09a2-45ba-b17f-3e176cc3d9e8"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation search for the other one of the created Service",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "serviceInventoryManagement",
              "v4.0.0",
              "service",
              "f23cf6fb-fed2-43d0-a348-45c996565016"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer 1321321"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e4afc555-3379-4492-9b11-a35b75531ad9",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "f5bdaff7-37ac-4fd3-baf1-e29c6e398d6c",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Apr 2025 11:45:15 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 11,
          "responseSize": 376
        },
        "id": "adbcd240-9314-484f-aeba-d756780342f3",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "supportingService is null",
            "skipped": false
          },
          {
            "assertion": "feature is null",
            "skipped": false
          },
          {
            "assertion": "serviceRelationship is ",
            "skipped": false
          },
          {
            "assertion": "state is active",
            "skipped": false
          },
          {
            "assertion": "relatedEntity is null",
            "skipped": false
          },
          {
            "assertion": "startMode is null",
            "skipped": false
          },
          {
            "assertion": "startDate is null",
            "skipped": false
          },
          {
            "assertion": "isBundle is null",
            "skipped": false
          },
          {
            "assertion": "serviceOrderItem is null",
            "skipped": false
          },
          {
            "assertion": "place is null",
            "skipped": false
          },
          {
            "assertion": "serviceCharacteristic is null",
            "skipped": false
          },
          {
            "assertion": "note is null",
            "skipped": false
          },
          {
            "assertion": "serviceType is null",
            "skipped": false
          },
          {
            "assertion": "supportingResource is null",
            "skipped": false
          },
          {
            "assertion": "hasStarted is null",
            "skipped": false
          },
          {
            "assertion": "serviceSpecification is [object Object]",
            "skipped": false
          },
          {
            "assertion": "name is null",
            "skipped": false
          },
          {
            "assertion": "description is null",
            "skipped": false
          },
          {
            "assertion": "serviceDate is 2025-04-25T11:45:15Z",
            "skipped": false
          },
          {
            "assertion": "endDate is null",
            "skipped": false
          },
          {
            "assertion": "href is http://localhost:8080/serviceInventoryManagement/v4.0.0/service/f23cf6fb-fed2-43d0-a348-45c996565016",
            "skipped": false
          },
          {
            "assertion": "id is f23cf6fb-fed2-43d0-a348-45c996565016",
            "skipped": false
          },
          {
            "assertion": "relatedParty is null",
            "skipped": false
          },
          {
            "assertion": "isServiceEnabled is null",
            "skipped": false
          },
          {
            "assertion": "isStateful is null",
            "skipped": false
          },
          {
            "assertion": "category is null",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c74436ef-5aff-4d5e-854d-eca7dd94041e",
          "length": 18,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ba5eec99-b77a-4ae8-b70d-972dc0036006"
        },
        "item": {
          "id": "218a27fa-3dbe-4b26-93f7-d26b3ec929d9",
          "name": "/Service?fields=state",
          "request": {
            "description": {
              "content": "This operation filter a Service",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Service_Inventory}}service"
              ],
              "query": [
                {
                  "key": "fields",
                  "value": "state"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer 1321321"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6c8581df-d2fe-48b3-9d21-db7baf6bcc2d",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "96401e11-ff75-4be8-9b4d-056882180d08"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation filter a Service",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "serviceInventoryManagement",
              "v4.0.0",
              "service"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [
              {
                "key": "fields",
                "value": "state"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer 1321321"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "01db0a1f-cd6d-4796-b5ab-b728638e61bd",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "58baa44f-0e69-4877-8b4d-e78cfb6a81d3",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Total-Count",
              "value": "9"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Apr 2025 11:45:15 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              49,
              99,
              48,
              99,
              49,
              55,
              50,
              45,
              57,
              102,
              55,
              49,
              45,
              52,
              50,
              101,
              48,
              45,
              56,
              50,
              57,
              101,
              45,
              50,
              102,
              102,
              50,
              101,
              57,
              55,
              100,
              55,
              98,
              98,
              101,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              97,
              51,
              99,
              52,
              97,
              98,
              52,
              52,
              45,
              98,
              50,
              53,
              54,
              45,
              52,
              99,
              55,
              50,
              45,
              57,
              100,
              100,
              57,
              45,
              54,
              102,
              49,
              102,
              54,
              52,
              98,
              53,
              50,
              99,
              51,
              48,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              102,
              52,
              99,
              102,
              102,
              100,
              56,
              45,
              52,
              100,
              49,
              54,
              45,
              52,
              101,
              101,
              48,
              45,
              98,
              56,
              99,
              49,
              45,
              100,
              48,
              102,
              53,
              57,
              49,
              97,
              98,
              56,
              52,
              101,
              98,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              100,
              102,
              49,
              48,
              48,
              98,
              49,
              45,
              52,
              55,
              53,
              52,
              45,
              52,
              55,
              100,
              50,
              45,
              97,
              51,
              52,
              102,
              45,
              100,
              54,
              100,
              49,
              50,
              51,
              51,
              98,
              97,
              55,
              54,
              56,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              55,
              98,
              57,
              51,
              57,
              100,
              101,
              45,
              54,
              52,
              56,
              49,
              45,
              52,
              102,
              57,
              50,
              45,
              98,
              102,
              53,
              57,
              45,
              49,
              55,
              49,
              97,
              102,
              51,
              52,
              57,
              98,
              99,
              49,
              49,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              101,
              97,
              51,
              102,
              100,
              50,
              54,
              45,
              50,
              51,
              98,
              97,
              45,
              52,
              100,
              57,
              101,
              45,
              57,
              57,
              50,
              53,
              45,
              54,
              101,
              102,
              97,
              49,
              98,
              100,
              55,
              101,
              49,
              50,
              100,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              56,
              57,
              48,
              100,
              101,
              101,
              48,
              53,
              45,
              48,
              97,
              51,
              51,
              45,
              52,
              102,
              51,
              55,
              45,
              56,
              57,
              49,
              56,
              45,
              99,
              102,
              55,
              49,
              99,
              101,
              51,
              55,
              52,
              51,
              48,
              100,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 11,
          "responseSize": 568
        },
        "id": "218a27fa-3dbe-4b26-93f7-d26b3ec929d9"
      },
      {
        "cursor": {
          "ref": "46b7cf26-1371-4fe1-9212-4c6ddebdc121",
          "length": 18,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "dbf09aee-d613-4890-ab23-1290c329d938"
        },
        "item": {
          "id": "0d1eea38-e2b8-428d-84b4-a6f120160bd4",
          "name": "/Service?state={{STATESE01}}",
          "request": {
            "description": {
              "content": "This operation filter a Service",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Service_Inventory}}service"
              ],
              "query": [
                {
                  "key": "state",
                  "value": "{{STATESE01}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer 1321321"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "442e894f-cd7a-4e82-8150-ede594d81eb0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "  ",
                  "  ",
                  "  ",
                  "var jsonData = pm.response.json();",
                  "  ",
                  "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                  "    jsonData.forEach(function (instance, index) {",
                  "      ",
                  "        var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on state', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['state']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceDate', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "        });",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                  "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE01\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE01');});",
                  "            pm.test('feature is ' + pm.globals.get(\"FEATURESE01\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE01');});",
                  "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE01\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE01');});",
                  "            pm.test('state is ' + pm.globals.get(\"STATESE01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE01');});",
                  "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE01');});",
                  "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE01\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE01');});",
                  "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE01\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE01');});",
                  "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE01\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE01');});",
                  "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE01\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE01');});",
                  "            pm.test('place is ' + pm.globals.get(\"PLACESE01\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE01');});",
                  "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE01\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE01');});",
                  "            pm.test('note is ' + pm.globals.get(\"NOTESE01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE01');});",
                  "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE01\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE01');});",
                  "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE01\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE01');});",
                  "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE01\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE01');});",
                  "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE01\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE01');});",
                  "            pm.test('name is ' + pm.globals.get(\"NAMESE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE01');});",
                  "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE01');});",
                  "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE01\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE01');});",
                  "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE01\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE01');});",
                  "            pm.test('href is ' + pm.globals.get(\"HREFSE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE01');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDSE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE01');});",
                  "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE01');});",
                  "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE01\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE01');});",
                  "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE01\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE01');});",
                  "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE01');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                  "            pm.test('IDSE02 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "          ",
                  "    });",
                  "  }",
                  "  else {",
                  "    var instance = pm.response.json();",
                  "    var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on state', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['state']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceDate', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "        });",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                  "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE01\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE01');});",
                  "            pm.test('feature is ' + pm.globals.get(\"FEATURESE01\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE01');});",
                  "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE01\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE01');});",
                  "            pm.test('state is ' + pm.globals.get(\"STATESE01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE01');});",
                  "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE01');});",
                  "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE01\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE01');});",
                  "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE01\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE01');});",
                  "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE01\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE01');});",
                  "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE01\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE01');});",
                  "            pm.test('place is ' + pm.globals.get(\"PLACESE01\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE01');});",
                  "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE01\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE01');});",
                  "            pm.test('note is ' + pm.globals.get(\"NOTESE01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE01');});",
                  "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE01\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE01');});",
                  "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE01\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE01');});",
                  "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE01\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE01');});",
                  "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE01\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE01');});",
                  "            pm.test('name is ' + pm.globals.get(\"NAMESE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE01');});",
                  "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE01');});",
                  "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE01\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE01');});",
                  "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE01\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE01');});",
                  "            pm.test('href is ' + pm.globals.get(\"HREFSE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE01');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDSE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE01');});",
                  "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE01');});",
                  "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE01\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE01');});",
                  "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE01\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE01');});",
                  "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE01');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                  "            pm.test('IDSE02 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "",
                  "        ",
                  "   ",
                  "}",
                  "  ",
                  "  "
                ],
                "_lastExecutionId": "541dfc8c-9395-47ab-b918-401fa089ac62"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation filter a Service",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "serviceInventoryManagement",
              "v4.0.0",
              "service"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [
              {
                "key": "state",
                "value": "active"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer 1321321"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "78680b4e-f1a5-4970-bc84-c4557c887ddf",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "709b54c1-4fd4-4d4a-911e-8c7ff384efd7",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Total-Count",
              "value": "9"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Apr 2025 11:45:15 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              67,
              108,
              111,
              117,
              100,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              32,
              115,
              101,
              114,
              105,
              97,
              108,
              32,
              49,
              51,
              53,
              53,
              54,
              49,
              53,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              73,
              110,
              115,
              116,
              97,
              110,
              116,
              105,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              34,
              67,
              70,
              83,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              67,
              97,
              116,
              97,
              108,
              111,
              103,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              46,
              48,
              46,
              48,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              102,
              101,
              97,
              116,
              117,
              114,
              101,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              70,
              101,
              97,
              116,
              49,
              34,
              44,
              34,
              105,
              115,
              69,
              110,
              97,
              98,
              108,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              69,
              108,
              97,
              115,
              116,
              105,
              99,
              66,
              97,
              110,
              100,
              119,
              105,
              116,
              104,
              34,
              44,
              34,
              102,
              101,
              97,
              116,
              117,
              114,
              101,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              116,
              105,
              99,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              53,
              103,
              104,
              45,
              102,
              103,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              105,
              115,
              67,
              97,
              112,
              112,
              101,
              100,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              98,
              111,
              111,
              108,
              101,
              97,
              110,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              66,
              111,
              111,
              108,
              101,
              97,
              110,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              115,
              116,
              105,
              99,
              34,
              125,
              93,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              70,
              101,
              97,
              116,
              117,
              114,
              101,
              34,
              125,
              93,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              115,
              116,
              105,
              99,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              53,
              50,
              45,
              103,
              104,
              54,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              123,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              86,
              67,
              80,
              69,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              104,
              111,
              115,
              116,
              58,
              112,
              111,
              114,
              116,
              47,
              115,
              99,
              104,
              101,
              109,
              97,
              47,
              86,
              67,
              80,
              69,
              46,
              115,
              99,
              104,
              101,
              109,
              97,
              46,
              106,
              115,
              111,
              110,
              34,
              44,
              34,
              118,
              67,
              80,
              69,
              95,
              73,
              80,
              34,
              58,
              34,
              49,
              57,
              51,
              46,
              50,
              49,
              56,
              46,
              50,
              51,
              54,
              46,
              50,
              49,
              34,
              44,
              34,
              77,
              97,
              120,
              84,
              120,
              82,
              97,
              116,
              101,
              34,
              58,
              51,
              48,
              48,
              44,
              34,
              84,
              114,
              97,
              110,
              115,
              109,
              105,
              116,
              80,
              111,
              119,
              101,
              114,
              34,
              58,
              34,
              49,
              49,
              32,
              100,
              66,
              109,
              34,
              44,
              34,
              109,
              97,
              120,
              84,
              114,
              101,
              97,
              109,
              34,
              58,
              34,
              79,
              70,
              70,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              79,
              98,
              106,
              101,
              99,
              116,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              115,
              116,
              105,
              99,
              34,
              125,
              93,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              123,
              34,
              114,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              68,
              101,
              112,
              101,
              110,
              100,
              101,
              110,
              116,
              79,
              110,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              47,
              118,
              53,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              53,
              54,
              52,
              53,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              53,
              54,
              52,
              53,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              125,
              93,
              44,
              34,
              114,
              101,
              108,
              97,
              116,
              101,
              100,
              80,
              97,
              114,
              116,
              121,
              34,
              58,
              91,
              123,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              112,
              97,
              114,
              116,
              121,
              79,
              114,
              80,
              97,
              114,
              116,
              121,
              82,
              111,
              108,
              101,
              34,
              58,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              112,
              97,
              114,
              116,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              105,
              110,
              100,
              105,
              118,
              105,
              100,
              117,
              97,
              108,
              47,
              52,
              53,
              54,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              53,
              54,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              74,
              111,
              104,
              110,
              32,
              68,
              111,
              101,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              114,
              116,
              121,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              73,
              110,
              100,
              105,
              118,
              105,
              100,
              117,
              97,
              108,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              82,
              101,
              108,
              97,
              116,
              101,
              100,
              80,
              97,
              114,
              116,
              121,
              82,
              101,
              102,
              79,
              114,
              80,
              97,
              114,
              116,
              121,
              82,
              111,
              108,
              101,
              82,
              101,
              102,
              34,
              125,
              93,
              44,
              34,
              112,
              108,
              97,
              99,
              101,
              34,
              58,
              91,
              123,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              73,
              110,
              115,
              116,
              97,
              108,
              108,
              97,
              116,
              105,
              111,
              110,
              65,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              44,
              34,
              112,
              108,
              97,
              99,
              101,
              34,
              58,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              103,
              101,
              111,
              103,
              114,
              97,
              112,
              104,
              105,
              99,
              65,
              100,
              100,
              114,
              101,
              115,
              115,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              103,
              101,
              111,
              103,
              114,
              97,
              112,
              104,
              105,
              99,
              65,
              100,
              100,
              114,
              101,
              115,
              115,
              47,
              50,
              52,
              51,
              53,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              52,
              51,
              53,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              67,
              117,
              115,
              116,
              111,
              109,
              101,
              114,
              32,
              112,
              114,
              105,
              109,
              97,
              114,
              121,
              32,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              71,
              101,
              111,
              74,
              115,
              111,
              110,
              80,
              111,
              105,
              110,
              116,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              71,
              101,
              111,
              74,
              115,
              111,
              110,
              76,
              105,
              110,
              101,
              83,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              82,
              101,
              108,
              97,
              116,
              101,
              100,
              80,
              108,
              97,
              99,
              101,
              82,
              101,
              102,
              79,
              114,
              86,
              97,
              108,
              117,
              101,
              34,
              125,
              93,
              44,
              34,
              110,
              111,
              116,
              101,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              55,
              55,
              52,
              53,
              54,
              34,
              44,
              34,
              97,
              117,
              116,
              104,
              111,
              114,
              34,
              58,
              34,
              72,
              97,
              114,
              118,
              101,
              121,
              32,
              80,
              111,
              117,
              112,
              111,
              110,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              49,
              56,
              45,
              48,
              49,
              45,
              49,
              53,
              84,
              49,
              50,
              58,
              50,
              54,
              58,
              49,
              49,
              46,
              55,
              52,
              56,
              90,
              34,
              44,
              34,
              116,
              101,
              120,
              116,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              32,
              119,
              97,
              115,
              32,
              105,
              110,
              115,
              116,
              97,
              108,
              108,
              101,
              100,
              32,
              102,
              111,
              114,
              32,
              97,
              32,
              114,
              111,
              99,
              107,
              32,
              115,
              116,
              97,
              114,
              46,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              78,
              111,
              116,
              101,
              34,
              125,
              93,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              49,
              49,
              99,
              48,
              99,
              49,
              55,
              50,
              45,
              57,
              102,
              55,
              49,
              45,
              52,
              50,
              101,
              48,
              45,
              56,
              50,
              57,
              101,
              45,
              50,
              102,
              102,
              50,
              101,
              57,
              55,
              100,
              55,
              98,
              98,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              51,
              84,
              49,
              48,
              58,
              53,
              57,
              58,
              52,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              49,
              99,
              48,
              99,
              49,
              55,
              50,
              45,
              57,
              102,
              55,
              49,
              45,
              52,
              50,
              101,
              48,
              45,
              56,
              50,
              57,
              101,
              45,
              50,
              102,
              102,
              50,
              101,
              57,
              55,
              100,
              55,
              98,
              98,
              101,
              34,
              125,
              44,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              67,
              108,
              111,
              117,
              100,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              32,
              115,
              101,
              114,
              105,
              97,
              108,
              32,
              49,
              51,
              53,
              53,
              54,
              49,
              53,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              73,
              110,
              115,
              116,
              97,
              110,
              116,
              105,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              34,
              67,
              70,
              83,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              67,
              97,
              116,
              97,
              108,
              111,
              103,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              46,
              48,
              46,
              48,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              102,
              101,
              97,
              116,
              117,
              114,
              101,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              70,
              101,
              97,
              116,
              49,
              34,
              44,
              34,
              105,
              115,
              69,
              110,
              97,
              98,
              108,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              69,
              108,
              97,
              115,
              116,
              105,
              99,
              66,
              97,
              110,
              100,
              119,
              105,
              116,
              104,
              34,
              44,
              34,
              102,
              101,
              97,
              116,
              117,
              114,
              101,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              116,
              105,
              99,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              53,
              103,
              104,
              45,
              102,
              103,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              105,
              115,
              67,
              97,
              112,
              112,
              101,
              100,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              98,
              111,
              111,
              108,
              101,
              97,
              110,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              66,
              111,
              111,
              108,
              101,
              97,
              110,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              115,
              116,
              105,
              99,
              34,
              125,
              93,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              70,
              101,
              97,
              116,
              117,
              114,
              101,
              34,
              125,
              93,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              115,
              116,
              105,
              99,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              53,
              50,
              45,
              103,
              104,
              54,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              123,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              86,
              67,
              80,
              69,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              104,
              111,
              115,
              116,
              58,
              112,
              111,
              114,
              116,
              47,
              115,
              99,
              104,
              101,
              109,
              97,
              47,
              86,
              67,
              80,
              69,
              46,
              115,
              99,
              104,
              101,
              109,
              97,
              46,
              106,
              115,
              111,
              110,
              34,
              44,
              34,
              118,
              67,
              80,
              69,
              95,
              73,
              80,
              34,
              58,
              34,
              49,
              57,
              51,
              46,
              50,
              49,
              56,
              46,
              50,
              51,
              54,
              46,
              50,
              49,
              34,
              44,
              34,
              77,
              97,
              120,
              84,
              120,
              82,
              97,
              116,
              101,
              34,
              58,
              51,
              48,
              48,
              44,
              34,
              84,
              114,
              97,
              110,
              115,
              109,
              105,
              116,
              80,
              111,
              119,
              101,
              114,
              34,
              58,
              34,
              49,
              49,
              32,
              100,
              66,
              109,
              34,
              44,
              34,
              109,
              97,
              120,
              84,
              114,
              101,
              97,
              109,
              34,
              58,
              34,
              79,
              70,
              70,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              79,
              98,
              106,
              101,
              99,
              116,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              115,
              116,
              105,
              99,
              34,
              125,
              93,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              123,
              34,
              114,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              68,
              101,
              112,
              101,
              110,
              100,
              101,
              110,
              116,
              79,
              110,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              47,
              118,
              53,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              53,
              54,
              52,
              53,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              53,
              54,
              52,
              53,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              125,
              93,
              44,
              34,
              114,
              101,
              108,
              97,
              116,
              101,
              100,
              80,
              97,
              114,
              116,
              121,
              34,
              58,
              91,
              123,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              112,
              97,
              114,
              116,
              121,
              79,
              114,
              80,
              97,
              114,
              116,
              121,
              82,
              111,
              108,
              101,
              34,
              58,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              112,
              97,
              114,
              116,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              105,
              110,
              100,
              105,
              118,
              105,
              100,
              117,
              97,
              108,
              47,
              52,
              53,
              54,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              53,
              54,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              74,
              111,
              104,
              110,
              32,
              68,
              111,
              101,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              114,
              116,
              121,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              73,
              110,
              100,
              105,
              118,
              105,
              100,
              117,
              97,
              108,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              82,
              101,
              108,
              97,
              116,
              101,
              100,
              80,
              97,
              114,
              116,
              121,
              82,
              101,
              102,
              79,
              114,
              80,
              97,
              114,
              116,
              121,
              82,
              111,
              108,
              101,
              82,
              101,
              102,
              34,
              125,
              93,
              44,
              34,
              112,
              108,
              97,
              99,
              101,
              34,
              58,
              91,
              123,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              73,
              110,
              115,
              116,
              97,
              108,
              108,
              97,
              116,
              105,
              111,
              110,
              65,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              44,
              34,
              112,
              108,
              97,
              99,
              101,
              34,
              58,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              103,
              101,
              111,
              103,
              114,
              97,
              112,
              104,
              105,
              99,
              65,
              100,
              100,
              114,
              101,
              115,
              115,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              103,
              101,
              111,
              103,
              114,
              97,
              112,
              104,
              105,
              99,
              65,
              100,
              100,
              114,
              101,
              115,
              115,
              47,
              50,
              52,
              51,
              53,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              52,
              51,
              53,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              67,
              117,
              115,
              116,
              111,
              109,
              101,
              114,
              32,
              112,
              114,
              105,
              109,
              97,
              114,
              121,
              32,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              71,
              101,
              111,
              74,
              115,
              111,
              110,
              80,
              111,
              105,
              110,
              116,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              71,
              101,
              111,
              74,
              115,
              111,
              110,
              76,
              105,
              110,
              101,
              83,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              82,
              101,
              108,
              97,
              116,
              101,
              100,
              80,
              108,
              97,
              99,
              101,
              82,
              101,
              102,
              79,
              114,
              86,
              97,
              108,
              117,
              101,
              34,
              125,
              93,
              44,
              34,
              110,
              111,
              116,
              101,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              55,
              55,
              52,
              53,
              54,
              34,
              44,
              34,
              97,
              117,
              116,
              104,
              111,
              114,
              34,
              58,
              34,
              72,
              97,
              114,
              118,
              101,
              121,
              32,
              80,
              111,
              117,
              112,
              111,
              110,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              49,
              56,
              45,
              48,
              49,
              45,
              49,
              53,
              84,
              49,
              50,
              58,
              50,
              54,
              58,
              49,
              49,
              46,
              55,
              52,
              56,
              90,
              34,
              44,
              34,
              116,
              101,
              120,
              116,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              32,
              119,
              97,
              115,
              32,
              105,
              110,
              115,
              116,
              97,
              108,
              108,
              101,
              100,
              32,
              102,
              111,
              114,
              32,
              97,
              32,
              114,
              111,
              99,
              107,
              32,
              115,
              116,
              97,
              114,
              46,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              78,
              111,
              116,
              101,
              34,
              125,
              93,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              97,
              51,
              99,
              52,
              97,
              98,
              52,
              52,
              45,
              98,
              50,
              53,
              54,
              45,
              52,
              99,
              55,
              50,
              45,
              57,
              100,
              100,
              57,
              45,
              54,
              102,
              49,
              102,
              54,
              52,
              98,
              53,
              50,
              99,
              51,
              48,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              51,
              84,
              49,
              49,
              58,
              52,
              51,
              58,
              48,
              49,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              97,
              51,
              99,
              52,
              97,
              98,
              52,
              52,
              45,
              98,
              50,
              53,
              54,
              45,
              52,
              99,
              55,
              50,
              45,
              57,
              100,
              100,
              57,
              45,
              54,
              102,
              49,
              102,
              54,
              52,
              98,
              53,
              50,
              99,
              51,
              48,
              34,
              125,
              44,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              67,
              108,
              111,
              117,
              100,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              32,
              115,
              101,
              114,
              105,
              97,
              108,
              32,
              49,
              51,
              53,
              53,
              54,
              49,
              53,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              73,
              110,
              115,
              116,
              97,
              110,
              116,
              105,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              34,
              67,
              70,
              83,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              67,
              97,
              116,
              97,
              108,
              111,
              103,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              46,
              48,
              46,
              48,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              102,
              101,
              97,
              116,
              117,
              114,
              101,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              70,
              101,
              97,
              116,
              49,
              34,
              44,
              34,
              105,
              115,
              69,
              110,
              97,
              98,
              108,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              69,
              108,
              97,
              115,
              116,
              105,
              99,
              66,
              97,
              110,
              100,
              119,
              105,
              116,
              104,
              34,
              44,
              34,
              102,
              101,
              97,
              116,
              117,
              114,
              101,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              116,
              105,
              99,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              53,
              103,
              104,
              45,
              102,
              103,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              105,
              115,
              67,
              97,
              112,
              112,
              101,
              100,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              98,
              111,
              111,
              108,
              101,
              97,
              110,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              66,
              111,
              111,
              108,
              101,
              97,
              110,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              115,
              116,
              105,
              99,
              34,
              125,
              93,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              70,
              101,
              97,
              116,
              117,
              114,
              101,
              34,
              125,
              93,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              115,
              116,
              105,
              99,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              53,
              50,
              45,
              103,
              104,
              54,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              123,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              86,
              67,
              80,
              69,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              104,
              111,
              115,
              116,
              58,
              112,
              111,
              114,
              116,
              47,
              115,
              99,
              104,
              101,
              109,
              97,
              47,
              86,
              67,
              80,
              69,
              46,
              115,
              99,
              104,
              101,
              109,
              97,
              46,
              106,
              115,
              111,
              110,
              34,
              44,
              34,
              118,
              67,
              80,
              69,
              95,
              73,
              80,
              34,
              58,
              34,
              49,
              57,
              51,
              46,
              50,
              49,
              56,
              46,
              50,
              51,
              54,
              46,
              50,
              49,
              34,
              44,
              34,
              77,
              97,
              120,
              84,
              120,
              82,
              97,
              116,
              101,
              34,
              58,
              51,
              48,
              48,
              44,
              34,
              84,
              114,
              97,
              110,
              115,
              109,
              105,
              116,
              80,
              111,
              119,
              101,
              114,
              34,
              58,
              34,
              49,
              49,
              32,
              100,
              66,
              109,
              34,
              44,
              34,
              109,
              97,
              120,
              84,
              114,
              101,
              97,
              109,
              34,
              58,
              34,
              79,
              70,
              70,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              79,
              98,
              106,
              101,
              99,
              116,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              115,
              116,
              105,
              99,
              34,
              125,
              93,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              123,
              34,
              114,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              68,
              101,
              112,
              101,
              110,
              100,
              101,
              110,
              116,
              79,
              110,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              47,
              118,
              53,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              53,
              54,
              52,
              53,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              53,
              54,
              52,
              53,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              125,
              93,
              44,
              34,
              114,
              101,
              108,
              97,
              116,
              101,
              100,
              80,
              97,
              114,
              116,
              121,
              34,
              58,
              91,
              123,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              112,
              97,
              114,
              116,
              121,
              79,
              114,
              80,
              97,
              114,
              116,
              121,
              82,
              111,
              108,
              101,
              34,
              58,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              112,
              97,
              114,
              116,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              105,
              110,
              100,
              105,
              118,
              105,
              100,
              117,
              97,
              108,
              47,
              52,
              53,
              54,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              53,
              54,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              74,
              111,
              104,
              110,
              32,
              68,
              111,
              101,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              114,
              116,
              121,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              73,
              110,
              100,
              105,
              118,
              105,
              100,
              117,
              97,
              108,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              82,
              101,
              108,
              97,
              116,
              101,
              100,
              80,
              97,
              114,
              116,
              121,
              82,
              101,
              102,
              79,
              114,
              80,
              97,
              114,
              116,
              121,
              82,
              111,
              108,
              101,
              82,
              101,
              102,
              34,
              125,
              93,
              44,
              34,
              112,
              108,
              97,
              99,
              101,
              34,
              58,
              91,
              123,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              73,
              110,
              115,
              116,
              97,
              108,
              108,
              97,
              116,
              105,
              111,
              110,
              65,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              44,
              34,
              112,
              108,
              97,
              99,
              101,
              34,
              58,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              103,
              101,
              111,
              103,
              114,
              97,
              112,
              104,
              105,
              99,
              65,
              100,
              100,
              114,
              101,
              115,
              115,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              103,
              101,
              111,
              103,
              114,
              97,
              112,
              104,
              105,
              99,
              65,
              100,
              100,
              114,
              101,
              115,
              115,
              47,
              50,
              52,
              51,
              53,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              52,
              51,
              53,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              67,
              117,
              115,
              116,
              111,
              109,
              101,
              114,
              32,
              112,
              114,
              105,
              109,
              97,
              114,
              121,
              32,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              71,
              101,
              111,
              74,
              115,
              111,
              110,
              80,
              111,
              105,
              110,
              116,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              71,
              101,
              111,
              74,
              115,
              111,
              110,
              76,
              105,
              110,
              101,
              83,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              82,
              101,
              108,
              97,
              116,
              101,
              100,
              80,
              108,
              97,
              99,
              101,
              82,
              101,
              102,
              79,
              114,
              86,
              97,
              108,
              117,
              101,
              34,
              125,
              93,
              44,
              34,
              110,
              111,
              116,
              101,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              55,
              55,
              52,
              53,
              54,
              34,
              44,
              34,
              97,
              117,
              116,
              104,
              111,
              114,
              34,
              58,
              34,
              72,
              97,
              114,
              118,
              101,
              121,
              32,
              80,
              111,
              117,
              112,
              111,
              110,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              49,
              56,
              45,
              48,
              49,
              45,
              49,
              53,
              84,
              49,
              50,
              58,
              50,
              54,
              58,
              49,
              49,
              46,
              55,
              52,
              56,
              90,
              34,
              44,
              34,
              116,
              101,
              120,
              116,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              32,
              119,
              97,
              115,
              32,
              105,
              110,
              115,
              116,
              97,
              108,
              108,
              101,
              100,
              32,
              102,
              111,
              114,
              32,
              97,
              32,
              114,
              111,
              99,
              107,
              32,
              115,
              116,
              97,
              114,
              46,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              78,
              111,
              116,
              101,
              34,
              125,
              93,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              50,
              102,
              52,
              99,
              102,
              102,
              100,
              56,
              45,
              52,
              100,
              49,
              54,
              45,
              52,
              101,
              101,
              48,
              45,
              98,
              56,
              99,
              49,
              45,
              100,
              48,
              102,
              53,
              57,
              49,
              97,
              98,
              56,
              52,
              101,
              98,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              52,
              84,
              49,
              48,
              58,
              51,
              56,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              102,
              52,
              99,
              102,
              102,
              100,
              56,
              45,
              52,
              100,
              49,
              54,
              45,
              52,
              101,
              101,
              48,
              45,
              98,
              56,
              99,
              49,
              45,
              100,
              48,
              102,
              53,
              57,
              49,
              97,
              98,
              56,
              52,
              101,
              98,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              51,
              55,
              58,
              51,
              56,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              50,
              100,
              102,
              49,
              48,
              48,
              98,
              49,
              45,
              52,
              55,
              53,
              52,
              45,
              52,
              55,
              100,
              50,
              45,
              97,
              51,
              52,
              102,
              45,
              100,
              54,
              100,
              49,
              50,
              51,
              51,
              98,
              97,
              55,
              54,
              56,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              51,
              55,
              58,
              51,
              56,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              100,
              102,
              49,
              48,
              48,
              98,
              49,
              45,
              52,
              55,
              53,
              52,
              45,
              52,
              55,
              100,
              50,
              45,
              97,
              51,
              52,
              102,
              45,
              100,
              54,
              100,
              49,
              50,
              51,
              51,
              98,
              97,
              55,
              54,
              56,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              51,
              55,
              58,
              51,
              57,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              54,
              55,
              98,
              57,
              51,
              57,
              100,
              101,
              45,
              54,
              52,
              56,
              49,
              45,
              52,
              102,
              57,
              50,
              45,
              98,
              102,
              53,
              57,
              45,
              49,
              55,
              49,
              97,
              102,
              51,
              52,
              57,
              98,
              99,
              49,
              49,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              51,
              55,
              58,
              51,
              57,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              55,
              98,
              57,
              51,
              57,
              100,
              101,
              45,
              54,
              52,
              56,
              49,
              45,
              52,
              102,
              57,
              50,
              45,
              98,
              102,
              53,
              57,
              45,
              49,
              55,
              49,
              97,
              102,
              51,
              52,
              57,
              98,
              99,
              49,
              49,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              50,
              58,
              48,
              49,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              50,
              101,
              97,
              51,
              102,
              100,
              50,
              54,
              45,
              50,
              51,
              98,
              97,
              45,
              52,
              100,
              57,
              101,
              45,
              57,
              57,
              50,
              53,
              45,
              54,
              101,
              102,
              97,
              49,
              98,
              100,
              55,
              101,
              49,
              50,
              100,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              50,
              58,
              48,
              49,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              101,
              97,
              51,
              102,
              100,
              50,
              54,
              45,
              50,
              51,
              98,
              97,
              45,
              52,
              100,
              57,
              101,
              45,
              57,
              57,
              50,
              53,
              45,
              54,
              101,
              102,
              97,
              49,
              98,
              100,
              55,
              101,
              49,
              50,
              100,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              50,
              58,
              48,
              49,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              56,
              57,
              48,
              100,
              101,
              101,
              48,
              53,
              45,
              48,
              97,
              51,
              51,
              45,
              52,
              102,
              51,
              55,
              45,
              56,
              57,
              49,
              56,
              45,
              99,
              102,
              55,
              49,
              99,
              101,
              51,
              55,
              52,
              51,
              48,
              100,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              50,
              58,
              48,
              49,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              56,
              57,
              48,
              100,
              101,
              101,
              48,
              53,
              45,
              48,
              97,
              51,
              51,
              45,
              52,
              102,
              51,
              55,
              45,
              56,
              57,
              49,
              56,
              45,
              99,
              102,
              55,
              49,
              99,
              101,
              51,
              55,
              52,
              51,
              48,
              100,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 12,
          "responseSize": 8194
        },
        "id": "0d1eea38-e2b8-428d-84b4-a6f120160bd4",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "supportingService is null",
            "skipped": false
          },
          {
            "assertion": "feature is null",
            "skipped": false
          },
          {
            "assertion": "serviceRelationship is ",
            "skipped": false
          },
          {
            "assertion": "state is active",
            "skipped": false
          },
          {
            "assertion": "relatedEntity is null",
            "skipped": false
          },
          {
            "assertion": "startMode is null",
            "skipped": false
          },
          {
            "assertion": "startDate is null",
            "skipped": false
          },
          {
            "assertion": "isBundle is null",
            "skipped": false
          },
          {
            "assertion": "serviceOrderItem is null",
            "skipped": false
          },
          {
            "assertion": "place is null",
            "skipped": false
          },
          {
            "assertion": "serviceCharacteristic is null",
            "skipped": false
          },
          {
            "assertion": "note is null",
            "skipped": false
          },
          {
            "assertion": "serviceType is null",
            "skipped": false
          },
          {
            "assertion": "supportingResource is null",
            "skipped": false
          },
          {
            "assertion": "hasStarted is null",
            "skipped": false
          },
          {
            "assertion": "serviceSpecification is [object Object]",
            "skipped": false
          },
          {
            "assertion": "name is null",
            "skipped": false
          },
          {
            "assertion": "description is null",
            "skipped": false
          },
          {
            "assertion": "serviceDate is 2025-04-25T11:45:15Z",
            "skipped": false
          },
          {
            "assertion": "endDate is null",
            "skipped": false
          },
          {
            "assertion": "href is http://localhost:8080/serviceInventoryManagement/v4.0.0/service/d6dfb61c-f06e-470e-84de-fb4c62da116f",
            "skipped": false
          },
          {
            "assertion": "id is d6dfb61c-f06e-470e-84de-fb4c62da116f",
            "skipped": false
          },
          {
            "assertion": "relatedParty is null",
            "skipped": false
          },
          {
            "assertion": "isServiceEnabled is null",
            "skipped": false
          },
          {
            "assertion": "isStateful is null",
            "skipped": false
          },
          {
            "assertion": "category is null",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "IDSE02 not expected on this test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "851b821b-6f96-4a61-bca4-6bf9b03f03ac",
          "length": 18,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b87284a2-c697-410d-b142-21f0f6474753"
        },
        "item": {
          "id": "61281603-b8dc-459d-bf3c-3f77d55bb156",
          "name": "/Service?state={{STATESE02}}",
          "request": {
            "description": {
              "content": "This operation filter a Service",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Service_Inventory}}service"
              ],
              "query": [
                {
                  "key": "state",
                  "value": "{{STATESE02}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer 1321321"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b18ebaf0-41d4-4747-8c99-53118a955a38",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "  ",
                  "  ",
                  "  ",
                  "var jsonData = pm.response.json();",
                  "  ",
                  "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                  "    jsonData.forEach(function (instance, index) {",
                  "      ",
                  "        var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on state', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['state']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceDate', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "        });",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                  "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE02\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE02');});",
                  "            pm.test('feature is ' + pm.globals.get(\"FEATURESE02\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE02');});",
                  "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE02\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE02');});",
                  "            pm.test('state is ' + pm.globals.get(\"STATESE02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE02');});",
                  "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE02');});",
                  "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE02\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE02');});",
                  "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE02\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE02');});",
                  "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE02\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE02');});",
                  "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE02\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE02');});",
                  "            pm.test('place is ' + pm.globals.get(\"PLACESE02\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE02');});",
                  "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE02\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE02');});",
                  "            pm.test('note is ' + pm.globals.get(\"NOTESE02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE02');});",
                  "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE02\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE02');});",
                  "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE02\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE02');});",
                  "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE02\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE02');});",
                  "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE02\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE02');});",
                  "            pm.test('name is ' + pm.globals.get(\"NAMESE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE02');});",
                  "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE02');});",
                  "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE02\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE02');});",
                  "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE02\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE02');});",
                  "            pm.test('href is ' + pm.globals.get(\"HREFSE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE02');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDSE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE02');});",
                  "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE02');});",
                  "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE02\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE02');});",
                  "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE02\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE02');});",
                  "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE02');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                  "            pm.test('IDSE01 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "          ",
                  "    });",
                  "  }",
                  "  else {",
                  "    var instance = pm.response.json();",
                  "    var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on state', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['state']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceDate', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "        });",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                  "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE02\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE02');});",
                  "            pm.test('feature is ' + pm.globals.get(\"FEATURESE02\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE02');});",
                  "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE02\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE02');});",
                  "            pm.test('state is ' + pm.globals.get(\"STATESE02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE02');});",
                  "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE02');});",
                  "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE02\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE02');});",
                  "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE02\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE02');});",
                  "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE02\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE02');});",
                  "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE02\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE02');});",
                  "            pm.test('place is ' + pm.globals.get(\"PLACESE02\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE02');});",
                  "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE02\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE02');});",
                  "            pm.test('note is ' + pm.globals.get(\"NOTESE02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE02');});",
                  "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE02\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE02');});",
                  "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE02\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE02');});",
                  "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE02\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE02');});",
                  "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE02\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE02');});",
                  "            pm.test('name is ' + pm.globals.get(\"NAMESE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE02');});",
                  "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE02');});",
                  "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE02\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE02');});",
                  "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE02\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE02');});",
                  "            pm.test('href is ' + pm.globals.get(\"HREFSE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE02');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDSE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE02');});",
                  "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE02');});",
                  "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE02\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE02');});",
                  "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE02\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE02');});",
                  "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE02');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                  "            pm.test('IDSE01 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "",
                  "        ",
                  "   ",
                  "}",
                  "  ",
                  "  "
                ],
                "_lastExecutionId": "c8347850-1bee-4e9f-bdc6-08ca7be08154"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation filter a Service",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "serviceInventoryManagement",
              "v4.0.0",
              "service"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [
              {
                "key": "state",
                "value": "active"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer 1321321"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3d586e0d-56a8-4bd1-bee5-738399a53d68",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "c326f34a-3368-40d7-8349-b15abbf79ff3",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Total-Count",
              "value": "9"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Apr 2025 11:45:15 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              67,
              108,
              111,
              117,
              100,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              32,
              115,
              101,
              114,
              105,
              97,
              108,
              32,
              49,
              51,
              53,
              53,
              54,
              49,
              53,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              73,
              110,
              115,
              116,
              97,
              110,
              116,
              105,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              34,
              67,
              70,
              83,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              67,
              97,
              116,
              97,
              108,
              111,
              103,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              46,
              48,
              46,
              48,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              102,
              101,
              97,
              116,
              117,
              114,
              101,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              70,
              101,
              97,
              116,
              49,
              34,
              44,
              34,
              105,
              115,
              69,
              110,
              97,
              98,
              108,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              69,
              108,
              97,
              115,
              116,
              105,
              99,
              66,
              97,
              110,
              100,
              119,
              105,
              116,
              104,
              34,
              44,
              34,
              102,
              101,
              97,
              116,
              117,
              114,
              101,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              116,
              105,
              99,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              53,
              103,
              104,
              45,
              102,
              103,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              105,
              115,
              67,
              97,
              112,
              112,
              101,
              100,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              98,
              111,
              111,
              108,
              101,
              97,
              110,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              66,
              111,
              111,
              108,
              101,
              97,
              110,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              115,
              116,
              105,
              99,
              34,
              125,
              93,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              70,
              101,
              97,
              116,
              117,
              114,
              101,
              34,
              125,
              93,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              115,
              116,
              105,
              99,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              53,
              50,
              45,
              103,
              104,
              54,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              123,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              86,
              67,
              80,
              69,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              104,
              111,
              115,
              116,
              58,
              112,
              111,
              114,
              116,
              47,
              115,
              99,
              104,
              101,
              109,
              97,
              47,
              86,
              67,
              80,
              69,
              46,
              115,
              99,
              104,
              101,
              109,
              97,
              46,
              106,
              115,
              111,
              110,
              34,
              44,
              34,
              118,
              67,
              80,
              69,
              95,
              73,
              80,
              34,
              58,
              34,
              49,
              57,
              51,
              46,
              50,
              49,
              56,
              46,
              50,
              51,
              54,
              46,
              50,
              49,
              34,
              44,
              34,
              77,
              97,
              120,
              84,
              120,
              82,
              97,
              116,
              101,
              34,
              58,
              51,
              48,
              48,
              44,
              34,
              84,
              114,
              97,
              110,
              115,
              109,
              105,
              116,
              80,
              111,
              119,
              101,
              114,
              34,
              58,
              34,
              49,
              49,
              32,
              100,
              66,
              109,
              34,
              44,
              34,
              109,
              97,
              120,
              84,
              114,
              101,
              97,
              109,
              34,
              58,
              34,
              79,
              70,
              70,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              79,
              98,
              106,
              101,
              99,
              116,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              115,
              116,
              105,
              99,
              34,
              125,
              93,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              123,
              34,
              114,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              68,
              101,
              112,
              101,
              110,
              100,
              101,
              110,
              116,
              79,
              110,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              47,
              118,
              53,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              53,
              54,
              52,
              53,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              53,
              54,
              52,
              53,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              125,
              93,
              44,
              34,
              114,
              101,
              108,
              97,
              116,
              101,
              100,
              80,
              97,
              114,
              116,
              121,
              34,
              58,
              91,
              123,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              112,
              97,
              114,
              116,
              121,
              79,
              114,
              80,
              97,
              114,
              116,
              121,
              82,
              111,
              108,
              101,
              34,
              58,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              112,
              97,
              114,
              116,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              105,
              110,
              100,
              105,
              118,
              105,
              100,
              117,
              97,
              108,
              47,
              52,
              53,
              54,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              53,
              54,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              74,
              111,
              104,
              110,
              32,
              68,
              111,
              101,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              114,
              116,
              121,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              73,
              110,
              100,
              105,
              118,
              105,
              100,
              117,
              97,
              108,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              82,
              101,
              108,
              97,
              116,
              101,
              100,
              80,
              97,
              114,
              116,
              121,
              82,
              101,
              102,
              79,
              114,
              80,
              97,
              114,
              116,
              121,
              82,
              111,
              108,
              101,
              82,
              101,
              102,
              34,
              125,
              93,
              44,
              34,
              112,
              108,
              97,
              99,
              101,
              34,
              58,
              91,
              123,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              73,
              110,
              115,
              116,
              97,
              108,
              108,
              97,
              116,
              105,
              111,
              110,
              65,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              44,
              34,
              112,
              108,
              97,
              99,
              101,
              34,
              58,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              103,
              101,
              111,
              103,
              114,
              97,
              112,
              104,
              105,
              99,
              65,
              100,
              100,
              114,
              101,
              115,
              115,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              103,
              101,
              111,
              103,
              114,
              97,
              112,
              104,
              105,
              99,
              65,
              100,
              100,
              114,
              101,
              115,
              115,
              47,
              50,
              52,
              51,
              53,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              52,
              51,
              53,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              67,
              117,
              115,
              116,
              111,
              109,
              101,
              114,
              32,
              112,
              114,
              105,
              109,
              97,
              114,
              121,
              32,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              71,
              101,
              111,
              74,
              115,
              111,
              110,
              80,
              111,
              105,
              110,
              116,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              71,
              101,
              111,
              74,
              115,
              111,
              110,
              76,
              105,
              110,
              101,
              83,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              82,
              101,
              108,
              97,
              116,
              101,
              100,
              80,
              108,
              97,
              99,
              101,
              82,
              101,
              102,
              79,
              114,
              86,
              97,
              108,
              117,
              101,
              34,
              125,
              93,
              44,
              34,
              110,
              111,
              116,
              101,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              55,
              55,
              52,
              53,
              54,
              34,
              44,
              34,
              97,
              117,
              116,
              104,
              111,
              114,
              34,
              58,
              34,
              72,
              97,
              114,
              118,
              101,
              121,
              32,
              80,
              111,
              117,
              112,
              111,
              110,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              49,
              56,
              45,
              48,
              49,
              45,
              49,
              53,
              84,
              49,
              50,
              58,
              50,
              54,
              58,
              49,
              49,
              46,
              55,
              52,
              56,
              90,
              34,
              44,
              34,
              116,
              101,
              120,
              116,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              32,
              119,
              97,
              115,
              32,
              105,
              110,
              115,
              116,
              97,
              108,
              108,
              101,
              100,
              32,
              102,
              111,
              114,
              32,
              97,
              32,
              114,
              111,
              99,
              107,
              32,
              115,
              116,
              97,
              114,
              46,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              78,
              111,
              116,
              101,
              34,
              125,
              93,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              49,
              49,
              99,
              48,
              99,
              49,
              55,
              50,
              45,
              57,
              102,
              55,
              49,
              45,
              52,
              50,
              101,
              48,
              45,
              56,
              50,
              57,
              101,
              45,
              50,
              102,
              102,
              50,
              101,
              57,
              55,
              100,
              55,
              98,
              98,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              51,
              84,
              49,
              48,
              58,
              53,
              57,
              58,
              52,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              49,
              99,
              48,
              99,
              49,
              55,
              50,
              45,
              57,
              102,
              55,
              49,
              45,
              52,
              50,
              101,
              48,
              45,
              56,
              50,
              57,
              101,
              45,
              50,
              102,
              102,
              50,
              101,
              57,
              55,
              100,
              55,
              98,
              98,
              101,
              34,
              125,
              44,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              67,
              108,
              111,
              117,
              100,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              32,
              115,
              101,
              114,
              105,
              97,
              108,
              32,
              49,
              51,
              53,
              53,
              54,
              49,
              53,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              73,
              110,
              115,
              116,
              97,
              110,
              116,
              105,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              34,
              67,
              70,
              83,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              67,
              97,
              116,
              97,
              108,
              111,
              103,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              46,
              48,
              46,
              48,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              102,
              101,
              97,
              116,
              117,
              114,
              101,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              70,
              101,
              97,
              116,
              49,
              34,
              44,
              34,
              105,
              115,
              69,
              110,
              97,
              98,
              108,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              69,
              108,
              97,
              115,
              116,
              105,
              99,
              66,
              97,
              110,
              100,
              119,
              105,
              116,
              104,
              34,
              44,
              34,
              102,
              101,
              97,
              116,
              117,
              114,
              101,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              116,
              105,
              99,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              53,
              103,
              104,
              45,
              102,
              103,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              105,
              115,
              67,
              97,
              112,
              112,
              101,
              100,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              98,
              111,
              111,
              108,
              101,
              97,
              110,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              66,
              111,
              111,
              108,
              101,
              97,
              110,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              115,
              116,
              105,
              99,
              34,
              125,
              93,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              70,
              101,
              97,
              116,
              117,
              114,
              101,
              34,
              125,
              93,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              115,
              116,
              105,
              99,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              53,
              50,
              45,
              103,
              104,
              54,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              123,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              86,
              67,
              80,
              69,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              104,
              111,
              115,
              116,
              58,
              112,
              111,
              114,
              116,
              47,
              115,
              99,
              104,
              101,
              109,
              97,
              47,
              86,
              67,
              80,
              69,
              46,
              115,
              99,
              104,
              101,
              109,
              97,
              46,
              106,
              115,
              111,
              110,
              34,
              44,
              34,
              118,
              67,
              80,
              69,
              95,
              73,
              80,
              34,
              58,
              34,
              49,
              57,
              51,
              46,
              50,
              49,
              56,
              46,
              50,
              51,
              54,
              46,
              50,
              49,
              34,
              44,
              34,
              77,
              97,
              120,
              84,
              120,
              82,
              97,
              116,
              101,
              34,
              58,
              51,
              48,
              48,
              44,
              34,
              84,
              114,
              97,
              110,
              115,
              109,
              105,
              116,
              80,
              111,
              119,
              101,
              114,
              34,
              58,
              34,
              49,
              49,
              32,
              100,
              66,
              109,
              34,
              44,
              34,
              109,
              97,
              120,
              84,
              114,
              101,
              97,
              109,
              34,
              58,
              34,
              79,
              70,
              70,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              79,
              98,
              106,
              101,
              99,
              116,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              115,
              116,
              105,
              99,
              34,
              125,
              93,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              123,
              34,
              114,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              68,
              101,
              112,
              101,
              110,
              100,
              101,
              110,
              116,
              79,
              110,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              47,
              118,
              53,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              53,
              54,
              52,
              53,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              53,
              54,
              52,
              53,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              125,
              93,
              44,
              34,
              114,
              101,
              108,
              97,
              116,
              101,
              100,
              80,
              97,
              114,
              116,
              121,
              34,
              58,
              91,
              123,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              112,
              97,
              114,
              116,
              121,
              79,
              114,
              80,
              97,
              114,
              116,
              121,
              82,
              111,
              108,
              101,
              34,
              58,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              112,
              97,
              114,
              116,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              105,
              110,
              100,
              105,
              118,
              105,
              100,
              117,
              97,
              108,
              47,
              52,
              53,
              54,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              53,
              54,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              74,
              111,
              104,
              110,
              32,
              68,
              111,
              101,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              114,
              116,
              121,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              73,
              110,
              100,
              105,
              118,
              105,
              100,
              117,
              97,
              108,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              82,
              101,
              108,
              97,
              116,
              101,
              100,
              80,
              97,
              114,
              116,
              121,
              82,
              101,
              102,
              79,
              114,
              80,
              97,
              114,
              116,
              121,
              82,
              111,
              108,
              101,
              82,
              101,
              102,
              34,
              125,
              93,
              44,
              34,
              112,
              108,
              97,
              99,
              101,
              34,
              58,
              91,
              123,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              73,
              110,
              115,
              116,
              97,
              108,
              108,
              97,
              116,
              105,
              111,
              110,
              65,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              44,
              34,
              112,
              108,
              97,
              99,
              101,
              34,
              58,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              103,
              101,
              111,
              103,
              114,
              97,
              112,
              104,
              105,
              99,
              65,
              100,
              100,
              114,
              101,
              115,
              115,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              103,
              101,
              111,
              103,
              114,
              97,
              112,
              104,
              105,
              99,
              65,
              100,
              100,
              114,
              101,
              115,
              115,
              47,
              50,
              52,
              51,
              53,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              52,
              51,
              53,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              67,
              117,
              115,
              116,
              111,
              109,
              101,
              114,
              32,
              112,
              114,
              105,
              109,
              97,
              114,
              121,
              32,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              71,
              101,
              111,
              74,
              115,
              111,
              110,
              80,
              111,
              105,
              110,
              116,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              71,
              101,
              111,
              74,
              115,
              111,
              110,
              76,
              105,
              110,
              101,
              83,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              82,
              101,
              108,
              97,
              116,
              101,
              100,
              80,
              108,
              97,
              99,
              101,
              82,
              101,
              102,
              79,
              114,
              86,
              97,
              108,
              117,
              101,
              34,
              125,
              93,
              44,
              34,
              110,
              111,
              116,
              101,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              55,
              55,
              52,
              53,
              54,
              34,
              44,
              34,
              97,
              117,
              116,
              104,
              111,
              114,
              34,
              58,
              34,
              72,
              97,
              114,
              118,
              101,
              121,
              32,
              80,
              111,
              117,
              112,
              111,
              110,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              49,
              56,
              45,
              48,
              49,
              45,
              49,
              53,
              84,
              49,
              50,
              58,
              50,
              54,
              58,
              49,
              49,
              46,
              55,
              52,
              56,
              90,
              34,
              44,
              34,
              116,
              101,
              120,
              116,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              32,
              119,
              97,
              115,
              32,
              105,
              110,
              115,
              116,
              97,
              108,
              108,
              101,
              100,
              32,
              102,
              111,
              114,
              32,
              97,
              32,
              114,
              111,
              99,
              107,
              32,
              115,
              116,
              97,
              114,
              46,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              78,
              111,
              116,
              101,
              34,
              125,
              93,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              97,
              51,
              99,
              52,
              97,
              98,
              52,
              52,
              45,
              98,
              50,
              53,
              54,
              45,
              52,
              99,
              55,
              50,
              45,
              57,
              100,
              100,
              57,
              45,
              54,
              102,
              49,
              102,
              54,
              52,
              98,
              53,
              50,
              99,
              51,
              48,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              51,
              84,
              49,
              49,
              58,
              52,
              51,
              58,
              48,
              49,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              97,
              51,
              99,
              52,
              97,
              98,
              52,
              52,
              45,
              98,
              50,
              53,
              54,
              45,
              52,
              99,
              55,
              50,
              45,
              57,
              100,
              100,
              57,
              45,
              54,
              102,
              49,
              102,
              54,
              52,
              98,
              53,
              50,
              99,
              51,
              48,
              34,
              125,
              44,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              67,
              108,
              111,
              117,
              100,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              32,
              115,
              101,
              114,
              105,
              97,
              108,
              32,
              49,
              51,
              53,
              53,
              54,
              49,
              53,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              73,
              110,
              115,
              116,
              97,
              110,
              116,
              105,
              97,
              116,
              105,
              111,
              110,
              32,
              111,
              102,
              32,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              34,
              67,
              70,
              83,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              67,
              97,
              116,
              97,
              108,
              111,
              103,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              46,
              48,
              46,
              48,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              102,
              101,
              97,
              116,
              117,
              114,
              101,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              70,
              101,
              97,
              116,
              49,
              34,
              44,
              34,
              105,
              115,
              69,
              110,
              97,
              98,
              108,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              69,
              108,
              97,
              115,
              116,
              105,
              99,
              66,
              97,
              110,
              100,
              119,
              105,
              116,
              104,
              34,
              44,
              34,
              102,
              101,
              97,
              116,
              117,
              114,
              101,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              116,
              105,
              99,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              53,
              103,
              104,
              45,
              102,
              103,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              105,
              115,
              67,
              97,
              112,
              112,
              101,
              100,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              98,
              111,
              111,
              108,
              101,
              97,
              110,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              66,
              111,
              111,
              108,
              101,
              97,
              110,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              115,
              116,
              105,
              99,
              34,
              125,
              93,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              70,
              101,
              97,
              116,
              117,
              114,
              101,
              34,
              125,
              93,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              115,
              116,
              105,
              99,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              53,
              50,
              45,
              103,
              104,
              54,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              111,
              98,
              106,
              101,
              99,
              116,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              123,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              86,
              67,
              80,
              69,
              34,
              44,
              34,
              64,
              115,
              99,
              104,
              101,
              109,
              97,
              76,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              104,
              111,
              115,
              116,
              58,
              112,
              111,
              114,
              116,
              47,
              115,
              99,
              104,
              101,
              109,
              97,
              47,
              86,
              67,
              80,
              69,
              46,
              115,
              99,
              104,
              101,
              109,
              97,
              46,
              106,
              115,
              111,
              110,
              34,
              44,
              34,
              118,
              67,
              80,
              69,
              95,
              73,
              80,
              34,
              58,
              34,
              49,
              57,
              51,
              46,
              50,
              49,
              56,
              46,
              50,
              51,
              54,
              46,
              50,
              49,
              34,
              44,
              34,
              77,
              97,
              120,
              84,
              120,
              82,
              97,
              116,
              101,
              34,
              58,
              51,
              48,
              48,
              44,
              34,
              84,
              114,
              97,
              110,
              115,
              109,
              105,
              116,
              80,
              111,
              119,
              101,
              114,
              34,
              58,
              34,
              49,
              49,
              32,
              100,
              66,
              109,
              34,
              44,
              34,
              109,
              97,
              120,
              84,
              114,
              101,
              97,
              109,
              34,
              58,
              34,
              79,
              70,
              70,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              79,
              98,
              106,
              101,
              99,
              116,
              67,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              105,
              115,
              116,
              105,
              99,
              34,
              125,
              93,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              123,
              34,
              114,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              68,
              101,
              112,
              101,
              110,
              100,
              101,
              110,
              116,
              79,
              110,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              34,
              58,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              47,
              118,
              53,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              53,
              54,
              52,
              53,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              53,
              54,
              52,
              53,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              125,
              93,
              44,
              34,
              114,
              101,
              108,
              97,
              116,
              101,
              100,
              80,
              97,
              114,
              116,
              121,
              34,
              58,
              91,
              123,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              117,
              115,
              101,
              114,
              34,
              44,
              34,
              112,
              97,
              114,
              116,
              121,
              79,
              114,
              80,
              97,
              114,
              116,
              121,
              82,
              111,
              108,
              101,
              34,
              58,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              112,
              97,
              114,
              116,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              105,
              110,
              100,
              105,
              118,
              105,
              100,
              117,
              97,
              108,
              47,
              52,
              53,
              54,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              53,
              54,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              74,
              111,
              104,
              110,
              32,
              68,
              111,
              101,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              80,
              97,
              114,
              116,
              121,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              73,
              110,
              100,
              105,
              118,
              105,
              100,
              117,
              97,
              108,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              82,
              101,
              108,
              97,
              116,
              101,
              100,
              80,
              97,
              114,
              116,
              121,
              82,
              101,
              102,
              79,
              114,
              80,
              97,
              114,
              116,
              121,
              82,
              111,
              108,
              101,
              82,
              101,
              102,
              34,
              125,
              93,
              44,
              34,
              112,
              108,
              97,
              99,
              101,
              34,
              58,
              91,
              123,
              34,
              114,
              111,
              108,
              101,
              34,
              58,
              34,
              73,
              110,
              115,
              116,
              97,
              108,
              108,
              97,
              116,
              105,
              111,
              110,
              65,
              100,
              100,
              114,
              101,
              115,
              115,
              34,
              44,
              34,
              112,
              108,
              97,
              99,
              101,
              34,
              58,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              103,
              101,
              111,
              103,
              114,
              97,
              112,
              104,
              105,
              99,
              65,
              100,
              100,
              114,
              101,
              115,
              115,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              103,
              101,
              111,
              103,
              114,
              97,
              112,
              104,
              105,
              99,
              65,
              100,
              100,
              114,
              101,
              115,
              115,
              47,
              50,
              52,
              51,
              53,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              52,
              51,
              53,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              67,
              117,
              115,
              116,
              111,
              109,
              101,
              114,
              32,
              112,
              114,
              105,
              109,
              97,
              114,
              121,
              32,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              71,
              101,
              111,
              74,
              115,
              111,
              110,
              80,
              111,
              105,
              110,
              116,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              71,
              101,
              111,
              74,
              115,
              111,
              110,
              76,
              105,
              110,
              101,
              83,
              116,
              114,
              105,
              110,
              103,
              34,
              125,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              82,
              101,
              108,
              97,
              116,
              101,
              100,
              80,
              108,
              97,
              99,
              101,
              82,
              101,
              102,
              79,
              114,
              86,
              97,
              108,
              117,
              101,
              34,
              125,
              93,
              44,
              34,
              110,
              111,
              116,
              101,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              55,
              55,
              52,
              53,
              54,
              34,
              44,
              34,
              97,
              117,
              116,
              104,
              111,
              114,
              34,
              58,
              34,
              72,
              97,
              114,
              118,
              101,
              121,
              32,
              80,
              111,
              117,
              112,
              111,
              110,
              34,
              44,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              49,
              56,
              45,
              48,
              49,
              45,
              49,
              53,
              84,
              49,
              50,
              58,
              50,
              54,
              58,
              49,
              49,
              46,
              55,
              52,
              56,
              90,
              34,
              44,
              34,
              116,
              101,
              120,
              116,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              32,
              119,
              97,
              115,
              32,
              105,
              110,
              115,
              116,
              97,
              108,
              108,
              101,
              100,
              32,
              102,
              111,
              114,
              32,
              97,
              32,
              114,
              111,
              99,
              107,
              32,
              115,
              116,
              97,
              114,
              46,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              78,
              111,
              116,
              101,
              34,
              125,
              93,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              50,
              102,
              52,
              99,
              102,
              102,
              100,
              56,
              45,
              52,
              100,
              49,
              54,
              45,
              52,
              101,
              101,
              48,
              45,
              98,
              56,
              99,
              49,
              45,
              100,
              48,
              102,
              53,
              57,
              49,
              97,
              98,
              56,
              52,
              101,
              98,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              52,
              84,
              49,
              48,
              58,
              51,
              56,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              102,
              52,
              99,
              102,
              102,
              100,
              56,
              45,
              52,
              100,
              49,
              54,
              45,
              52,
              101,
              101,
              48,
              45,
              98,
              56,
              99,
              49,
              45,
              100,
              48,
              102,
              53,
              57,
              49,
              97,
              98,
              56,
              52,
              101,
              98,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              51,
              55,
              58,
              51,
              56,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              50,
              100,
              102,
              49,
              48,
              48,
              98,
              49,
              45,
              52,
              55,
              53,
              52,
              45,
              52,
              55,
              100,
              50,
              45,
              97,
              51,
              52,
              102,
              45,
              100,
              54,
              100,
              49,
              50,
              51,
              51,
              98,
              97,
              55,
              54,
              56,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              51,
              55,
              58,
              51,
              56,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              100,
              102,
              49,
              48,
              48,
              98,
              49,
              45,
              52,
              55,
              53,
              52,
              45,
              52,
              55,
              100,
              50,
              45,
              97,
              51,
              52,
              102,
              45,
              100,
              54,
              100,
              49,
              50,
              51,
              51,
              98,
              97,
              55,
              54,
              56,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              51,
              55,
              58,
              51,
              57,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              54,
              55,
              98,
              57,
              51,
              57,
              100,
              101,
              45,
              54,
              52,
              56,
              49,
              45,
              52,
              102,
              57,
              50,
              45,
              98,
              102,
              53,
              57,
              45,
              49,
              55,
              49,
              97,
              102,
              51,
              52,
              57,
              98,
              99,
              49,
              49,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              51,
              55,
              58,
              51,
              57,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              55,
              98,
              57,
              51,
              57,
              100,
              101,
              45,
              54,
              52,
              56,
              49,
              45,
              52,
              102,
              57,
              50,
              45,
              98,
              102,
              53,
              57,
              45,
              49,
              55,
              49,
              97,
              102,
              51,
              52,
              57,
              98,
              99,
              49,
              49,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              50,
              58,
              48,
              49,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              50,
              101,
              97,
              51,
              102,
              100,
              50,
              54,
              45,
              50,
              51,
              98,
              97,
              45,
              52,
              100,
              57,
              101,
              45,
              57,
              57,
              50,
              53,
              45,
              54,
              101,
              102,
              97,
              49,
              98,
              100,
              55,
              101,
              49,
              50,
              100,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              50,
              58,
              48,
              49,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              101,
              97,
              51,
              102,
              100,
              50,
              54,
              45,
              50,
              51,
              98,
              97,
              45,
              52,
              100,
              57,
              101,
              45,
              57,
              57,
              50,
              53,
              45,
              54,
              101,
              102,
              97,
              49,
              98,
              100,
              55,
              101,
              49,
              50,
              100,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              50,
              58,
              48,
              49,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              56,
              57,
              48,
              100,
              101,
              101,
              48,
              53,
              45,
              48,
              97,
              51,
              51,
              45,
              52,
              102,
              51,
              55,
              45,
              56,
              57,
              49,
              56,
              45,
              99,
              102,
              55,
              49,
              99,
              101,
              51,
              55,
              52,
              51,
              48,
              100,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              50,
              58,
              48,
              49,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              56,
              57,
              48,
              100,
              101,
              101,
              48,
              53,
              45,
              48,
              97,
              51,
              51,
              45,
              52,
              102,
              51,
              55,
              45,
              56,
              57,
              49,
              56,
              45,
              99,
              102,
              55,
              49,
              99,
              101,
              51,
              55,
              52,
              51,
              48,
              100,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 11,
          "responseSize": 8194
        },
        "id": "61281603-b8dc-459d-bf3c-3f77d55bb156",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "IDSE01 not expected on this test",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "supportingService is null",
            "skipped": false
          },
          {
            "assertion": "feature is null",
            "skipped": false
          },
          {
            "assertion": "serviceRelationship is ",
            "skipped": false
          },
          {
            "assertion": "state is active",
            "skipped": false
          },
          {
            "assertion": "relatedEntity is null",
            "skipped": false
          },
          {
            "assertion": "startMode is null",
            "skipped": false
          },
          {
            "assertion": "startDate is null",
            "skipped": false
          },
          {
            "assertion": "isBundle is null",
            "skipped": false
          },
          {
            "assertion": "serviceOrderItem is null",
            "skipped": false
          },
          {
            "assertion": "place is null",
            "skipped": false
          },
          {
            "assertion": "serviceCharacteristic is null",
            "skipped": false
          },
          {
            "assertion": "note is null",
            "skipped": false
          },
          {
            "assertion": "serviceType is null",
            "skipped": false
          },
          {
            "assertion": "supportingResource is null",
            "skipped": false
          },
          {
            "assertion": "hasStarted is null",
            "skipped": false
          },
          {
            "assertion": "serviceSpecification is [object Object]",
            "skipped": false
          },
          {
            "assertion": "name is null",
            "skipped": false
          },
          {
            "assertion": "description is null",
            "skipped": false
          },
          {
            "assertion": "serviceDate is 2025-04-25T11:45:15Z",
            "skipped": false
          },
          {
            "assertion": "endDate is null",
            "skipped": false
          },
          {
            "assertion": "href is http://localhost:8080/serviceInventoryManagement/v4.0.0/service/f23cf6fb-fed2-43d0-a348-45c996565016",
            "skipped": false
          },
          {
            "assertion": "id is f23cf6fb-fed2-43d0-a348-45c996565016",
            "skipped": false
          },
          {
            "assertion": "relatedParty is null",
            "skipped": false
          },
          {
            "assertion": "isServiceEnabled is null",
            "skipped": false
          },
          {
            "assertion": "isStateful is null",
            "skipped": false
          },
          {
            "assertion": "category is null",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4e9d5e1f-77ed-48ea-bb46-ff7ca36b423b",
          "length": 18,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "736c3575-c88a-4743-b1d6-5b32d239c5ef"
        },
        "item": {
          "id": "29abba78-e1eb-4acd-b0fc-357b4f5646fc",
          "name": "/Service?fields=serviceSpecification",
          "request": {
            "description": {
              "content": "This operation filter a Service",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Service_Inventory}}service"
              ],
              "query": [
                {
                  "key": "fields",
                  "value": "serviceSpecification"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer 1321321"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "86b4e82d-c1f8-484f-8d39-3c70b56e4634",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "fb213a72-0117-4849-8e6a-8ed628042233"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation filter a Service",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "serviceInventoryManagement",
              "v4.0.0",
              "service"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [
              {
                "key": "fields",
                "value": "serviceSpecification"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer 1321321"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3466c265-65ce-4e1a-9ab1-5fe1698261c5",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "fbe667ea-4b3b-4d5b-a801-919392e14cca",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Total-Count",
              "value": "9"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Apr 2025 11:45:15 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              67,
              97,
              116,
              97,
              108,
              111,
              103,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              46,
              48,
              46,
              48,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              49,
              99,
              48,
              99,
              49,
              55,
              50,
              45,
              57,
              102,
              55,
              49,
              45,
              52,
              50,
              101,
              48,
              45,
              56,
              50,
              57,
              101,
              45,
              50,
              102,
              102,
              50,
              101,
              57,
              55,
              100,
              55,
              98,
              98,
              101,
              34,
              125,
              44,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              67,
              97,
              116,
              97,
              108,
              111,
              103,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              46,
              48,
              46,
              48,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              97,
              51,
              99,
              52,
              97,
              98,
              52,
              52,
              45,
              98,
              50,
              53,
              54,
              45,
              52,
              99,
              55,
              50,
              45,
              57,
              100,
              100,
              57,
              45,
              54,
              102,
              49,
              102,
              54,
              52,
              98,
              53,
              50,
              99,
              51,
              48,
              34,
              125,
              44,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              109,
              121,
              99,
              115,
              112,
              46,
              99,
              111,
              109,
              58,
              56,
              48,
              56,
              48,
              47,
              116,
              109,
              102,
              45,
              97,
              112,
              105,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              67,
              97,
              116,
              97,
              108,
              111,
              103,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              53,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              118,
              67,
              80,
              69,
              34,
              44,
              34,
              118,
              101,
              114,
              115,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              46,
              48,
              46,
              48,
              34,
              44,
              34,
              64,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              82,
              101,
              102,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              102,
              52,
              99,
              102,
              102,
              100,
              56,
              45,
              52,
              100,
              49,
              54,
              45,
              52,
              101,
              101,
              48,
              45,
              98,
              56,
              99,
              49,
              45,
              100,
              48,
              102,
              53,
              57,
              49,
              97,
              98,
              56,
              52,
              101,
              98,
              34,
              125,
              44,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              100,
              102,
              49,
              48,
              48,
              98,
              49,
              45,
              52,
              55,
              53,
              52,
              45,
              52,
              55,
              100,
              50,
              45,
              97,
              51,
              52,
              102,
              45,
              100,
              54,
              100,
              49,
              50,
              51,
              51,
              98,
              97,
              55,
              54,
              56,
              34,
              125,
              44,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              55,
              98,
              57,
              51,
              57,
              100,
              101,
              45,
              54,
              52,
              56,
              49,
              45,
              52,
              102,
              57,
              50,
              45,
              98,
              102,
              53,
              57,
              45,
              49,
              55,
              49,
              97,
              102,
              51,
              52,
              57,
              98,
              99,
              49,
              49,
              34,
              125,
              44,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              101,
              97,
              51,
              102,
              100,
              50,
              54,
              45,
              50,
              51,
              98,
              97,
              45,
              52,
              100,
              57,
              101,
              45,
              57,
              57,
              50,
              53,
              45,
              54,
              101,
              102,
              97,
              49,
              98,
              100,
              55,
              101,
              49,
              50,
              100,
              34,
              125,
              44,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              56,
              57,
              48,
              100,
              101,
              101,
              48,
              53,
              45,
              48,
              97,
              51,
              51,
              45,
              52,
              102,
              51,
              55,
              45,
              56,
              57,
              49,
              56,
              45,
              99,
              102,
              55,
              49,
              99,
              101,
              51,
              55,
              52,
              51,
              48,
              100,
              34,
              125,
              44,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              125,
              44,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 10,
          "responseSize": 1579
        },
        "id": "29abba78-e1eb-4acd-b0fc-357b4f5646fc"
      },
      {
        "cursor": {
          "ref": "328ae94b-86eb-4c96-874f-3c9b3fe38780",
          "length": 18,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bd3e9242-cc32-4348-82c8-370b12f6790a"
        },
        "item": {
          "id": "b83631cb-9801-4cb2-ad06-2a0bb98444b0",
          "name": "/Service?fields=serviceDate",
          "request": {
            "description": {
              "content": "This operation filter a Service",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Service_Inventory}}service"
              ],
              "query": [
                {
                  "key": "fields",
                  "value": "serviceDate"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer 1321321"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "50e64586-e819-41e2-a5ee-eaded948ddf3",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "8d1aef3e-13eb-4f1f-9022-e2e3720b2e6e"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation filter a Service",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "serviceInventoryManagement",
              "v4.0.0",
              "service"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [
              {
                "key": "fields",
                "value": "serviceDate"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer 1321321"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "eba245bd-9716-4686-bfed-d5933e439220",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "51097357-d70e-4007-8794-5b4c38c79d5d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Total-Count",
              "value": "9"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Apr 2025 11:45:15 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              51,
              84,
              49,
              48,
              58,
              53,
              57,
              58,
              52,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              49,
              99,
              48,
              99,
              49,
              55,
              50,
              45,
              57,
              102,
              55,
              49,
              45,
              52,
              50,
              101,
              48,
              45,
              56,
              50,
              57,
              101,
              45,
              50,
              102,
              102,
              50,
              101,
              57,
              55,
              100,
              55,
              98,
              98,
              101,
              34,
              125,
              44,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              51,
              84,
              49,
              49,
              58,
              52,
              51,
              58,
              48,
              49,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              97,
              51,
              99,
              52,
              97,
              98,
              52,
              52,
              45,
              98,
              50,
              53,
              54,
              45,
              52,
              99,
              55,
              50,
              45,
              57,
              100,
              100,
              57,
              45,
              54,
              102,
              49,
              102,
              54,
              52,
              98,
              53,
              50,
              99,
              51,
              48,
              34,
              125,
              44,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              52,
              84,
              49,
              48,
              58,
              51,
              56,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              102,
              52,
              99,
              102,
              102,
              100,
              56,
              45,
              52,
              100,
              49,
              54,
              45,
              52,
              101,
              101,
              48,
              45,
              98,
              56,
              99,
              49,
              45,
              100,
              48,
              102,
              53,
              57,
              49,
              97,
              98,
              56,
              52,
              101,
              98,
              34,
              125,
              44,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              51,
              55,
              58,
              51,
              56,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              100,
              102,
              49,
              48,
              48,
              98,
              49,
              45,
              52,
              55,
              53,
              52,
              45,
              52,
              55,
              100,
              50,
              45,
              97,
              51,
              52,
              102,
              45,
              100,
              54,
              100,
              49,
              50,
              51,
              51,
              98,
              97,
              55,
              54,
              56,
              34,
              125,
              44,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              51,
              55,
              58,
              51,
              57,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              55,
              98,
              57,
              51,
              57,
              100,
              101,
              45,
              54,
              52,
              56,
              49,
              45,
              52,
              102,
              57,
              50,
              45,
              98,
              102,
              53,
              57,
              45,
              49,
              55,
              49,
              97,
              102,
              51,
              52,
              57,
              98,
              99,
              49,
              49,
              34,
              125,
              44,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              50,
              58,
              48,
              49,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              101,
              97,
              51,
              102,
              100,
              50,
              54,
              45,
              50,
              51,
              98,
              97,
              45,
              52,
              100,
              57,
              101,
              45,
              57,
              57,
              50,
              53,
              45,
              54,
              101,
              102,
              97,
              49,
              98,
              100,
              55,
              101,
              49,
              50,
              100,
              34,
              125,
              44,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              50,
              58,
              48,
              49,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              56,
              57,
              48,
              100,
              101,
              101,
              48,
              53,
              45,
              48,
              97,
              51,
              51,
              45,
              52,
              102,
              51,
              55,
              45,
              56,
              57,
              49,
              56,
              45,
              99,
              102,
              55,
              49,
              99,
              101,
              51,
              55,
              52,
              51,
              48,
              100,
              34,
              125,
              44,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              125,
              44,
              123,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 12,
          "responseSize": 748
        },
        "id": "b83631cb-9801-4cb2-ad06-2a0bb98444b0"
      },
      {
        "cursor": {
          "ref": "218fef67-6ac4-470b-b773-cd81dd4bfdff",
          "length": 18,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "548bbea3-e151-4666-927c-a58078edd3a9"
        },
        "item": {
          "id": "26f17800-6109-49f1-8fec-db49b3fff7c9",
          "name": "/Service?serviceDate={{SERVICEDATESE01}}",
          "request": {
            "description": {
              "content": "This operation filter a Service",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Service_Inventory}}service"
              ],
              "query": [
                {
                  "key": "serviceDate",
                  "value": "\"{{SERVICEDATESE01}}\""
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer 1321321"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0d288c9d-b208-470d-a4fa-a1ce0d14dd12",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "  ",
                  "  ",
                  "  ",
                  "var jsonData = pm.response.json();",
                  "  ",
                  "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                  "    jsonData.forEach(function (instance, index) {",
                  "      ",
                  "        var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on state', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['state']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceDate', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "        });",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                  "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE01\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE01');});",
                  "            pm.test('feature is ' + pm.globals.get(\"FEATURESE01\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE01');});",
                  "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE01\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE01');});",
                  "            pm.test('state is ' + pm.globals.get(\"STATESE01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE01');});",
                  "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE01');});",
                  "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE01\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE01');});",
                  "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE01\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE01');});",
                  "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE01\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE01');});",
                  "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE01\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE01');});",
                  "            pm.test('place is ' + pm.globals.get(\"PLACESE01\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE01');});",
                  "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE01\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE01');});",
                  "            pm.test('note is ' + pm.globals.get(\"NOTESE01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE01');});",
                  "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE01\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE01');});",
                  "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE01\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE01');});",
                  "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE01\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE01');});",
                  "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE01\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE01');});",
                  "            pm.test('name is ' + pm.globals.get(\"NAMESE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE01');});",
                  "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE01');});",
                  "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE01\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE01');});",
                  "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE01\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE01');});",
                  "            pm.test('href is ' + pm.globals.get(\"HREFSE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE01');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDSE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE01');});",
                  "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE01');});",
                  "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE01\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE01');});",
                  "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE01\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE01');});",
                  "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE01');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                  "            pm.test('IDSE02 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "          ",
                  "    });",
                  "  }",
                  "  else {",
                  "    var instance = pm.response.json();",
                  "    var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on state', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['state']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceDate', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "        });",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                  "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE01\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE01');});",
                  "            pm.test('feature is ' + pm.globals.get(\"FEATURESE01\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE01');});",
                  "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE01\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE01');});",
                  "            pm.test('state is ' + pm.globals.get(\"STATESE01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE01');});",
                  "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE01');});",
                  "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE01\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE01');});",
                  "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE01\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE01');});",
                  "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE01\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE01');});",
                  "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE01\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE01');});",
                  "            pm.test('place is ' + pm.globals.get(\"PLACESE01\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE01');});",
                  "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE01\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE01');});",
                  "            pm.test('note is ' + pm.globals.get(\"NOTESE01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE01');});",
                  "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE01\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE01');});",
                  "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE01\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE01');});",
                  "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE01\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE01');});",
                  "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE01\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE01');});",
                  "            pm.test('name is ' + pm.globals.get(\"NAMESE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE01');});",
                  "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE01');});",
                  "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE01\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE01');});",
                  "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE01\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE01');});",
                  "            pm.test('href is ' + pm.globals.get(\"HREFSE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE01');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDSE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE01');});",
                  "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE01');});",
                  "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE01\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE01');});",
                  "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE01\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE01');});",
                  "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE01');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                  "            pm.test('IDSE02 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "",
                  "        ",
                  "   ",
                  "}",
                  "  ",
                  "  "
                ],
                "_lastExecutionId": "d08242a9-6ef3-438a-b0a8-3af18228d33c"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation filter a Service",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "serviceInventoryManagement",
              "v4.0.0",
              "service"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [
              {
                "key": "serviceDate",
                "value": "\"2025-04-25T11:45:15Z\""
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer 1321321"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "342e8e27-f4d2-4bbc-9783-b6bdc1cf2610",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "0b036510-9177-414c-bbf1-0712f9a7603b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Total-Count",
              "value": "2"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Apr 2025 11:45:15 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 11,
          "responseSize": 755
        },
        "id": "26f17800-6109-49f1-8fec-db49b3fff7c9",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "supportingService is null",
            "skipped": false
          },
          {
            "assertion": "feature is null",
            "skipped": false
          },
          {
            "assertion": "serviceRelationship is ",
            "skipped": false
          },
          {
            "assertion": "state is active",
            "skipped": false
          },
          {
            "assertion": "relatedEntity is null",
            "skipped": false
          },
          {
            "assertion": "startMode is null",
            "skipped": false
          },
          {
            "assertion": "startDate is null",
            "skipped": false
          },
          {
            "assertion": "isBundle is null",
            "skipped": false
          },
          {
            "assertion": "serviceOrderItem is null",
            "skipped": false
          },
          {
            "assertion": "place is null",
            "skipped": false
          },
          {
            "assertion": "serviceCharacteristic is null",
            "skipped": false
          },
          {
            "assertion": "note is null",
            "skipped": false
          },
          {
            "assertion": "serviceType is null",
            "skipped": false
          },
          {
            "assertion": "supportingResource is null",
            "skipped": false
          },
          {
            "assertion": "hasStarted is null",
            "skipped": false
          },
          {
            "assertion": "serviceSpecification is [object Object]",
            "skipped": false
          },
          {
            "assertion": "name is null",
            "skipped": false
          },
          {
            "assertion": "description is null",
            "skipped": false
          },
          {
            "assertion": "serviceDate is 2025-04-25T11:45:15Z",
            "skipped": false
          },
          {
            "assertion": "endDate is null",
            "skipped": false
          },
          {
            "assertion": "href is http://localhost:8080/serviceInventoryManagement/v4.0.0/service/d6dfb61c-f06e-470e-84de-fb4c62da116f",
            "skipped": false
          },
          {
            "assertion": "id is d6dfb61c-f06e-470e-84de-fb4c62da116f",
            "skipped": false
          },
          {
            "assertion": "relatedParty is null",
            "skipped": false
          },
          {
            "assertion": "isServiceEnabled is null",
            "skipped": false
          },
          {
            "assertion": "isStateful is null",
            "skipped": false
          },
          {
            "assertion": "category is null",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "IDSE02 not expected on this test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "23b45efd-c203-4c2b-98f7-3199576b71ec",
          "length": 18,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a07dd354-f966-4203-aca7-5ace91df8065"
        },
        "item": {
          "id": "91cb1e73-4e7a-4390-91a4-534f801f3276",
          "name": "/Service?serviceDate={{SERVICEDATESE02}}",
          "request": {
            "description": {
              "content": "This operation filter a Service",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Service_Inventory}}service"
              ],
              "query": [
                {
                  "key": "serviceDate",
                  "value": "\"{{SERVICEDATESE02}}\""
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer 1321321"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "185341eb-5022-4fe5-8f49-7fe05ed68abb",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "  ",
                  "  ",
                  "  ",
                  "var jsonData = pm.response.json();",
                  "  ",
                  "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                  "    jsonData.forEach(function (instance, index) {",
                  "      ",
                  "        var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on state', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['state']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceDate', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "        });",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                  "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE02\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE02');});",
                  "            pm.test('feature is ' + pm.globals.get(\"FEATURESE02\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE02');});",
                  "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE02\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE02');});",
                  "            pm.test('state is ' + pm.globals.get(\"STATESE02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE02');});",
                  "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE02');});",
                  "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE02\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE02');});",
                  "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE02\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE02');});",
                  "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE02\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE02');});",
                  "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE02\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE02');});",
                  "            pm.test('place is ' + pm.globals.get(\"PLACESE02\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE02');});",
                  "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE02\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE02');});",
                  "            pm.test('note is ' + pm.globals.get(\"NOTESE02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE02');});",
                  "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE02\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE02');});",
                  "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE02\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE02');});",
                  "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE02\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE02');});",
                  "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE02\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE02');});",
                  "            pm.test('name is ' + pm.globals.get(\"NAMESE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE02');});",
                  "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE02');});",
                  "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE02\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE02');});",
                  "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE02\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE02');});",
                  "            pm.test('href is ' + pm.globals.get(\"HREFSE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE02');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDSE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE02');});",
                  "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE02');});",
                  "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE02\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE02');});",
                  "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE02\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE02');});",
                  "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE02');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                  "            pm.test('IDSE01 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "          ",
                  "    });",
                  "  }",
                  "  else {",
                  "    var instance = pm.response.json();",
                  "    var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on state', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['state']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceSpecification', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceSpecification']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceDate', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "        });",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                  "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE02\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE02');});",
                  "            pm.test('feature is ' + pm.globals.get(\"FEATURESE02\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE02');});",
                  "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE02\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE02');});",
                  "            pm.test('state is ' + pm.globals.get(\"STATESE02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE02');});",
                  "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE02');});",
                  "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE02\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE02');});",
                  "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE02\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE02');});",
                  "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE02\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE02');});",
                  "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE02\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE02');});",
                  "            pm.test('place is ' + pm.globals.get(\"PLACESE02\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE02');});",
                  "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE02\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE02');});",
                  "            pm.test('note is ' + pm.globals.get(\"NOTESE02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE02');});",
                  "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE02\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE02');});",
                  "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE02\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE02');});",
                  "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE02\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE02');});",
                  "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE02\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE02');});",
                  "            pm.test('name is ' + pm.globals.get(\"NAMESE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE02');});",
                  "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE02');});",
                  "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE02\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE02');});",
                  "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE02\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE02');});",
                  "            pm.test('href is ' + pm.globals.get(\"HREFSE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE02');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDSE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE02');});",
                  "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE02');});",
                  "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE02\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE02');});",
                  "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE02\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE02');});",
                  "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE02');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                  "            pm.test('IDSE01 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "",
                  "        ",
                  "   ",
                  "}",
                  "  ",
                  "  "
                ],
                "_lastExecutionId": "7c9a26be-a88d-4162-86ad-a295daf2acfd"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation filter a Service",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "serviceInventoryManagement",
              "v4.0.0",
              "service"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [
              {
                "key": "serviceDate",
                "value": "\"2025-04-25T11:45:15Z\""
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer 1321321"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3edc4400-7e1d-42c5-8653-2fec629aef45",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "722cca40-c6b4-4710-81b9-57058e65c0c9",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Total-Count",
              "value": "2"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Apr 2025 11:45:16 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              125,
              44,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 11,
          "responseSize": 755
        },
        "id": "91cb1e73-4e7a-4390-91a4-534f801f3276",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "IDSE01 not expected on this test",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "supportingService is null",
            "skipped": false
          },
          {
            "assertion": "feature is null",
            "skipped": false
          },
          {
            "assertion": "serviceRelationship is ",
            "skipped": false
          },
          {
            "assertion": "state is active",
            "skipped": false
          },
          {
            "assertion": "relatedEntity is null",
            "skipped": false
          },
          {
            "assertion": "startMode is null",
            "skipped": false
          },
          {
            "assertion": "startDate is null",
            "skipped": false
          },
          {
            "assertion": "isBundle is null",
            "skipped": false
          },
          {
            "assertion": "serviceOrderItem is null",
            "skipped": false
          },
          {
            "assertion": "place is null",
            "skipped": false
          },
          {
            "assertion": "serviceCharacteristic is null",
            "skipped": false
          },
          {
            "assertion": "note is null",
            "skipped": false
          },
          {
            "assertion": "serviceType is null",
            "skipped": false
          },
          {
            "assertion": "supportingResource is null",
            "skipped": false
          },
          {
            "assertion": "hasStarted is null",
            "skipped": false
          },
          {
            "assertion": "serviceSpecification is [object Object]",
            "skipped": false
          },
          {
            "assertion": "name is null",
            "skipped": false
          },
          {
            "assertion": "description is null",
            "skipped": false
          },
          {
            "assertion": "serviceDate is 2025-04-25T11:45:15Z",
            "skipped": false
          },
          {
            "assertion": "endDate is null",
            "skipped": false
          },
          {
            "assertion": "href is http://localhost:8080/serviceInventoryManagement/v4.0.0/service/f23cf6fb-fed2-43d0-a348-45c996565016",
            "skipped": false
          },
          {
            "assertion": "id is f23cf6fb-fed2-43d0-a348-45c996565016",
            "skipped": false
          },
          {
            "assertion": "relatedParty is null",
            "skipped": false
          },
          {
            "assertion": "isServiceEnabled is null",
            "skipped": false
          },
          {
            "assertion": "isStateful is null",
            "skipped": false
          },
          {
            "assertion": "category is null",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e9179486-39d7-428c-8aea-0722aa78039c",
          "length": 18,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c4c49039-f15a-4042-b085-7a4d43682ae2"
        },
        "item": {
          "id": "262ef61d-07f8-4fa0-9af2-7a3d3cd82be0",
          "name": "/Service?fields=href",
          "request": {
            "description": {
              "content": "This operation filter a Service",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Service_Inventory}}service"
              ],
              "query": [
                {
                  "key": "fields",
                  "value": "href"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer 1321321"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c3b892e3-031d-40cc-bb94-c0665cbb6ed6",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "274e694e-3897-47ba-a409-493e5cecfaec"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation filter a Service",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "serviceInventoryManagement",
              "v4.0.0",
              "service"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [
              {
                "key": "fields",
                "value": "href"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer 1321321"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fdad4578-2ba7-4551-8ae9-4be601e16d89",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "a4b78cf3-2f74-474c-8a08-4ef5938d9bc4",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Total-Count",
              "value": "9"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Apr 2025 11:45:16 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              49,
              49,
              99,
              48,
              99,
              49,
              55,
              50,
              45,
              57,
              102,
              55,
              49,
              45,
              52,
              50,
              101,
              48,
              45,
              56,
              50,
              57,
              101,
              45,
              50,
              102,
              102,
              50,
              101,
              57,
              55,
              100,
              55,
              98,
              98,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              49,
              99,
              48,
              99,
              49,
              55,
              50,
              45,
              57,
              102,
              55,
              49,
              45,
              52,
              50,
              101,
              48,
              45,
              56,
              50,
              57,
              101,
              45,
              50,
              102,
              102,
              50,
              101,
              57,
              55,
              100,
              55,
              98,
              98,
              101,
              34,
              125,
              44,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              97,
              51,
              99,
              52,
              97,
              98,
              52,
              52,
              45,
              98,
              50,
              53,
              54,
              45,
              52,
              99,
              55,
              50,
              45,
              57,
              100,
              100,
              57,
              45,
              54,
              102,
              49,
              102,
              54,
              52,
              98,
              53,
              50,
              99,
              51,
              48,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              97,
              51,
              99,
              52,
              97,
              98,
              52,
              52,
              45,
              98,
              50,
              53,
              54,
              45,
              52,
              99,
              55,
              50,
              45,
              57,
              100,
              100,
              57,
              45,
              54,
              102,
              49,
              102,
              54,
              52,
              98,
              53,
              50,
              99,
              51,
              48,
              34,
              125,
              44,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              50,
              102,
              52,
              99,
              102,
              102,
              100,
              56,
              45,
              52,
              100,
              49,
              54,
              45,
              52,
              101,
              101,
              48,
              45,
              98,
              56,
              99,
              49,
              45,
              100,
              48,
              102,
              53,
              57,
              49,
              97,
              98,
              56,
              52,
              101,
              98,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              102,
              52,
              99,
              102,
              102,
              100,
              56,
              45,
              52,
              100,
              49,
              54,
              45,
              52,
              101,
              101,
              48,
              45,
              98,
              56,
              99,
              49,
              45,
              100,
              48,
              102,
              53,
              57,
              49,
              97,
              98,
              56,
              52,
              101,
              98,
              34,
              125,
              44,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              50,
              100,
              102,
              49,
              48,
              48,
              98,
              49,
              45,
              52,
              55,
              53,
              52,
              45,
              52,
              55,
              100,
              50,
              45,
              97,
              51,
              52,
              102,
              45,
              100,
              54,
              100,
              49,
              50,
              51,
              51,
              98,
              97,
              55,
              54,
              56,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              100,
              102,
              49,
              48,
              48,
              98,
              49,
              45,
              52,
              55,
              53,
              52,
              45,
              52,
              55,
              100,
              50,
              45,
              97,
              51,
              52,
              102,
              45,
              100,
              54,
              100,
              49,
              50,
              51,
              51,
              98,
              97,
              55,
              54,
              56,
              34,
              125,
              44,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              54,
              55,
              98,
              57,
              51,
              57,
              100,
              101,
              45,
              54,
              52,
              56,
              49,
              45,
              52,
              102,
              57,
              50,
              45,
              98,
              102,
              53,
              57,
              45,
              49,
              55,
              49,
              97,
              102,
              51,
              52,
              57,
              98,
              99,
              49,
              49,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              55,
              98,
              57,
              51,
              57,
              100,
              101,
              45,
              54,
              52,
              56,
              49,
              45,
              52,
              102,
              57,
              50,
              45,
              98,
              102,
              53,
              57,
              45,
              49,
              55,
              49,
              97,
              102,
              51,
              52,
              57,
              98,
              99,
              49,
              49,
              34,
              125,
              44,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              50,
              101,
              97,
              51,
              102,
              100,
              50,
              54,
              45,
              50,
              51,
              98,
              97,
              45,
              52,
              100,
              57,
              101,
              45,
              57,
              57,
              50,
              53,
              45,
              54,
              101,
              102,
              97,
              49,
              98,
              100,
              55,
              101,
              49,
              50,
              100,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              101,
              97,
              51,
              102,
              100,
              50,
              54,
              45,
              50,
              51,
              98,
              97,
              45,
              52,
              100,
              57,
              101,
              45,
              57,
              57,
              50,
              53,
              45,
              54,
              101,
              102,
              97,
              49,
              98,
              100,
              55,
              101,
              49,
              50,
              100,
              34,
              125,
              44,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              56,
              57,
              48,
              100,
              101,
              101,
              48,
              53,
              45,
              48,
              97,
              51,
              51,
              45,
              52,
              102,
              51,
              55,
              45,
              56,
              57,
              49,
              56,
              45,
              99,
              102,
              55,
              49,
              99,
              101,
              51,
              55,
              52,
              51,
              48,
              100,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              56,
              57,
              48,
              100,
              101,
              101,
              48,
              53,
              45,
              48,
              97,
              51,
              51,
              45,
              52,
              102,
              51,
              55,
              45,
              56,
              57,
              49,
              56,
              45,
              99,
              102,
              55,
              49,
              99,
              101,
              51,
              55,
              52,
              51,
              48,
              100,
              34,
              125,
              44,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              125,
              44,
              123,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 10,
          "responseSize": 1405
        },
        "id": "262ef61d-07f8-4fa0-9af2-7a3d3cd82be0"
      },
      {
        "cursor": {
          "ref": "685d871e-0019-449e-a35a-c5c7ccbf0fc9",
          "length": 18,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e1450c98-627b-46bb-9b49-864d7b51f576"
        },
        "item": {
          "id": "0436bc90-838e-4a4b-a819-f10bec85ce87",
          "name": "/Service?href={{HREFSE01}}",
          "request": {
            "description": {
              "content": "This operation filter a Service",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Service_Inventory}}service"
              ],
              "query": [
                {
                  "key": "href",
                  "value": "{{HREFSE01}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer 1321321"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "03b7edd4-4211-4d09-8a83-7282d6d22552",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "  ",
                  "  ",
                  "  ",
                  "var jsonData = pm.response.json();",
                  "  ",
                  "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                  "    jsonData.forEach(function (instance, index) {",
                  "      ",
                  "        var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on state', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['state']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceDate', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "        });",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                  "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE01\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE01');});",
                  "            pm.test('feature is ' + pm.globals.get(\"FEATURESE01\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE01');});",
                  "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE01\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE01');});",
                  "            pm.test('state is ' + pm.globals.get(\"STATESE01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE01');});",
                  "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE01');});",
                  "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE01\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE01');});",
                  "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE01\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE01');});",
                  "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE01\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE01');});",
                  "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE01\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE01');});",
                  "            pm.test('place is ' + pm.globals.get(\"PLACESE01\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE01');});",
                  "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE01\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE01');});",
                  "            pm.test('note is ' + pm.globals.get(\"NOTESE01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE01');});",
                  "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE01\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE01');});",
                  "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE01\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE01');});",
                  "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE01\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE01');});",
                  "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE01\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE01');});",
                  "            pm.test('name is ' + pm.globals.get(\"NAMESE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE01');});",
                  "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE01');});",
                  "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE01\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE01');});",
                  "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE01\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE01');});",
                  "            pm.test('href is ' + pm.globals.get(\"HREFSE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE01');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDSE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE01');});",
                  "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE01');});",
                  "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE01\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE01');});",
                  "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE01\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE01');});",
                  "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE01');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                  "            pm.test('IDSE02 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "          ",
                  "    });",
                  "  }",
                  "  else {",
                  "    var instance = pm.response.json();",
                  "    var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on state', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['state']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceDate', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "        });",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                  "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE01\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE01');});",
                  "            pm.test('feature is ' + pm.globals.get(\"FEATURESE01\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE01');});",
                  "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE01\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE01');});",
                  "            pm.test('state is ' + pm.globals.get(\"STATESE01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE01');});",
                  "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE01');});",
                  "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE01\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE01');});",
                  "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE01\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE01');});",
                  "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE01\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE01');});",
                  "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE01\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE01');});",
                  "            pm.test('place is ' + pm.globals.get(\"PLACESE01\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE01');});",
                  "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE01\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE01');});",
                  "            pm.test('note is ' + pm.globals.get(\"NOTESE01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE01');});",
                  "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE01\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE01');});",
                  "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE01\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE01');});",
                  "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE01\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE01');});",
                  "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE01\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE01');});",
                  "            pm.test('name is ' + pm.globals.get(\"NAMESE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE01');});",
                  "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE01');});",
                  "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE01\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE01');});",
                  "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE01\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE01');});",
                  "            pm.test('href is ' + pm.globals.get(\"HREFSE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE01');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDSE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE01');});",
                  "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE01');});",
                  "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE01\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE01');});",
                  "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE01\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE01');});",
                  "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE01');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                  "            pm.test('IDSE02 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "",
                  "        ",
                  "   ",
                  "}",
                  "  ",
                  "  "
                ],
                "_lastExecutionId": "54aa1821-9d4f-4894-8a70-5202b928dfe3"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation filter a Service",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "serviceInventoryManagement",
              "v4.0.0",
              "service"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [
              {
                "key": "href",
                "value": "http://localhost:8080/serviceInventoryManagement/v4.0.0/service/d6dfb61c-f06e-470e-84de-fb4c62da116f"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer 1321321"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fd95b64d-e446-4375-a3ba-cba96741e83e",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "631aa0f6-6a7e-4e1c-8e6d-bf160e7fa302",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Total-Count",
              "value": "1"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Apr 2025 11:45:16 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 10,
          "responseSize": 378
        },
        "id": "0436bc90-838e-4a4b-a819-f10bec85ce87",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "supportingService is null",
            "skipped": false
          },
          {
            "assertion": "feature is null",
            "skipped": false
          },
          {
            "assertion": "serviceRelationship is ",
            "skipped": false
          },
          {
            "assertion": "state is active",
            "skipped": false
          },
          {
            "assertion": "relatedEntity is null",
            "skipped": false
          },
          {
            "assertion": "startMode is null",
            "skipped": false
          },
          {
            "assertion": "startDate is null",
            "skipped": false
          },
          {
            "assertion": "isBundle is null",
            "skipped": false
          },
          {
            "assertion": "serviceOrderItem is null",
            "skipped": false
          },
          {
            "assertion": "place is null",
            "skipped": false
          },
          {
            "assertion": "serviceCharacteristic is null",
            "skipped": false
          },
          {
            "assertion": "note is null",
            "skipped": false
          },
          {
            "assertion": "serviceType is null",
            "skipped": false
          },
          {
            "assertion": "supportingResource is null",
            "skipped": false
          },
          {
            "assertion": "hasStarted is null",
            "skipped": false
          },
          {
            "assertion": "serviceSpecification is [object Object]",
            "skipped": false
          },
          {
            "assertion": "name is null",
            "skipped": false
          },
          {
            "assertion": "description is null",
            "skipped": false
          },
          {
            "assertion": "serviceDate is 2025-04-25T11:45:15Z",
            "skipped": false
          },
          {
            "assertion": "endDate is null",
            "skipped": false
          },
          {
            "assertion": "href is http://localhost:8080/serviceInventoryManagement/v4.0.0/service/d6dfb61c-f06e-470e-84de-fb4c62da116f",
            "skipped": false
          },
          {
            "assertion": "id is d6dfb61c-f06e-470e-84de-fb4c62da116f",
            "skipped": false
          },
          {
            "assertion": "relatedParty is null",
            "skipped": false
          },
          {
            "assertion": "isServiceEnabled is null",
            "skipped": false
          },
          {
            "assertion": "isStateful is null",
            "skipped": false
          },
          {
            "assertion": "category is null",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4b76c531-8793-45f4-92e7-87636cd6f846",
          "length": 18,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "396732ab-bc38-4664-ab3e-17063906b409"
        },
        "item": {
          "id": "152bc855-e2e3-421e-a9bd-0adfd26aa436",
          "name": "/Service?href={{HREFSE02}}",
          "request": {
            "description": {
              "content": "This operation filter a Service",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Service_Inventory}}service"
              ],
              "query": [
                {
                  "key": "href",
                  "value": "{{HREFSE02}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer 1321321"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cc7ade6e-cafa-4baa-8b09-602f1ae92979",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "  ",
                  "  ",
                  "  ",
                  "var jsonData = pm.response.json();",
                  "  ",
                  "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                  "    jsonData.forEach(function (instance, index) {",
                  "      ",
                  "        var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on state', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['state']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceDate', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "        });",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                  "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE02\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE02');});",
                  "            pm.test('feature is ' + pm.globals.get(\"FEATURESE02\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE02');});",
                  "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE02\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE02');});",
                  "            pm.test('state is ' + pm.globals.get(\"STATESE02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE02');});",
                  "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE02');});",
                  "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE02\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE02');});",
                  "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE02\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE02');});",
                  "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE02\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE02');});",
                  "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE02\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE02');});",
                  "            pm.test('place is ' + pm.globals.get(\"PLACESE02\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE02');});",
                  "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE02\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE02');});",
                  "            pm.test('note is ' + pm.globals.get(\"NOTESE02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE02');});",
                  "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE02\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE02');});",
                  "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE02\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE02');});",
                  "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE02\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE02');});",
                  "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE02\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE02');});",
                  "            pm.test('name is ' + pm.globals.get(\"NAMESE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE02');});",
                  "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE02');});",
                  "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE02\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE02');});",
                  "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE02\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE02');});",
                  "            pm.test('href is ' + pm.globals.get(\"HREFSE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE02');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDSE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE02');});",
                  "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE02');});",
                  "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE02\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE02');});",
                  "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE02\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE02');});",
                  "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE02');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                  "            pm.test('IDSE01 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "          ",
                  "    });",
                  "  }",
                  "  else {",
                  "    var instance = pm.response.json();",
                  "    var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on state', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['state']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceDate', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "        });",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                  "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE02\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE02');});",
                  "            pm.test('feature is ' + pm.globals.get(\"FEATURESE02\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE02');});",
                  "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE02\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE02');});",
                  "            pm.test('state is ' + pm.globals.get(\"STATESE02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE02');});",
                  "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE02');});",
                  "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE02\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE02');});",
                  "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE02\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE02');});",
                  "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE02\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE02');});",
                  "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE02\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE02');});",
                  "            pm.test('place is ' + pm.globals.get(\"PLACESE02\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE02');});",
                  "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE02\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE02');});",
                  "            pm.test('note is ' + pm.globals.get(\"NOTESE02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE02');});",
                  "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE02\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE02');});",
                  "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE02\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE02');});",
                  "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE02\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE02');});",
                  "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE02\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE02');});",
                  "            pm.test('name is ' + pm.globals.get(\"NAMESE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE02');});",
                  "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE02');});",
                  "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE02\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE02');});",
                  "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE02\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE02');});",
                  "            pm.test('href is ' + pm.globals.get(\"HREFSE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE02');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDSE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE02');});",
                  "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE02');});",
                  "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE02\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE02');});",
                  "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE02\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE02');});",
                  "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE02');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                  "            pm.test('IDSE01 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "",
                  "        ",
                  "   ",
                  "}",
                  "  ",
                  "  "
                ],
                "_lastExecutionId": "d28d19e6-f14f-4216-b637-649aba33322b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation filter a Service",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "serviceInventoryManagement",
              "v4.0.0",
              "service"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [
              {
                "key": "href",
                "value": "http://localhost:8080/serviceInventoryManagement/v4.0.0/service/f23cf6fb-fed2-43d0-a348-45c996565016"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer 1321321"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6af2c672-b70d-440e-8115-9ce3c3d2b050",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "bd6c6fdc-6746-489e-8968-2f5517b7bcc0",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Total-Count",
              "value": "1"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Apr 2025 11:45:16 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 10,
          "responseSize": 378
        },
        "id": "152bc855-e2e3-421e-a9bd-0adfd26aa436",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "supportingService is null",
            "skipped": false
          },
          {
            "assertion": "feature is null",
            "skipped": false
          },
          {
            "assertion": "serviceRelationship is ",
            "skipped": false
          },
          {
            "assertion": "state is active",
            "skipped": false
          },
          {
            "assertion": "relatedEntity is null",
            "skipped": false
          },
          {
            "assertion": "startMode is null",
            "skipped": false
          },
          {
            "assertion": "startDate is null",
            "skipped": false
          },
          {
            "assertion": "isBundle is null",
            "skipped": false
          },
          {
            "assertion": "serviceOrderItem is null",
            "skipped": false
          },
          {
            "assertion": "place is null",
            "skipped": false
          },
          {
            "assertion": "serviceCharacteristic is null",
            "skipped": false
          },
          {
            "assertion": "note is null",
            "skipped": false
          },
          {
            "assertion": "serviceType is null",
            "skipped": false
          },
          {
            "assertion": "supportingResource is null",
            "skipped": false
          },
          {
            "assertion": "hasStarted is null",
            "skipped": false
          },
          {
            "assertion": "serviceSpecification is [object Object]",
            "skipped": false
          },
          {
            "assertion": "name is null",
            "skipped": false
          },
          {
            "assertion": "description is null",
            "skipped": false
          },
          {
            "assertion": "serviceDate is 2025-04-25T11:45:15Z",
            "skipped": false
          },
          {
            "assertion": "endDate is null",
            "skipped": false
          },
          {
            "assertion": "href is http://localhost:8080/serviceInventoryManagement/v4.0.0/service/f23cf6fb-fed2-43d0-a348-45c996565016",
            "skipped": false
          },
          {
            "assertion": "id is f23cf6fb-fed2-43d0-a348-45c996565016",
            "skipped": false
          },
          {
            "assertion": "relatedParty is null",
            "skipped": false
          },
          {
            "assertion": "isServiceEnabled is null",
            "skipped": false
          },
          {
            "assertion": "isStateful is null",
            "skipped": false
          },
          {
            "assertion": "category is null",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b11e9ced-2850-4301-8818-87d6dd554904",
          "length": 18,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "094ab787-f878-4c30-9e71-0a633f859730"
        },
        "item": {
          "id": "c38a485a-9ea2-4d38-9d31-bff8bac76312",
          "name": "/Service?fields=id",
          "request": {
            "description": {
              "content": "This operation filter a Service",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Service_Inventory}}service"
              ],
              "query": [
                {
                  "key": "fields",
                  "value": "id"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer 1321321"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ca64bbfe-040b-47f9-8850-86146b297bb5",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "b30eb13e-867c-4a15-b798-9c97a73328ac"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation filter a Service",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "serviceInventoryManagement",
              "v4.0.0",
              "service"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [
              {
                "key": "fields",
                "value": "id"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer 1321321"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "527aea4a-e71c-4f9b-94e7-97ca6ae95ccd",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "7a3b96a2-f0e5-42d3-a179-d3fb94b44766",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Total-Count",
              "value": "9"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Apr 2025 11:45:16 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              49,
              99,
              48,
              99,
              49,
              55,
              50,
              45,
              57,
              102,
              55,
              49,
              45,
              52,
              50,
              101,
              48,
              45,
              56,
              50,
              57,
              101,
              45,
              50,
              102,
              102,
              50,
              101,
              57,
              55,
              100,
              55,
              98,
              98,
              101,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              97,
              51,
              99,
              52,
              97,
              98,
              52,
              52,
              45,
              98,
              50,
              53,
              54,
              45,
              52,
              99,
              55,
              50,
              45,
              57,
              100,
              100,
              57,
              45,
              54,
              102,
              49,
              102,
              54,
              52,
              98,
              53,
              50,
              99,
              51,
              48,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              102,
              52,
              99,
              102,
              102,
              100,
              56,
              45,
              52,
              100,
              49,
              54,
              45,
              52,
              101,
              101,
              48,
              45,
              98,
              56,
              99,
              49,
              45,
              100,
              48,
              102,
              53,
              57,
              49,
              97,
              98,
              56,
              52,
              101,
              98,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              100,
              102,
              49,
              48,
              48,
              98,
              49,
              45,
              52,
              55,
              53,
              52,
              45,
              52,
              55,
              100,
              50,
              45,
              97,
              51,
              52,
              102,
              45,
              100,
              54,
              100,
              49,
              50,
              51,
              51,
              98,
              97,
              55,
              54,
              56,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              55,
              98,
              57,
              51,
              57,
              100,
              101,
              45,
              54,
              52,
              56,
              49,
              45,
              52,
              102,
              57,
              50,
              45,
              98,
              102,
              53,
              57,
              45,
              49,
              55,
              49,
              97,
              102,
              51,
              52,
              57,
              98,
              99,
              49,
              49,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              50,
              101,
              97,
              51,
              102,
              100,
              50,
              54,
              45,
              50,
              51,
              98,
              97,
              45,
              52,
              100,
              57,
              101,
              45,
              57,
              57,
              50,
              53,
              45,
              54,
              101,
              102,
              97,
              49,
              98,
              100,
              55,
              101,
              49,
              50,
              100,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              56,
              57,
              48,
              100,
              101,
              101,
              48,
              53,
              45,
              48,
              97,
              51,
              51,
              45,
              52,
              102,
              51,
              55,
              45,
              56,
              57,
              49,
              56,
              45,
              99,
              102,
              55,
              49,
              99,
              101,
              51,
              55,
              52,
              51,
              48,
              100,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 13,
          "responseSize": 415
        },
        "id": "c38a485a-9ea2-4d38-9d31-bff8bac76312"
      },
      {
        "cursor": {
          "ref": "7f270064-1b35-46ef-8919-a6b0481b47e8",
          "length": 18,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "51245c40-eeeb-4302-b34c-29029a885dda"
        },
        "item": {
          "id": "f3df7021-0720-49cf-b62e-38005de28c66",
          "name": "/Service?id={{IDSE01}}",
          "request": {
            "description": {
              "content": "This operation filter a Service",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Service_Inventory}}service"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{IDSE01}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer 1321321"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "59839aa1-11e6-4988-8396-0164eba0086a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "  ",
                  "  ",
                  "  ",
                  "var jsonData = pm.response.json();",
                  "  ",
                  "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                  "    jsonData.forEach(function (instance, index) {",
                  "      ",
                  "        var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on state', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['state']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceDate', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "        });",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                  "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE01\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE01');});",
                  "            pm.test('feature is ' + pm.globals.get(\"FEATURESE01\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE01');});",
                  "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE01\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE01');});",
                  "            pm.test('state is ' + pm.globals.get(\"STATESE01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE01');});",
                  "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE01');});",
                  "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE01\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE01');});",
                  "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE01\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE01');});",
                  "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE01\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE01');});",
                  "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE01\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE01');});",
                  "            pm.test('place is ' + pm.globals.get(\"PLACESE01\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE01');});",
                  "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE01\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE01');});",
                  "            pm.test('note is ' + pm.globals.get(\"NOTESE01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE01');});",
                  "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE01\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE01');});",
                  "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE01\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE01');});",
                  "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE01\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE01');});",
                  "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE01\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE01');});",
                  "            pm.test('name is ' + pm.globals.get(\"NAMESE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE01');});",
                  "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE01');});",
                  "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE01\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE01');});",
                  "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE01\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE01');});",
                  "            pm.test('href is ' + pm.globals.get(\"HREFSE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE01');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDSE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE01');});",
                  "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE01');});",
                  "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE01\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE01');});",
                  "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE01\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE01');});",
                  "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE01');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                  "            pm.test('IDSE02 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "          ",
                  "    });",
                  "  }",
                  "  else {",
                  "    var instance = pm.response.json();",
                  "    var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on state', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['state']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceSpecification', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceSpecification']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceDate', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "        });",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                  "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE01\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE01');});",
                  "            pm.test('feature is ' + pm.globals.get(\"FEATURESE01\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE01');});",
                  "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE01\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE01');});",
                  "            pm.test('state is ' + pm.globals.get(\"STATESE01\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE01');});",
                  "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE01\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE01');});",
                  "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE01\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE01');});",
                  "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE01\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE01');});",
                  "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE01\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE01');});",
                  "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE01\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE01');});",
                  "            pm.test('place is ' + pm.globals.get(\"PLACESE01\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE01');});",
                  "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE01\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE01');});",
                  "            pm.test('note is ' + pm.globals.get(\"NOTESE01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE01');});",
                  "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE01\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE01');});",
                  "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE01\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE01');});",
                  "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE01\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE01');});",
                  "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE01\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE01');});",
                  "            pm.test('name is ' + pm.globals.get(\"NAMESE01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE01');});",
                  "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE01');});",
                  "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE01\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE01');});",
                  "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE01\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE01');});",
                  "            pm.test('href is ' + pm.globals.get(\"HREFSE01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE01');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDSE01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE01');});",
                  "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE01');});",
                  "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE01\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE01');});",
                  "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE01\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE01');});",
                  "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE01');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                  "            pm.test('IDSE02 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "",
                  "        ",
                  "   ",
                  "}",
                  "  ",
                  "  "
                ],
                "_lastExecutionId": "83b1d294-08af-4498-915c-adfe18ee2df0"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation filter a Service",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "serviceInventoryManagement",
              "v4.0.0",
              "service"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [
              {
                "key": "id",
                "value": "d6dfb61c-f06e-470e-84de-fb4c62da116f"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer 1321321"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "aa97ea66-57fb-4423-a425-e97ef3a072eb",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "c661e1f0-5a75-45f3-83cc-44b8b32113f1",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Total-Count",
              "value": "1"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Apr 2025 11:45:16 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              54,
              100,
              102,
              98,
              54,
              49,
              99,
              45,
              102,
              48,
              54,
              101,
              45,
              52,
              55,
              48,
              101,
              45,
              56,
              52,
              100,
              101,
              45,
              102,
              98,
              52,
              99,
              54,
              50,
              100,
              97,
              49,
              49,
              54,
              102,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 10,
          "responseSize": 378
        },
        "id": "f3df7021-0720-49cf-b62e-38005de28c66",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "supportingService is null",
            "skipped": false
          },
          {
            "assertion": "feature is null",
            "skipped": false
          },
          {
            "assertion": "serviceRelationship is ",
            "skipped": false
          },
          {
            "assertion": "state is active",
            "skipped": false
          },
          {
            "assertion": "relatedEntity is null",
            "skipped": false
          },
          {
            "assertion": "startMode is null",
            "skipped": false
          },
          {
            "assertion": "startDate is null",
            "skipped": false
          },
          {
            "assertion": "isBundle is null",
            "skipped": false
          },
          {
            "assertion": "serviceOrderItem is null",
            "skipped": false
          },
          {
            "assertion": "place is null",
            "skipped": false
          },
          {
            "assertion": "serviceCharacteristic is null",
            "skipped": false
          },
          {
            "assertion": "note is null",
            "skipped": false
          },
          {
            "assertion": "serviceType is null",
            "skipped": false
          },
          {
            "assertion": "supportingResource is null",
            "skipped": false
          },
          {
            "assertion": "hasStarted is null",
            "skipped": false
          },
          {
            "assertion": "serviceSpecification is [object Object]",
            "skipped": false
          },
          {
            "assertion": "name is null",
            "skipped": false
          },
          {
            "assertion": "description is null",
            "skipped": false
          },
          {
            "assertion": "serviceDate is 2025-04-25T11:45:15Z",
            "skipped": false
          },
          {
            "assertion": "endDate is null",
            "skipped": false
          },
          {
            "assertion": "href is http://localhost:8080/serviceInventoryManagement/v4.0.0/service/d6dfb61c-f06e-470e-84de-fb4c62da116f",
            "skipped": false
          },
          {
            "assertion": "id is d6dfb61c-f06e-470e-84de-fb4c62da116f",
            "skipped": false
          },
          {
            "assertion": "relatedParty is null",
            "skipped": false
          },
          {
            "assertion": "isServiceEnabled is null",
            "skipped": false
          },
          {
            "assertion": "isStateful is null",
            "skipped": false
          },
          {
            "assertion": "category is null",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "4af6e0c1-08af-4172-bba7-0d6b3a304911",
          "length": 18,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3c42f45a-e94f-4e17-b2d6-612b97918067"
        },
        "item": {
          "id": "8a797d0f-63bf-4b26-bcda-ed5f64fc331c",
          "name": "/Service?id={{IDSE02}}",
          "request": {
            "description": {
              "content": "This operation filter a Service",
              "type": "text/plain"
            },
            "url": {
              "host": [
                "{{Service_Inventory}}service"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{IDSE02}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer 1321321"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f254df85-77f9-4771-837d-5aa1f7835bf0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "  ",
                  "  ",
                  "  ",
                  "var jsonData = pm.response.json();",
                  "  ",
                  "if (Array.isArray(jsonData) && (jsonData.length > 0)) {",
                  "    jsonData.forEach(function (instance, index) {",
                  "      ",
                  "        var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on state', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['state']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceDate', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "        });",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                  "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE02\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE02');});",
                  "            pm.test('feature is ' + pm.globals.get(\"FEATURESE02\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE02');});",
                  "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE02\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE02');});",
                  "            pm.test('state is ' + pm.globals.get(\"STATESE02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE02');});",
                  "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE02');});",
                  "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE02\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE02');});",
                  "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE02\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE02');});",
                  "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE02\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE02');});",
                  "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE02\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE02');});",
                  "            pm.test('place is ' + pm.globals.get(\"PLACESE02\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE02');});",
                  "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE02\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE02');});",
                  "            pm.test('note is ' + pm.globals.get(\"NOTESE02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE02');});",
                  "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE02\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE02');});",
                  "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE02\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE02');});",
                  "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE02\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE02');});",
                  "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE02\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE02');});",
                  "            pm.test('name is ' + pm.globals.get(\"NAMESE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE02');});",
                  "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE02');});",
                  "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE02\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE02');});",
                  "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE02\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE02');});",
                  "            pm.test('href is ' + pm.globals.get(\"HREFSE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE02');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDSE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE02');});",
                  "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE02');});",
                  "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE02\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE02');});",
                  "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE02\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE02');});",
                  "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE02');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                  "            pm.test('IDSE01 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "          ",
                  "    });",
                  "  }",
                  "  else {",
                  "    var instance = pm.response.json();",
                  "    var requiredAttributes = ['state', 'serviceSpecification', 'serviceDate', 'href', 'id'];",
                  "      ",
                  "        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });",
                  "      ",
                  "      ",
                  "      ",
                  "        pm.test('Response has serviceDate attribute', function() { pm.expect(instance[\"serviceDate\"]).to.be.a('string'); });",
                  "        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });",
                  "        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });",
                  "      ",
                  "        pm.test('Body includes value held on state', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['state']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceSpecification', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceSpecification']);",
                  "        });",
                  "        pm.test('Body includes value held on serviceDate', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['serviceDate']);",
                  "        });",
                  "        pm.test('Body includes value held on href', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['href']);",
                  "        });",
                  "        pm.test('Body includes value held on id', function () {",
                  "            pm.expect(pm.response.text()).to.include(instance['id']);",
                  "        });",
                  "        // Individualized tests",
                  "        if (instance.id == pm.globals.get(\"IDSE02\")) {",
                  "            pm.test('supportingService is ' + pm.globals.get(\"SUPPORTINGSERVICESE02\"), function() {pm.expect(instance['supportingService']) == pm.globals.get('SUPPORTINGSERVICESE02');});",
                  "            pm.test('feature is ' + pm.globals.get(\"FEATURESE02\"), function() {pm.expect(instance['feature']) == pm.globals.get('FEATURESE02');});",
                  "            pm.test('serviceRelationship is ' + pm.globals.get(\"SERVICERELATIONSHIPSE02\"), function() {pm.expect(instance['serviceRelationship']) == pm.globals.get('SERVICERELATIONSHIPSE02');});",
                  "            pm.test('state is ' + pm.globals.get(\"STATESE02\"), function() {pm.expect(instance['state']) == pm.globals.get('STATESE02');});",
                  "            pm.test('relatedEntity is ' + pm.globals.get(\"RELATEDENTITYSE02\"), function() {pm.expect(instance['relatedEntity']) == pm.globals.get('RELATEDENTITYSE02');});",
                  "            pm.test('startMode is ' + pm.globals.get(\"STARTMODESE02\"), function() {pm.expect(instance['startMode']) == pm.globals.get('STARTMODESE02');});",
                  "            pm.test('startDate is ' + pm.globals.get(\"STARTDATESE02\"), function() {pm.expect(instance['startDate']) == pm.globals.get('STARTDATESE02');});",
                  "            pm.test('isBundle is ' + pm.globals.get(\"ISBUNDLESE02\"), function() {pm.expect(instance['isBundle']) == pm.globals.get('ISBUNDLESE02');});",
                  "            pm.test('serviceOrderItem is ' + pm.globals.get(\"SERVICEORDERITEMSE02\"), function() {pm.expect(instance['serviceOrderItem']) == pm.globals.get('SERVICEORDERITEMSE02');});",
                  "            pm.test('place is ' + pm.globals.get(\"PLACESE02\"), function() {pm.expect(instance['place']) == pm.globals.get('PLACESE02');});",
                  "            pm.test('serviceCharacteristic is ' + pm.globals.get(\"SERVICECHARACTERISTICSE02\"), function() {pm.expect(instance['serviceCharacteristic']) == pm.globals.get('SERVICECHARACTERISTICSE02');});",
                  "            pm.test('note is ' + pm.globals.get(\"NOTESE02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESE02');});",
                  "            pm.test('serviceType is ' + pm.globals.get(\"SERVICETYPESE02\"), function() {pm.expect(instance['serviceType']) == pm.globals.get('SERVICETYPESE02');});",
                  "            pm.test('supportingResource is ' + pm.globals.get(\"SUPPORTINGRESOURCESE02\"), function() {pm.expect(instance['supportingResource']) == pm.globals.get('SUPPORTINGRESOURCESE02');});",
                  "            pm.test('hasStarted is ' + pm.globals.get(\"HASSTARTEDSE02\"), function() {pm.expect(instance['hasStarted']) == pm.globals.get('HASSTARTEDSE02');});",
                  "            pm.test('serviceSpecification is ' + pm.globals.get(\"SERVICESPECIFICATIONSE02\"), function() {pm.expect(instance['serviceSpecification']) == pm.globals.get('SERVICESPECIFICATIONSE02');});",
                  "            pm.test('name is ' + pm.globals.get(\"NAMESE02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESE02');});",
                  "            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSE02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSE02');});",
                  "            pm.test('serviceDate is ' + pm.globals.get(\"SERVICEDATESE02\"), function() {pm.expect(instance['serviceDate']) == pm.globals.get('SERVICEDATESE02');});",
                  "            pm.test('endDate is ' + pm.globals.get(\"ENDDATESE02\"), function() {pm.expect(instance['endDate']) == pm.globals.get('ENDDATESE02');});",
                  "            pm.test('href is ' + pm.globals.get(\"HREFSE02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSE02');});",
                  "            pm.test('id is ' + pm.globals.get(\"IDSE02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSE02');});",
                  "            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSE02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSE02');});",
                  "            pm.test('isServiceEnabled is ' + pm.globals.get(\"ISSERVICEENABLEDSE02\"), function() {pm.expect(instance['isServiceEnabled']) == pm.globals.get('ISSERVICEENABLEDSE02');});",
                  "            pm.test('isStateful is ' + pm.globals.get(\"ISSTATEFULSE02\"), function() {pm.expect(instance['isStateful']) == pm.globals.get('ISSTATEFULSE02');});",
                  "            pm.test('category is ' + pm.globals.get(\"CATEGORYSE02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSE02');});",
                  "        }",
                  "        if (instance.id == pm.globals.get(\"IDSE01\")) {",
                  "            pm.test('IDSE01 not expected on this test', function () {",
                  "                console.log(\"Non expected resource, may happen if there is a collision on attributes\")",
                  "            });",
                  "        }",
                  "",
                  "        ",
                  "   ",
                  "}",
                  "  ",
                  "  "
                ],
                "_lastExecutionId": "8e487af0-19e2-494a-8e4c-06f8730ca61a"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation filter a Service",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "serviceInventoryManagement",
              "v4.0.0",
              "service"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [
              {
                "key": "id",
                "value": "f23cf6fb-fed2-43d0-a348-45c996565016"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer 1321321"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "18f953a4-f897-4b2c-9622-b43d61c71b19",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "2da86a3b-da81-444f-a33a-d59d65e45245",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Total-Count",
              "value": "1"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Apr 2025 11:45:16 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              115,
              116,
              97,
              116,
              101,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              50,
              49,
              50,
              34,
              44,
              34,
              64,
              114,
              101,
              102,
              101,
              114,
              114,
              101,
              100,
              84,
              121,
              112,
              101,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              83,
              112,
              101,
              99,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              34,
              125,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              115,
              111,
              117,
              114,
              99,
              101,
              82,
              101,
              108,
              97,
              116,
              105,
              111,
              110,
              115,
              104,
              105,
              112,
              34,
              58,
              91,
              93,
              44,
              34,
              108,
              97,
              115,
              116,
              85,
              112,
              100,
              97,
              116,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              104,
              114,
              101,
              102,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              108,
              111,
              99,
              97,
              108,
              104,
              111,
              115,
              116,
              58,
              56,
              48,
              56,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              73,
              110,
              118,
              101,
              110,
              116,
              111,
              114,
              121,
              77,
              97,
              110,
              97,
              103,
              101,
              109,
              101,
              110,
              116,
              47,
              118,
              52,
              46,
              48,
              46,
              48,
              47,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              44,
              34,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              68,
              97,
              116,
              101,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              52,
              45,
              50,
              53,
              84,
              49,
              49,
              58,
              52,
              53,
              58,
              49,
              53,
              90,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              34,
              102,
              50,
              51,
              99,
              102,
              54,
              102,
              98,
              45,
              102,
              101,
              100,
              50,
              45,
              52,
              51,
              100,
              48,
              45,
              97,
              51,
              52,
              56,
              45,
              52,
              53,
              99,
              57,
              57,
              54,
              53,
              54,
              53,
              48,
              49,
              54,
              34,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 13,
          "responseSize": 378
        },
        "id": "8a797d0f-63bf-4b26-bcda-ed5f64fc331c",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Instance has all mandatory attributes",
            "skipped": false
          },
          {
            "assertion": "Response has serviceDate attribute",
            "skipped": false
          },
          {
            "assertion": "Response has href attribute",
            "skipped": false
          },
          {
            "assertion": "Response has id attribute",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on state",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on serviceDate",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on href",
            "skipped": false
          },
          {
            "assertion": "Body includes value held on id",
            "skipped": false
          },
          {
            "assertion": "supportingService is null",
            "skipped": false
          },
          {
            "assertion": "feature is null",
            "skipped": false
          },
          {
            "assertion": "serviceRelationship is ",
            "skipped": false
          },
          {
            "assertion": "state is active",
            "skipped": false
          },
          {
            "assertion": "relatedEntity is null",
            "skipped": false
          },
          {
            "assertion": "startMode is null",
            "skipped": false
          },
          {
            "assertion": "startDate is null",
            "skipped": false
          },
          {
            "assertion": "isBundle is null",
            "skipped": false
          },
          {
            "assertion": "serviceOrderItem is null",
            "skipped": false
          },
          {
            "assertion": "place is null",
            "skipped": false
          },
          {
            "assertion": "serviceCharacteristic is null",
            "skipped": false
          },
          {
            "assertion": "note is null",
            "skipped": false
          },
          {
            "assertion": "serviceType is null",
            "skipped": false
          },
          {
            "assertion": "supportingResource is null",
            "skipped": false
          },
          {
            "assertion": "hasStarted is null",
            "skipped": false
          },
          {
            "assertion": "serviceSpecification is [object Object]",
            "skipped": false
          },
          {
            "assertion": "name is null",
            "skipped": false
          },
          {
            "assertion": "description is null",
            "skipped": false
          },
          {
            "assertion": "serviceDate is 2025-04-25T11:45:15Z",
            "skipped": false
          },
          {
            "assertion": "endDate is null",
            "skipped": false
          },
          {
            "assertion": "href is http://localhost:8080/serviceInventoryManagement/v4.0.0/service/f23cf6fb-fed2-43d0-a348-45c996565016",
            "skipped": false
          },
          {
            "assertion": "id is f23cf6fb-fed2-43d0-a348-45c996565016",
            "skipped": false
          },
          {
            "assertion": "relatedParty is null",
            "skipped": false
          },
          {
            "assertion": "isServiceEnabled is null",
            "skipped": false
          },
          {
            "assertion": "isStateful is null",
            "skipped": false
          },
          {
            "assertion": "category is null",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9d7dbd3a-d6eb-480d-8a56-29ef35af5ca0",
          "length": 18,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4f0d4fcb-d075-4473-8980-1204bf704cb4"
        },
        "item": {
          "id": "30be2774-648f-45da-b37c-0b60a0dde2f6",
          "name": "/Service/404ID",
          "request": {
            "description": {
              "content": "This operation search for one of the created Service",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "141cf386-5831-41a9-84a0-648020b34b03"
              ],
              "host": [
                "{{Service_Inventory}}service"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer 1321321"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5ac44b22-8da1-4821-9d54-6913eb142427",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 404\", function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  ""
                ],
                "_lastExecutionId": "24012abc-ed9b-4930-a4ad-d4c3c1e5e086"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This operation search for one of the created Service",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "serviceInventoryManagement",
              "v4.0.0",
              "service",
              "141cf386-5831-41a9-84a0-648020b34b03"
            ],
            "host": [
              "127",
              "0",
              "0",
              "1"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer 1321321"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.24.1",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "69b5c663-3a9a-468b-b5c5-8e425ccbb23c",
              "system": true
            },
            {
              "key": "Host",
              "value": "127.0.0.1:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "be8d602f-a518-423d-8fc2-430bc044c498",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "0"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Fri, 25 Apr 2025 11:45:16 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              114,
              101,
              97,
              115,
              111,
              110,
              34,
              58,
              34,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 11,
          "responseSize": 30
        },
        "id": "30be2774-648f-45da-b37c-0b60a0dde2f6",
        "assertions": [
          {
            "assertion": "Status code is 404",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 25659
    },
    "failures": [],
    "error": null
  }
}